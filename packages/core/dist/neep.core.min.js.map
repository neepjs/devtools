{"version":3,"file":"neep.core.min.js","sources":["../src/constant.ts","../src/Error.ts","../src/install.ts","../src/auxiliary/tags.ts","../src/helper/current.ts","../src/helper/context.ts","../src/hook.ts","../src/auxiliary/life.ts","../src/symbols.ts","../src/auxiliary/element.ts","../src/auxiliary/dev.ts","../src/auxiliary/index.ts","../src/render/id.ts","../src/render/recursive.ts","../src/render/draw.ts","../src/render/slot.ts","../src/render/props.ts","../src/render/normalize.ts","../src/render/refresh.ts","../src/render/Object.ts","../src/render/Entity.ts","../src/render/convert.ts","../src/render/Container.ts","../src/create.ts","../src/browser.ts","../src/render/index.ts"],"sourcesContent":["/**\n * Global constant\n *\n * Will be replaced by the 'rollup-plugin-replace' plug-in\n */\n\n /**\n * Neep code version\n */\nexport const version = '__VERSION__' as string;\n/**\n * Current mode\n * @enum production\n * @enum development\n */\nexport const mode = '__MODE__' as any as 'production' | 'development';\n/**\n * Is the current mode production mode\n * @description Support tree shaking\n */\nexport const isProduction = mode === 'production';\n","export default class NeepError extends Error {\n\treadonly tag: string;\n\tconstructor(message: string, tag: string = '') {\n\t\tsuper(tag ? `[${tag}] ${message}` : message);\n\t\tthis.tag = tag;\n\t}\n}\nexport function assert(v: any, message: string, tag?: string) {\n\tif (v) { return; }\n\tthrow new NeepError(message, tag);\n}","import * as monitorableApi from 'monitorable';\nimport { IRender } from './type';\nimport { isProduction } from './constant';\n\nimport { Devtools } from '../../devtools/src/type';\nimport { assert } from './Error';\n\nexport let monitorable: typeof monitorableApi;\n\nexport let value: typeof monitorableApi.value;\nexport let computed: typeof monitorableApi.computed;\nexport let isValue: typeof monitorableApi.isValue;\nexport let encase: typeof monitorableApi.encase;\nexport let recover: typeof monitorableApi.recover;\n\nfunction installMonitorable(api?: typeof monitorableApi) {\n\tif (!api) { return; }\n\tmonitorable = api;\n\tvalue = monitorable.value;\n\tcomputed = monitorable.computed;\n\tisValue = monitorable.isValue;\n\tencase = monitorable.encase;\n\trecover = monitorable.recover;\n}\n\nexport interface InstallOptions {\n\tmonitorable?: typeof monitorableApi;\n\trender?: IRender;\n\trenders?: IRender[];\n\tdevtools?: any;\n}\n\n\nlet nextFrameApi: undefined | ((fn: () => void) => void);\nexport function nextFrame(fn: () => void): void {\n\tassert(nextFrameApi, 'The basic renderer is not installed', 'install');\n\tnextFrameApi!(fn);\n}\n\nexport const renders: Record<string, IRender>\n\t= Object.create(null);\n\nexport function getRender(\n\ttype: string | number | IRender = ''\n\t): IRender {\n\tif (typeof type === 'object') { return type; }\n\treturn renders[type] || renders.default;\n}\n\nfunction addRender(render?: IRender): void {\n\tif (!render) { return; }\n\trenders[render.type] = render;\n\tif (nextFrameApi) { return; }\n\tif (!renders.default) {\n\t\trenders.default = render;\n\t}\n\tif (!nextFrameApi && render.nextFrame) {\n\t\trenders.default = render;\n\t\tnextFrameApi = render.nextFrame;\n\t}\n\n}\nfunction installRender({ render, renders}: InstallOptions) {\n\taddRender(render);\n\tif (!Array.isArray(renders)) { return; }\n\tfor (const render of renders) {\n\t\taddRender(render);\n\t}\n}\n\n\nexport const devtools: Devtools = {\n\trenderHook(){},\n};\n\nfunction installDevtools(tools?: Partial<Devtools>) {\n\tif (!tools) { return; }\n\tif (typeof tools !== 'object') { return; }\n\tconst { renderHook } = tools;\n\tif (typeof renderHook === 'function') {\n\t\tdevtools.renderHook = renderHook;\n\t}\n}\n\n\nexport default function install(apis: InstallOptions) {\n\tinstallMonitorable(apis.monitorable);\n\tinstallRender(apis);\n\tif (!isProduction) {\n\t\tinstallDevtools(apis.devtools);\n\t}\n}\n","export const ScopeSlot = 'Neep:ScopeSlot';\nexport const SlotRender = 'Neep:SlotRender';\nexport const Slot = 'Neep:Slot';\nexport const Value = 'Neep:Value';\nexport const Container = 'Neep:Container';\nexport const Deliver = 'Neep:Deliver';\nexport const Template = 'template';\nexport const Fragment = Template;\n","import NeepError from '../Error';\nimport { Entity } from '../type';\n\n/** 当前正在执行的对象 */\nexport let current: Entity | undefined;\nexport function setCurrent<T>(\n\tfn: () => T,\n\tentity: Entity,\n): T {\n\tconst oldEntity = current;\n\tcurrent = entity;\n\ttry {\n\t\tcurrent.$_valueIndex = 0;\n\t\tconst ret = fn();\n\t\tif (current.$_valueIndex !== current.$_values.length) {\n\t\t\tthrow new NeepError(\n\t\t\t\t'Inconsistent number of useValue executions',\n\t\t\t\t'life',\n\t\t\t);\n\t\t}\n\t\treturn ret;\n\t} finally {\n\t\tcurrent = oldEntity;\n\t}\n}\n\nexport function checkCurrent(\n\tname: string,\n\tinitOnly = false,\n): Entity {\n\tif (!current) {\n\t\tthrow new NeepError(\n\t\t\t`Function \\`${name}\\` can only be called within a cycle.`,\n\t\t\t'life',\n\t\t);\n\t}\n\tif (!initOnly) {\n\t\treturn current;\n\t}\n\tif (!current.created) {\n\t\treturn current;\n\t}\n\tthrow new NeepError(\n\t\t`Function \\`${name}\\` can only be called at initialization time.`,\n\t\t'life',\n\t);\n}\n","import { Context, ContextConstructor, Exposed } from '../type';\nimport { monitorable } from '../install';\n\nconst constructors: ContextConstructor[] = [];\nexport function initContext(\n\tcontext: Context,\n\texposed?: Exposed,\n): Context {\n\tfor (const constructor of constructors) {\n\t\tconstructor(context, exposed);\n\t}\n\treturn context;\n}\nexport function addContextConstructor(\n\tconstructor: ContextConstructor\n): void {\n\tconstructors.push(monitorable.safeify(constructor));\n}","import { monitorable } from './install';\nimport { Hook, Hooks, Entity } from './type';\nconst hooks: Record<string, Set<Hook>> = Object.create(null);\n\nexport function setHook<H extends Hooks>(\n\tid: H,\n\thook: Hook,\n\tentity?: Entity,\n):() => void;\nexport function setHook(\n\tid: string,\n\thook: Hook,\n\tentity?: Entity,\n): () => void;\n\nexport function setHook(\n\tid: string,\n\thook: Hook,\n\tentity?: Entity,\n):() => void {\n\tlet list = entity?.$_hooks || hooks;\n\tif (!list) { return () => {}; }\n\thook = monitorable.safeify(hook);\n\tlet set = list[id];\n\tif (!set) {\n\t\tset = new Set();\n\t\tlist[id] = set;\n\t}\n\tset.add(hook);\n\treturn () => set.delete(hook);\n}\n\nexport function callHook<H extends Hooks>(\n\tid: H,\n\texposed: Entity,\n): void;\nexport function callHook(id: string, exposed: Entity): void;\nexport function callHook(id: string, exposed: Entity): void {\n\tif (!exposed) { return; }\n\tfor (const hook of exposed.$_hooks[id] || []) {\n\t\thook(exposed);\n\t}\n\tfor (const hook of hooks[id] || []) {\n\t\thook(exposed);\n\t}\n}\n","/**********************************\n * 组件上下文环境专用 API\n * @description 简单组件不支持\n **********************************/\nimport { Value, WatchCallback } from 'monitorable';\nimport { Hooks } from '../type';\nimport { checkCurrent } from '../helper';\nimport NeepError from '../Error';\nimport { setHook } from '../hook';\nimport { isValue, value, computed } from './state';\n\n\n/**********************************\n * 状态管理类 API\n **********************************/\n/**\n * 监听指定值的变化\n * @description 本质是调用 Value 对象的 watch 方法\n * @description 但是通过此方法进行的观察，会在组件生命周期结束时自动停止观察\n * @description 此函数只有在初始化调用时有效\n * @param value 被监听的值\n * @param cb    当监听的值发送变化时调用的函数\n */\nexport function watch<T>(\n\tvalue: Value<T>,\n\tcb: WatchCallback<T>,\n): () => void;\n/**\n * 监听指定值的变化\n * @description 本质是创建调用 Value 对象的 watch 方法\n * @description 但是通过此方法进行的观察，会在组件生命周期结束时自动停止观察\n * @description 此函数只有在初始化调用时有效\n * @param value 用于计算观测值的函数\n * @param cb    当监听的值发送变化时调用的函数\n */\nexport function watch<T>(\n\tvalue: () => T,\n\tcb: (v: T, stopped: boolean) => void,\n): () => void;\n\nexport function watch<T>(\n\tvalue: Value<T> | (() => T),\n\tcb: (v: Value<T> | T, stopped: boolean) => void\n): () => void {\n\tconst entity = checkCurrent('watch');\n\tif (typeof value !== 'function') { return () => {}; }\n\tconst stop = isValue(value)\n\t\t? value.watch(cb)\n\t\t: computed(value).watch((v, s) => cb(v(), s));\n\tsetHook('beforeDestroy', () => stop(), entity);\n\treturn stop;\n}\n\nexport function useValue(): Value<any>;\nexport function useValue<T>(fn: () => T, name?: string): T;\nexport function useValue<T>(fn?: () => T, name?: string): T | Value<any>;\nexport function useValue<T>(fn?: () => T, name = 'useValue'): T | Value<any> {\n\tconst entity = checkCurrent(name);\n\tconst index = entity.$_valueIndex++;\n\tconst values = entity.$_values;\n\tif (!entity.created) {\n\t\tvalues[index] = undefined;\n\t\tconst v = typeof fn === 'function' ? fn() : value(undefined);\n\t\treturn values[index] = v;\n\t}\n\tif (index >= values.length) {\n\t\tthrow new NeepError(\n\t\t\t'Inconsistent number of useValue executions',\n\t\t\t'life',\n\t\t);\n\t}\n\treturn values[index];\n\n}\n\n/**********************************\n * 钩子类 API\n **********************************/\n/**\n * 为当前组件注册钩子\n * @param name 钩子名称\n * @param hook 钩子\n * @param initOnly 是否仅在初始化时有效\n */\nexport function hook<H extends Hooks>(\n\tname: H,\n\thook: () => void,\n\tinitOnly?: boolean,\n): undefined | (() => void);\nexport function hook(\n\tname: string,\n\thook: () => void,\n\tinitOnly?: boolean,\n): undefined | (() => void);\nexport function hook(\n\tname: string,\n\thook: () => void,\n\tinitOnly?: boolean,\n): undefined | (() => void) {\n\tconst entity = checkCurrent('setHook');\n\tif (initOnly && entity.created) { return undefined; }\n\treturn setHook(name, () => hook(), entity);\n}\n\n/**********************************\n * 配置 API\n **********************************/\n\nexport function setValue<T>(\n\tobj: any,\n\tname: string | number | symbol,\n\tvalue: T | Value<T> | (() => T),\n\topt?: boolean | ((value: T) => void),\n): void {\n\tif (\n\t\ttypeof name === 'string'\n\t\t&& ['$', '_'].includes(name[0])\n\t) {\n\t\treturn;\n\t}\n\tif (isValue(value) && opt) {\n\t\tReflect.defineProperty(obj, name, {\n\t\t\tget() { return value(); },\n\t\t\tset(v) { value(v); },\n\t\t\tconfigurable: true,\n\t\t\tenumerable: true,\n\t\t});\n\t\treturn;\n\t}\n\tif (typeof value === 'function' && opt) {\n\t\tReflect.defineProperty(obj, name, {\n\t\t\tget: value as () => T,\n\t\t\tset: typeof opt === 'function' ? opt : undefined,\n\t\t\tconfigurable: true,\n\t\t\tenumerable: true,\n\t\t});\n\t\treturn;\n\t}\n\tReflect.defineProperty(obj, name, {\n\t\tget() { return value; },\n\t\tconfigurable: true,\n\t\tenumerable: true,\n\t});\n}\n\n\n/**\n * 将 Value 导出\n * @param name 导出用的名称\n */\nexport function expose<T>(\n\tname: string | number | symbol,\n\tvalue: Value<T>,\n\tmix?: boolean,\n): void;\n/**\n * 将普通值导出\n * @param name\n * @param value\n */\nexport function expose<T>(\n\tname: string | number | symbol,\n\tvalue: T,\n): void;\n/**\n * 设置基于 getter 的导出\n * @param name\n * @param getter\n * @param nonModifiable\n */\nexport function expose<T>(\n\tname: string | number | symbol,\n\tgetter: () => T,\n\tnonModifiable: true,\n): void;\n/**\n * 设置基于 getter/setter 的导出\n * @param name\n * @param getter\n * @param setter\n */\nexport function expose<T>(\n\tname: string | number | symbol,\n\tgetter: () => T,\n\tsetter: (value: T) => void,\n): void;\nexport function expose<T>(\n\tname: string | number | symbol,\n\tvalue: T | Value<T> | (() => T),\n\topt?: boolean | ((value: T) => void),\n): void {\n\tsetValue(checkCurrent('expose', true).exposed, name, value, opt);\n}\n\n\n/**\n * 将 Value 传递给子组件\n * @param name 导出用的名称\n */\nexport function deliver<T>(\n\tname: string | number | symbol,\n\tvalue: Value<T>,\n\tmix?: boolean,\n): void;\n/**\n * 将普通值导出\n * @param name\n * @param value\n */\nexport function deliver<T>(\n\tname: string | number | symbol,\n\tvalue: T,\n): void;\n/**\n * 设置基于 getter 的传递\n * @param name\n * @param getter\n * @param nonModifiable\n */\nexport function deliver<T>(\n\tname: string | number | symbol,\n\tgetter: () => T,\n\tnonModifiable: true,\n): void;\n/**\n * 设置基于 getter/setter 的传递\n * @param name\n * @param getter\n * @param setter\n */\nexport function deliver<T>(\n\tname: string | number | symbol,\n\tgetter: () => T,\n\tsetter: (value: T) => void,\n): void;\nexport function deliver<T>(\n\tname: string | number | symbol,\n\tvalue: T | Value<T> | (() => T),\n\topt?: boolean | ((value: T) => void),\n): void {\n\tsetValue(checkCurrent('deliver', true).delivered, name, value, opt);\n}\n","export const isElementSymbol = Symbol.for('isNeepElement');\nexport const typeSymbol = Symbol.for('type');\nexport const nameSymbol = Symbol.for('name');\nexport const renderSymbol = Symbol.for('render');\n","import { Tag, NeepElement, Component } from '../type';\nimport { isElementSymbol, typeSymbol } from '../symbols';\nimport * as Tags from './tags';\n\n/**\n * 判读是否为元素\n */\nexport function isElement(v: any): v is NeepElement {\n\tif (!v) { return false; }\n\tif (typeof v !== 'object') { return false; }\n\treturn v[isElementSymbol] === true;\n}\n\nexport function createElement(\n\ttag: Tag,\n\tattrs?: {[key:string]: any},\n\t...children: any[]\n): NeepElement {\n\tattrs = attrs ? {...attrs} : {};\n\tconst node: NeepElement = {\n\t\t[isElementSymbol]: true,\n\t\ttag,\n\t\tchildren: [],\n\t};\n\tif ('key' in attrs) { node.key = attrs.key; }\n\tif ('slot' in attrs) { node.slot = attrs.slot; }\n\tif (typeof attrs.ref === 'function') { node.ref = attrs.ref; }\n\tif (tag === Tags.Value) {\n\t\tnode.value = attrs.value;\n\t\treturn node;\n\t}\n\tnode.children = children;\n\tif (tag === Tags.Template) { return node; }\n\tif (tag === Tags.SlotRender) {\n\t\tnode.render = attrs.render;\n\t\treturn node;\n\t}\n\tif (tag === Tags.ScopeSlot || tag === Tags.Slot) {\n\t\tconst { render, argv, args, name } = attrs;\n\t\tnode.render = render;\n\t\tnode.args = argv && [argv]\n\t\t\t|| Array.isArray(args) && args.length && args\n\t\t\t|| [{}];\n\n\t\tif (tag === Tags.ScopeSlot) {\n\t\t\tnode.props = { name };\n\t\t\treturn node;\n\t\t}\n\t}\n\tnode.on = {};\n\tnode.props = {};\n\tfor (let k in attrs) {\n\t\t/** 事件 */\n\t\tconst onInfo = /^(::|@|on:)([a-zA-Z0-9].*)$/.exec(k);\n\t\tif (onInfo) {\n\t\t\tnode.on[onInfo[2]] = attrs[k];\n\t\t\tcontinue;\n\t\t}\n\t\t// TODO: data\n\t\tconst nCmd = /^n([:-])([a-zA-Z0-9]+(?:\\.[a-zA-Z0-9]+)*)$/i.exec(k);\n\t\t/** 普通属性 */\n\t\tif (!nCmd) {\n\t\t\tnode.props[k] = attrs[k];\n\t\t\tcontinue;\n\t\t}\n\t}\n\treturn node;\n}\n\nexport interface elementIteratorOptions {\n\tsimple?: boolean | Component[] | ((c: Component) => boolean);\n}\n\nexport function elements(\n\tnode: any,\n\topt: elementIteratorOptions = {},\n): any[] {\n\tif (Array.isArray(node)) {\n\t\tconst list: any[][] = [];\n\t\tfor (let n of node) {\n\t\t\tlist.push(elements(n, opt));\n\t\t}\n\t\treturn ([] as any[]).concat(...list);\n\t}\n\tif (!isElement(node)) { return [node]; }\n\tlet { tag } = node;\n\tif (!tag) { return []; }\n\n\tif (([Tags.Template, Tags.ScopeSlot] as Tag[]).includes(tag)) {\n\t\treturn elements(node.children, opt);\n\t}\n\tif (typeof tag !== 'function') { return [node]; }\n\tif (tag[typeSymbol] !== 'simple') { return [node]; }\n\tconst { simple } = opt;\n\tif (!simple) { return [node]; }\n\tif (Array.isArray(simple)) {\n\t\tif (simple.includes(tag)) { return [node]; }\n\t} else if (typeof simple === 'function') {\n\t\tif (!simple(tag)) { return [node]; }\n\t}\n\treturn elements(node.children, opt);\n}\n","import { isProduction } from '../constant';\nimport { current } from '../helper';\nimport { setLabel } from '../helper/label';\n\nexport function label(text: string, color = ''): void {\n\tif (!isProduction) {\n\t\tif (!current) {\n\t\t\tsetLabel([text, color]);\n\t\t\treturn;\n\t\t}\n\t\tReflect.defineProperty(current.exposed, '$label', {\n\t\t\tvalue: [text, color],\n\t\t\tconfigurable: true,\n\t\t});\n\t}\n}\n","import * as Constant from '../constant';\nimport * as Tags from './tags';\nimport * as State from './state';\nimport * as Life from './life';\nimport * as Element from './element';\nimport * as Dev from './dev';\n\nexport * from './tags';\nexport * from './state';\nexport * from './life';\nexport * from './element';\nexport * from './dev';\n\nexport { Tags };\n\n/** 辅助 */\nexport interface Auxiliary extends\n\tReadonly<typeof Tags>,\n\tReadonly<typeof State>,\n\tReadonly<typeof Life>,\n\tReadonly<typeof Element>,\n\tReadonly<typeof Dev>,\n\tReadonly<typeof Constant>\n{}\n\nconst auxiliary: Auxiliary = {\n\t...Tags,\n\t...Life,\n\t...Element,\n\t...Dev,\n\t...Constant,\n\tget value() { return State.value },\n\tget computed() { return State.computed },\n\tget isValue() { return State.isValue },\n\tget encase() { return State.encase },\n\tget recover() { return State.recover },\n};\n\nexport function setAuxiliary<T>(\n\tname: string,\n\tvalue: T,\n): void {\n\tReflect.defineProperty(auxiliary, name, {\n\t\tvalue,\n\t\tenumerable: true,\n\t\tconfigurable: true,\n\t});\n}\nexport function defineAuxiliary<T>(\n\tname: string,\n\tget: (this: Auxiliary) => T,\n): void {\n\tReflect.defineProperty(auxiliary, name, {\n\t\tget,\n\t\tenumerable: true,\n\t\tconfigurable: true,\n\t});\n}\nexport default auxiliary;\n","import { NativeNode } from '../type';\nimport { isProduction } from '../constant';\nimport { MountedNode } from './draw';\n\nlet ids = 0;\nconst Nodes: {[key: number]: MountedNode} = {};\nlet IdMap: undefined | Map<NativeNode, number>;\nif (!isProduction) {\n\tIdMap = new Map();\n}\nexport function createMountedNode(\n\tn: Omit<MountedNode, 'id'>,\n\tid?: number,\n): MountedNode {\n\tif (!isProduction) {\n\t\tid = id || ++ids;\n\t\tconst { node } = n;\n\t\tif (node && IdMap) { IdMap.set(node, id); }\n\t\treturn Nodes[id] = {...n, id};\n\t}\n\treturn {...n, id: 0};\n}\n\nexport function recoveryMountedNode(node: MountedNode): void {\n\tif (!isProduction) {\n\t\tdelete Nodes[node.id];\n\t}\n}\n\nexport function getNode(\n\tid: number | NativeNode,\n): MountedNode | undefined {\n\tif (!isProduction) {\n\t\tif (typeof id !== 'number') {\n\t\t\tid = IdMap?.get(id) || -1;\n\t\t}\n\t\treturn Nodes[id];\n\t}\n\treturn undefined;\n}\n","export interface RecursiveArray<T> extends Array<RecursiveItem<T>>{};\nexport type RecursiveItem<T> = T | RecursiveArray<T>;\n\nexport function *recursive2iterable<T>(\n\tlist: RecursiveItem<T>,\n): Iterable<T> {\n\tif (!Array.isArray(list)) {\n\t\tyield list;\n\t\treturn;\n\t}\n\tfor (const it of list) {\n\t\tyield* recursive2iterable(it);\n\t}\n}\n","import { Tags, Template, isValue } from '../auxiliary';\nimport { IRender, NativeNode, NativeElement, Exposed, Ref } from '../type';\nimport { createMountedNode, recoveryMountedNode } from './id';\nimport { TreeNode } from './convert';\n\n/**\n * @description node / component / children 至少一个有效\n */\nexport interface MountedNode extends TreeNode {\n\tid: number;\n\tparent?: this;\n\tnode: undefined | NativeNode;\n}\n\nlet refList: (() => void)[] | undefined;\nexport function setRefList(list?: (() => void)[]) {\n\trefList = list;\n}\nfunction setRef(\n\tref?: Ref,\n\tnode?: Exposed | NativeNode,\n\tisRemove?: boolean,\n) {\n\tif (typeof ref !== 'function') { return; }\n\tif (!node) { return; }\n\tif (!refList) {\n\t\tref(node, isRemove);\n\t} else {\n\t\trefList.push(() => ref(node, isRemove));\n\t}\n}\n\ntype MountedNodes = MountedNode | MountedNode[]\n\t| (MountedNode | MountedNode[])[];\n\nfunction getLastNode(tree: MountedNodes): NativeNode {\n\tif (Array.isArray(tree)) {\n\t\treturn getLastNode(tree[tree.length - 1]);\n\t}\n\tconst { component, children, node } = tree;\n\tif (node) { return node; }\n\tif (component) { return getLastNode(component.tree); }\n\treturn getLastNode(children);\n}\n\nfunction getFirstNode(tree: MountedNodes): NativeNode {\n\tif (Array.isArray(tree)) { return getFirstNode(tree[0]); }\n\tconst { component, children, node } = tree;\n\tif (node) { return node; }\n\tif (component) { return getFirstNode(component.tree); }\n\treturn getFirstNode(children[0]);\n}\n\nexport function *getNodes(tree: MountedNodes): Iterable<NativeNode> {\n\tif (Array.isArray(tree)) {\n\t\tfor (const it of tree) {\n\t\t\tyield* getNodes(it);\n\t\t}\n\t\treturn;\n\t}\n\tconst { children, node, component } = tree;\n\tif (node) {\n\t\tyield node;\n\t\treturn;\n\t}\n\tif (component) {\n\t\tyield* getNodes(component.tree);\n\t\treturn;\n\t}\n\tyield* getNodes(children);\n}\n\nexport function unmount(iRender: IRender, tree: MountedNodes): void {\n\tif (Array.isArray(tree)) {\n\t\ttree.forEach(e => unmount(iRender, e));\n\t\treturn;\n\t}\n\tconst { component, children, node, ref } = tree;\n\trecoveryMountedNode(tree);\n\tif (node) {\n\t\tsetRef(ref, node, true);\n\t\tiRender.remove(node);\n\t\treturn;\n\t}\n\tif (component) {\n\t\tsetRef(ref, component.exposed, true);\n\t\tcomponent.unmount();\n\t\treturn;\n\t}\n\tunmount(iRender, children);\n}\n\n\nfunction replace<T extends MountedNode | MountedNode[]>(\n\tiRender: IRender,\n\tnewTree: T,\n\toldTree: MountedNode | MountedNode[],\n): T {\n\tconst next = getFirstNode(oldTree);\n\tif (!next) { return newTree; }\n\tconst parent = iRender.parent(next);\n\tif (!parent) { return newTree; }\n\tfor (const it of getNodes(newTree)) {\n\t\tiRender.insert(parent, it, next);\n\t}\n\tunmount(iRender, oldTree);\n\treturn newTree;\n}\n\nfunction updateList(\n\tiRender: IRender,\n\tsource: TreeNode[],\n\ttree: MountedNode | MountedNode[],\n): MountedNode[] {\n\tif (!source.length) {\n\t\tconst node = createItem(iRender, {tag: null, children: []});\n\t\treturn [replace(iRender, node, tree)];\n\t}\n\tif (!Array.isArray(tree)) { tree = [tree]; }\n\tconst newList: MountedNode[] = [];\n\tconst list = [...tree];\n\tconst mountedMap = new Map<MountedNode, MountedNode>();\n\tfor (const src of source) {\n\t\tconst index = list.findIndex(it =>\n\t\t\tit.tag === src.tag && it.key === src.key\n\t\t);\n\t\tif (index >= 0) {\n\t\t\tconst old = list[index];\n\t\t\tconst item = updateItem(iRender, src, old);\n\t\t\tmountedMap.set(old, item);\n\t\t\tnewList.push(item);\n\t\t\tlist.splice(index, 1);\n\t\t} else {\n\t\t\tconst item = createItem(iRender, src);\n\t\t\tnewList.push(item);\n\t\t}\n\t}\n\tif (!mountedMap.size) {\n\t\treturn replace(iRender, newList, list);\n\t}\n\tunmount(iRender, list);\n\ttree = tree.filter(t => mountedMap.has(t));\n\tconst last = getLastNode(tree[tree.length - 1]);\n\tconst parent = iRender.parent(last);\n\tif (!parent) { return newList; }\n\tlet next = iRender.next(last);\n\t// 调整次序\n\tfor(let i = newList.length - 1; i >= 0; i--) {\n\t\tconst item = newList[i];\n\t\tconst index = tree.findIndex(o => mountedMap.get(o) === item);\n\t\tif (index >= 0) {\n\t\t\tfor (const it of tree.splice(index)) {\n\t\t\t\tmountedMap.delete(it);\n\t\t\t}\n\t\t} else {\n\t\t\tfor (const it of getNodes(item)) {\n\t\t\t\tiRender.insert(parent, it, next);\n\t\t\t}\n\t\t}\n\t\tnext = getFirstNode(item) || next;\n\t}\n\treturn newList;\n}\n/**\n * 更新树\n * @param tree 已有树\n * @param source 用于替换的源\n * @param iRender Neep 对象\n */\nfunction updateAll(\n\tiRender: IRender,\n\tsource: (TreeNode | TreeNode[])[],\n\ttree: (MountedNode | MountedNode[])[],\n): (MountedNode | MountedNode[])[] {\n\tlet index = 0;\n\tlet length = Math.min(source.length, source.length || 1);\n\tconst list: (MountedNode | MountedNode[])[] = [];\n\tfor (; index < length; index++) {\n\t\tconst src = source[index];\n\t\tif (Array.isArray(src)) {\n\t\t\tlist.push(updateList(iRender, src, tree[index]));\n\t\t} else {\n\t\t\tlist.push(updateItem(iRender, src, tree[index]));\n\t\t}\n\t}\n\tlength = Math.max(source.length, tree.length);\n\tif (tree.length > length) {\n\t\t\t// 销毁多余项\n\t\t\tfor (; index < length; index++) {\n\t\t\tunmount(iRender, tree[index]);\n\t\t}\n\t}\n\tif (source.length > length) {\n\t\t// 创建多余项\n\t\tconst last = getLastNode(list[list.length - 1]);\n\t\tconst parent = iRender.parent(last);\n\t\tconst next = iRender.next(last);\n\t\tfor (; index < length; index++) {\n\t\t\tconst src = source[index];\n\t\t\tconst item = Array.isArray(src)\n\t\t\t\t? createList(iRender, src)\n\t\t\t\t: createItem(iRender, src);\n\t\t\tlist.push(item);\n\t\t\tif (!parent) { continue; }\n\t\t\tfor (const it of getNodes(item)) {\n\t\t\t\tiRender.insert(parent, it, next);\n\t\t\t}\n\t\t}\n\t}\n\treturn list;\n}\n\n/**\n * 更新树节点\n * @param iRender Neep 对象\n * @param tree 已有树\n * @param source 用于替换的源\n */\nfunction updateItem(\n\tiRender: IRender,\n\tsource: TreeNode,\n\ttree: MountedNode | MountedNode[],\n): MountedNode {\n\tif (Array.isArray(tree)) {\n\t\tconst index = tree.findIndex(it =>\n\t\t\tit.tag === source.tag && it.component === source.component\n\t\t);\n\t\tif (index < 0) {\n\t\t\treturn replace(iRender, createItem(iRender, source), tree);\n\t\t}\n\t\tconst all = tree;\n\t\t[tree] = tree.splice(index, 1);\n\t\tunmount(iRender, all);\n\t}\n\tconst { tag, component } = source;\n\tconst ref = source.ref !== tree.ref && source.ref || undefined;\n\tif (tag !== tree.tag || component !== tree.component) {\n\t\treturn replace(iRender, createItem(iRender, source), tree);\n\t}\n\tif (!tag) { return tree; }\n\tif (typeof tag !== 'string' || tag === Tags.Container) {\n\t\tif (!component) {\n\t\t\t// TODO: ref\n\t\t\treturn createMountedNode({\n\t\t\t\t...source,\n\t\t\t\tnode: undefined,\n\t\t\t\tcomponent: undefined,\n\t\t\t\tchildren: draw(\n\t\t\t\t\tiRender,\n\t\t\t\t\tsource.children,\n\t\t\t\t\ttree.children,\n\t\t\t\t),\n\t\t\t}, tree.id);\n\t\t}\n\t\tsetRef(ref, component.exposed);\n\t\treturn createMountedNode({\n\t\t\t...source,\n\t\t\tnode: undefined,\n\t\t\tcomponent,\n\t\t\tchildren: [],\n\t\t}, tree.id);\n\t}\n\tif (tag === Tags.Value) {\n\t\tlet value = source.value;\n\t\tif (isValue(value)) { value = value(); }\n\t\tif(tree.value === value) {\n\t\t\tsetRef(ref, tree.node);\n\t\t\treturn createMountedNode({\n\t\t\t\t...tree,\n\t\t\t\t...source,\n\t\t\t\tvalue,\n\t\t\t\tchildren: [],\n\t\t\t}, tree.id);\n\t\t}\n\t\treturn replace(iRender, createValue(iRender, source, value), tree);\n\t}\n\tif (tag === Template || tag.substr(0, 5) === 'Neep:') {\n\t\t// TODO: ref\n\t\treturn createMountedNode({\n\t\t\t...source,\n\t\t\tnode: undefined,\n\t\t\tcomponent: undefined,\n\t\t\tchildren: updateAll(\n\t\t\t\tiRender,\n\t\t\t\tsource.children,\n\t\t\t\ttree.children,\n\t\t\t),\n\t\t}, tree.id);\n\t}\n\tconst { node } = tree;\n\tiRender.update(\n\t\tnode as NativeElement,\n\t\tsource.props || {},\n\t\tisValue,\n\t);\n\tsetRef(ref, node);\n\tif (!source.children.length && !tree.children.length) {\n\t\treturn createMountedNode(\n\t\t\t{\n\t\t\t\t...tree,\n\t\t\t\t...source,\n\t\t\t\tchildren: [],\n\t\t\t},\n\t\t\ttree.id);\n\t}\n\tif (!source.children.length && tree.children.length) {\n\t\tunmount(iRender, tree.children);\n\t}\n\tif (source.children.length && !tree.children.length) {\n\t\tconst children = createAll(iRender, source.children);\n\t\tfor (const it of getNodes(children)) {\n\t\t\tiRender.insert(node as NativeElement, it);\n\t\t}\n\t\treturn createMountedNode({\n\t\t\t...tree,\n\t\t\t...source,\n\t\t\tchildren,\n\t\t}, tree.id);\n\t}\n\treturn createMountedNode({\n\t\t...tree, ...source,\n\t\tchildren: updateAll(\n\t\t\tiRender,\n\t\t\tsource.children,\n\t\t\ttree.children,\n\t\t),\n\t}, tree.id);\n}\n\nfunction createValue(\n\tiRender: IRender,\n\tsource: TreeNode,\n\tvalue: any,\n): MountedNode {\n\tlet { ref } = source;\n\tif (iRender.isNode(value)) {\n\t\tsetRef(ref, value);\n\t\treturn createMountedNode({\n\t\t\t...source,\n\t\t\tvalue,\n\t\t\tnode: value,\n\t\t\tchildren: [],\n\t\t\tcomponent: undefined,\n\t\t});\n\t}\n\tconst type = typeof value;\n\tlet node: NativeNode | undefined;\n\tif (\n\t\ttype === 'bigint'\n\t\t|| type === 'boolean'\n\t\t|| type === 'number'\n\t\t|| type === 'string'\n\t\t|| type === 'symbol'\n\t\t|| value instanceof RegExp\n\t) {\n\t\tnode = iRender.text(String(value));\n\t} else if (value instanceof Date) {\n\t\tnode = iRender.text(value.toISOString());\n\t} else if (type === 'object' && value) {\n\t\tnode = iRender.text(String(value));\n\t\t// TODO: 对象处理\n\t}\n\tif (!node) { node = iRender.placeholder(); }\n\tsetRef(ref, node);\n\treturn createMountedNode({\n\t\t...source,\n\t\tvalue,\n\t\tnode,\n\t\tcomponent: undefined,\n\t\tchildren: [],\n\t});\n}\n\nfunction createAll(\n\tiRender: IRender,\n\tsource: (TreeNode | TreeNode[])[],\n): (MountedNode | MountedNode[])[] {\n\tif (!source.length) {\n\t\treturn [createMountedNode({\n\t\t\ttag: null,\n\t\t\tnode: iRender.placeholder(),\n\t\t\tcomponent: undefined,\n\t\t\tchildren: [],\n\t\t})];\n\t}\n\n\treturn source.map(item =>\n\t\tArray.isArray(item)\n\t\t\t? createList(iRender, item)\n\t\t\t: createItem(iRender, item)\n\t);\n}\n\nfunction createList(\n\tiRender: IRender,\n\tsource: TreeNode[],\n): MountedNode[] {\n\tif (source.length) {\n\t\treturn source.map(it => createItem(iRender, it));\n\t}\n\treturn [createMountedNode({\n\t\ttag: null,\n\t\tnode: iRender.placeholder(),\n\t\tcomponent: undefined,\n\t\tchildren: [],\n\t})];\n}\n\nfunction createItem(\n\tiRender: IRender,\n\tsource: TreeNode,\n): MountedNode {\n\tconst { tag, ref, component } = source;\n\tif (!tag) {\n\t\tconst node = iRender.placeholder();\n\t\tsetRef(ref, node);\n\t\treturn createMountedNode({\n\t\t\ttag: null,\n\t\t\tnode,\n\t\t\tcomponent: undefined,\n\t\t\tchildren: [],\n\t\t});\n\t}\n\tif (typeof tag !== 'string' || tag === Tags.Container) {\n\t\tif (!component) {\n\t\t\t// TODO: ref\n\t\t\treturn createMountedNode({\n\t\t\t\t...source,\n\t\t\t\tnode: undefined,\n\t\t\t\tcomponent: undefined,\n\t\t\t\tchildren: draw(iRender, source.children),\n\t\t\t});\n\t\t}\n\t\tcomponent.mount();\n\t\tsetRef(ref, component.exposed);\n\t\treturn createMountedNode({\n\t\t\t...source,\n\t\t\tnode: undefined,\n\t\t\tcomponent, children: [],\n\t\t});\n\t}\n\tif (tag === Tags.Value) {\n\t\treturn createValue(iRender, source, source.value);\n\t}\n\tif (tag === Template || tag.substr(0, 5) === 'Neep:') {\n\t\t// TODO: ref\n\t\treturn createMountedNode({\n\t\t\t...source,\n\t\t\tnode: undefined,\n\t\t\tcomponent: undefined,\n\t\t\tchildren: createAll(iRender, source.children),\n\t\t});\n\t}\n\tconst node = iRender.create(tag, source.props || {}, isValue);\n\tsetRef(ref, node);\n\tlet children: (MountedNode | MountedNode[])[] = [];\n\tif (source.children) {\n\t\tchildren = createAll(iRender, source.children);\n\t\tfor (const it of getNodes(children)) {\n\t\t\tiRender.insert(node, it);\n\t\t}\n\t}\n\treturn createMountedNode({\n\t\t...source,\n\t\tnode,\n\t\tcomponent: undefined,\n\t\tchildren,\n\t});\n}\n\nexport default function draw(\n\tiRender: IRender,\n\tsource: (TreeNode | TreeNode[])[],\n\ttree?: (MountedNode | MountedNode[])[],\n): (MountedNode | MountedNode[])[] {\n\tif (tree) {\n\t\treturn updateAll(iRender, source, tree);\n\t}\n\treturn createAll(iRender, source);\n}\n","import { NeepElement, SlotFn, Slots, IRender } from '../type';\nimport { isElement, SlotRender, ScopeSlot } from '../auxiliary';\nimport { isElementSymbol } from '../symbols';\nimport { isProduction } from '../constant';\n\n\nexport function getSlots(\n\tiRender: IRender,\n\tchildren: any[],\n\tslots: Record<string | symbol, any[]>,\n\tnative = false,\n): any[] {\n\t/** 原始对象 */\n\tconst nativeList: any[] = [];\n\tfor (const it of children) {\n\t\tif (Array.isArray(it)) {\n\t\t\tconst list: Record<string | symbol, any[]>\n\t\t\t\t= Object.create(null);\n\t\t\tnativeList.push(getSlots(iRender, it, list, native));\n\t\t\tfor (const k of Reflect.ownKeys(list) as string[]) {\n\t\t\t\tif (k in slots) {\n\t\t\t\t\tslots[k].push(list[k]);\n\t\t\t\t} else {\n\t\t\t\t\tslots[k] = [list[k]];\n\t\t\t\t}\n\t\t\t}\n\t\t\tcontinue;\n\t\t}\n\t\tif (native) {\n\t\t\tif (iRender.isNode(it)) {\n\t\t\t\tnativeList.push(it);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (!isElement(it)) {\n\t\t\t\tnativeList.push(it);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (it.tag !== SlotRender) {\n\t\t\t\tnativeList.push(it);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\t\tconst slot = isElement(it) && it.slot || 'default';\n\t\tconst el = isElement(it) ? {\n\t\t\t...it, slot: undefined,\n\t\t\tprops: {...it.props, slot: undefined },\n\t\t} : it;\n\t\tif (slot in slots) {\n\t\t\tslots[slot].push(el);\n\t\t} else {\n\t\t\tslots[slot] = [el];\n\t\t}\n\t}\n\treturn nativeList;\n}\nfunction renderSlots(\n\tlist: any[],\n\t...props: any\n): any[] {\n\treturn list.map(it => {\n\t\tif (Array.isArray(it)) {\n\t\t\treturn renderSlots(it, ...props);\n\t\t}\n\t\tif (!isElement(it)) { return it; }\n\t\tif (it.tag !== SlotRender) {\n\t\t\treturn {\n\t\t\t\t...it,\n\t\t\t\tslot: undefined,\n\t\t\t} as NeepElement;\n\t\t}\n\t\tif (typeof it.render === 'function') {\n\t\t\treturn it.render(...props);\n\t\t}\n\t\treturn it.children;\n\t});\n}\nfunction createSlots(\n\tname: string,\n\tlist: any[],\n): SlotFn {\n\tconst slot = (...props: any) => ({\n\t\t[isElementSymbol]: true,\n\t\ttag: ScopeSlot,\n\t\tchildren: renderSlots(list, ...props),\n\t\tinserted: true,\n\t\tlabel: isProduction ? undefined : [`[${name}]`, '#00F'],\n\t} as NeepElement);\n\tslot.children = list;\n\treturn slot;\n}\nexport function setSlots(\n\tchildren: {[key: string]: any[]},\n\tslots: Slots = Object.create(null),\n) {\n\tfor (const k of Reflect.ownKeys(slots)) {\n\t\tif (!(k in children)) {\n\t\t\tdelete slots[k as string];\n\t\t}\n\t}\n\tfor (const k of Reflect.ownKeys(children) as string[]) {\n\t\tslots[k] = createSlots(k, children[k]);\n\t}\n\treturn slots;\n}\n","import { isValue } from '../auxiliary';\n\nexport function updateProps(\n\tobj: any,\n\tprops: any,\n\toldProps: any = {},\n\tdefine = false,\n) {\n\tconst newKeys = new Set(Reflect.ownKeys(props));\n\tfor (const k of Reflect.ownKeys(obj)) {\n\t\tif (!newKeys.has(k)) {\n\t\t\tdelete obj[k];\n\t\t}\n\t}\n\tif (!define) {\n\t\tfor (const k of newKeys) {\n\t\t\tobj[k] = props[k];\n\t\t}\n\t\treturn obj;\n\t}\n\tfor (const k of newKeys) {\n\t\tconst value = props[k];\n\t\tif (k in oldProps && oldProps[k] === value) {\n\t\t\tcontinue;\n\t\t}\n\t\tif (isValue(value)) {\n\t\t\tReflect.defineProperty(obj, k, {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tget() { return value(); },\n\t\t\t\tset(v) { value(v); }\n\t\t\t});\n\t\t\tcontinue;\n\t\t}\n\t\tReflect.defineProperty(obj, k, {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: true,\n\t\t\tvalue,\n\t\t});\n\t}\n\treturn obj;\n}","import {\n\tNeepElement, Exposed, Delivered,\n\tRender, NeepNode, Slots, Context, IRender, Component,\n} from '../type';\nimport { typeSymbol } from '../symbols';\nimport { isProduction } from '../constant';\nimport auxiliary, { isElement, Tags } from '../auxiliary';\nimport { renderSymbol, isElementSymbol } from '../symbols';\nimport { getLabel } from '../helper/label';\nimport Container from './Container';\nimport Entity from './Entity';\nimport { getSlots, setSlots } from './slot';\nimport { initContext } from '../helper/context';\nimport { updateProps } from './props';\n\nfunction execSimple(\n\tnObject: Container | Entity,\n\tdelivered: Delivered,\n\tnode: NeepElement,\n\ttag: Component,\n\tchildren: any[],\n) {\n\tconst { iRender } = nObject.container;\n\tconst slotMap = Object.create(null);\n\tgetSlots(iRender, children, slotMap);\n\tconst slots = setSlots(slotMap);\n\tconst context: Context = initContext({\n\t\tslots,\n\t\tcreated: false,\n\t\tparent: nObject.exposed,\n\t\tdelivered,\n\t\tchildren: new Set<Exposed>(),\n\t\tchildNodes: children,\n\t\trefresh(f) { nObject.refresh(f); }\n\t});\n\tif (!isProduction) { getLabel(); }\n\tconst result = tag({...node.props}, context, auxiliary);\n\tlet label: [string, string] | undefined;\n\tif (!isProduction) { label = getLabel(); }\n\tconst nodes = exec(nObject, delivered, renderNode(\n\t\tiRender,\n\t\tresult,\n\t\tcontext,\n\t\ttag[renderSymbol],\n\t), slots);\n\n\treturn {\n\t\t...node,\n\t\tchildren: Array.isArray(nodes) ? nodes : [nodes],\n\t\tlabel,\n\t} as NeepElement;\n}\n\nfunction execSlot(\n\tnode: NeepElement,\n\tslots: Slots,\n\tchildren: any[],\n\targs: any[] = [{}],\n): NeepElement {\n\tconst slotName = node.props?.name || 'default';\n\tconst slot = slots[slotName];\n\tif (typeof slot === 'function') {\n\t\treturn {\n\t\t\t...node,\n\t\t\t...slot(...args),\n\t\t};\n\t}\n\tconst { render } = node;\n\tconst label: [string, string] | undefined = isProduction\n\t\t? undefined\n\t\t: [`[${ slotName }]`, '#00F'];\n\treturn {\n\t\t...node,\n\t\ttag: Tags.ScopeSlot,\n\t\tlabel,\n\t\tchildren:\n\t\t\ttypeof render !== 'function' ? children : render(...args),\n\t};\n}\n\nfunction exec(\n\tnObject: Container | Entity,\n\tdelivered: Delivered,\n\tnode: any,\n\tslots: Slots,\n\tnative = false,\n): any {\n\tif (Array.isArray(node)) {\n\t\treturn node.map(n =>\n\t\t\texec(nObject, delivered, n, slots, native)\n\t\t);\n\t}\n\tif (!isElement(node)) { return node; }\n\tlet { tag, inserted, args = [{}] } = node;\n\tif (tag === Tags.Deliver) {\n\t\tconst props = { ...node.props };\n\t\tdelete props.ref;\n\t\tdelete props.slot;\n\t\tdelete props.key;\n\t\tconst newDelivered = Object.create(delivered);\n\t\tupdateProps(newDelivered, props || {}, {}, true);\n\t\treturn {\n\t\t\t...node,\n\t\t\ttag,\n\t\t\t$__neep__delivered: newDelivered,\n\t\t\tchildren: node.children.map(n => exec(\n\t\t\t\tnObject,\n\t\t\t\tnewDelivered,\n\t\t\t\tn,\n\t\t\t\tslots,\n\t\t\t\tnative,\n\t\t\t)),\n\t\t};\n\t}\n\n\tconst children = node.children\n\t\t.map(n => exec(nObject, delivered, n, slots, native));\n\n\tif (typeof tag === 'function') {\n\t\tif (tag[typeSymbol] === 'simple') {\n\t\t\treturn execSimple(nObject, delivered, node, tag, children);\n\t\t}\n\t\treturn { ...node, $__neep__delivered: delivered, children, tag };\n\n\t}\n\tif (tag === Tags.Slot) {\n\t\ttag = native ? 'slot' : Tags.ScopeSlot;\n\t}\n\tif (tag !== Tags.ScopeSlot || inserted) {\n\t\treturn { ...node, children, tag };\n\t}\n\treturn execSlot(node, slots, children, args);\n}\n\n\n\nfunction renderNode<R extends object = object>(\n\tiRender: IRender,\n\tnode: R | NeepNode | NeepNode[] | undefined | null,\n\tcontext: Context,\n\trender?: Render,\n): NeepNode[] {\n\tif (Array.isArray(node)) { return node; }\n\tif (isElement(node)) { return [node]; }\n\tif (node === undefined || node === null) {\n\t\treturn [{ [isElementSymbol]: true, tag: null, children: [] }];\n\t}\n\tif (!iRender.isNode(node) && typeof node === 'object' && render) {\n\t\tnode = render(node, context, auxiliary);\n\t}\n\tif (isElement(node)) { return [node]; }\n\tif (node === undefined || node === null) {\n\t\treturn [{ [isElementSymbol]: true, tag: null, children: [] }];\n\t}\n\treturn [{\n\t\t[isElementSymbol]: true,\n\t\ttag: Tags.Value,\n\t\tvalue: node,\n\t\tchildren: [],\n\t}];\n}\n\n\nexport default function normalize(\n\tnObject: Entity,\n\tresult: any,\n) {\n\treturn exec(\n\t\tnObject,\n\t\tnObject.delivered,\n\t\trenderNode(\n\t\t\tnObject.iRender,\n\t\t\tresult,\n\t\t\tnObject.context,\n\t\t\tnObject.component[renderSymbol],\n\t\t),\n\t\tnObject.context.slots,\n\t\tBoolean(nObject.native),\n\t);\n}\n","import NeepObject from \"./Object\";\n\nlet delayedRefresh = 0;\nconst objectSet = new Set<NeepObject>();\nexport function wait(obj: NeepObject) {\n\tif (delayedRefresh <= 0) { return false; }\n\tobjectSet.add(obj);\n\treturn true;\n}\nfunction run() {\n\tif (delayedRefresh > 0) { return; }\n\tconst list = [...objectSet];\n\tobjectSet.clear();\n\tlist.forEach(o => o.refresh());\n}\nasync function asyncRefresh<T>(f: () => PromiseLike<T> | T): Promise<T> {\n\ttry {\n\t\tdelayedRefresh++;\n\t\treturn await f();\n\t} finally {\n\t\tdelayedRefresh--;\n\t\trun();\n\t}\n}\nexport default function refresh<T>(f: () => T, async?: false): T;\nexport default function refresh<T>(\n\tf: () => PromiseLike<T> | T,\n\tasync: true,\n): Promise<T>;\nexport default function refresh<T>(\n\tf: () => PromiseLike<T> | T,\n\tasync?: boolean,\n): PromiseLike<T> | T;\nexport default function refresh<T>(\n\tf: () => PromiseLike<T> | T,\n\tasync?: boolean,\n): PromiseLike<T> | T {\n\tif (async) { return asyncRefresh(f); }\n\ttry {\n\t\tdelayedRefresh++;\n\t\treturn f();\n\t} finally {\n\t\tdelayedRefresh--;\n\t\trun();\n\t}\n}","import {\n\tExposed, Delivered,\n\tEntity as ComponentEntity,\n\tNativeComponent,\n\tHook, Hooks, NeepNode, IRender,\n} from '../type';\nimport { callHook, setHook } from '../hook';\nimport { MountedNode } from './draw';\nimport Container from './Container';\nimport convert, { TreeNode } from './convert';\nimport { wait } from './refresh';\nimport { monitorable } from '../install';\n\nfunction createExposed(obj: NeepObject): Exposed {\n\tconst cfg: { [K in Exclude<keyof Exposed, '$label'>]-?:\n\t\t{ configurable: true, value: Exposed[K] }\n\t\t| { configurable: true, get(): Exposed[K] }\n\t} = {\n\t\t$parent: { configurable: true, get: () => obj.parent?.exposed },\n\t\t$component: { configurable: true, value: null },\n\t\t$isContainer: { configurable: true, value: false },\n\t\t$created: { configurable: true, get: () => obj.created },\n\t\t$destroyed: { configurable: true, get: () => obj.destroyed },\n\t\t$mounted: { configurable: true, get: () => obj.mounted },\n\t\t$unmounted: { configurable: true, get: () => obj.unmounted },\n\t};\n\tconst exposed: Exposed = Object.create(null, cfg);\n\treturn exposed;\n}\n\nlet completeList: (() => void)[] | undefined;\nexport function setCompleteList(list?: (() => void)[]) {\n\tcompleteList = list;\n}\nexport function complete(it: () => void) {\n\tif (!completeList) {\n\t\tit();\n\t} else {\n\t\tcompleteList.push(it);\n\t}\n}\n\nfunction createEntity(obj: NeepObject): ComponentEntity {\n\tconst cfg: { [K in keyof ComponentEntity]-?:\n\t\t{ configurable: true, value: ComponentEntity[K], writable?: boolean }\n\t\t| { configurable: true, get(): ComponentEntity[K] }\n\t} = {\n\t\texposed: { configurable: true, get: () => obj.exposed },\n\t\tdelivered: { configurable: true, get: () => obj.delivered },\n\t\tparent: { configurable: true, get: () => obj.parent?.entity },\n\t\tcomponent: { configurable: true, value: null },\n\t\tisContainer: { configurable: true, value: false },\n\t\tcreated: { configurable: true, get: () => obj.created },\n\t\tdestroyed: { configurable: true, get: () => obj.destroyed },\n\t\tmounted: { configurable: true, get: () => obj.mounted },\n\t\tunmounted: { configurable: true, get: () => obj.unmounted },\n\t\t$_hooks: { configurable: true, value: Object.create(null) },\n\t\t$_valueIndex: { configurable: true, value: 0, writable: true },\n\t\t$_values: { configurable: true, value: [] },\n\t\tcallHook: {\n\t\t\tconfigurable: true,\n\t\t\tvalue(h: string) { callHook(h, entity); },\n\t\t},\n\t\tsetHook: {\n\t\t\tconfigurable: true,\n\t\t\tvalue(id: string, hook: Hook) {\n\t\t\t\treturn setHook(id, hook, entity);\n\t\t\t},\n\t\t},\n\t\trefresh: {\n\t\t\tconfigurable: true,\n\t\t\tvalue: obj.refresh.bind(obj),\n\t\t},\n\t};\n\tconst entity: ComponentEntity = Object.create(null, cfg);\n\treturn entity;\n}\n\nexport default class NeepObject {\n\treadonly iRender: IRender;\n\t/** 接受到的呈递值 */\n\treadonly parentDelivered: Delivered;\n\t/** 向后代呈递的值 */\n\treadonly delivered: Delivered;\n\t/** 组件暴露值 */\n\treadonly exposed: Exposed = createExposed(this);\n\t/** 组件实体 */\n\treadonly entity: ComponentEntity = createEntity(this);\n\t/** 父组件 */\n\tparent?: NeepObject;\n\t/** 原生组件 */\n\tnative: NativeComponent | undefined;\n\t/** 状态 */\n\tcreated: boolean = false;\n\tdestroyed: boolean = false;\n\tmounted: boolean = false;\n\tunmounted: boolean = false;\n\t/**  子组件的暴露值 */\n\treadonly children: Set<Exposed> = new Set();\n\t/** The subtree mounted on the parent node */\n\ttree: (MountedNode | MountedNode[])[] = [];\n\treadonly container: Container;\n\tconstructor(\n\t\tiRender: IRender,\n\t\tparent?: NeepObject,\n\t\tdelivered: Delivered = parent?.delivered || Object.create(null),\n\t\tcontainer?: Container,\n\t) {\n\t\tthis.iRender = iRender;\n\t\tthis.parentDelivered = delivered;\n\t\tthis.delivered = Object.create(delivered);\n\t\tif (parent) {\n\t\t\tthis.parent = parent;\n\t\t}\n\t\tthis.container = container || this as any as Container;\n\t}\n\t/** 结果渲染函数 */\n\tprotected _render: () => NeepNode[] = () => [];\n\n\tget canRefresh(): boolean {\n\t\tif (wait(this)) { return false; }\n\t\treturn !this._delayedRefresh;\n\t}\n\tprotected get needRefresh(): boolean {\n\t\tif (wait(this)) { return false; }\n\t\tif (this._delayedRefresh) { return false; }\n\t\tconst needRefresh = this._needRefresh;\n\t\tthis._needRefresh = false;\n\t\treturn needRefresh;\n\t}\n\t/** 是否需要继续刷新 */\n\tprotected _needRefresh = false;\n\tprivate _delayedRefresh = 0;\n\t/** 是否为刷新中 */\n\tprivate _refreshing = false;\n\t/** 渲染结果 */\n\tprotected _nodes: (TreeNode | TreeNode[])[] = [];\n\tprotected requestDraw() { }\n\tasync asyncRefresh<T>(f: () => PromiseLike<T> | T): Promise<T> {\n\t\ttry {\n\t\t\tthis._delayedRefresh++;\n\t\t\treturn await f();\n\t\t} finally {\n\t\t\tthis._delayedRefresh--;\n\t\t\tthis.refresh();\n\t\t}\n\t}\n\trefresh(): void;\n\trefresh<T>(f: () => T, async?: false): T;\n\trefresh<T>(f: () => PromiseLike<T> | T, async: true): Promise<T>;\n\trefresh<T>(\n\t\tf: () => PromiseLike<T> | T,\n\t\tasync?: boolean,\n\t): PromiseLike<T> | T;\n\trefresh<T>(\n\t\tf?: () => PromiseLike<T> | T,\n\t\tasync?: boolean,\n\t): PromiseLike<T> | T | undefined;\n\trefresh<T>(\n\t\tf?: () => PromiseLike<T> | T,\n\t\tasync?: boolean,\n\t): PromiseLike<T> | T | undefined {\n\t\tif (typeof f === 'function') {\n\t\t\tif (async) { return this.asyncRefresh(f); }\n\t\t\ttry {\n\t\t\t\tthis._delayedRefresh++;\n\t\t\t\treturn f();\n\t\t\t} finally {\n\t\t\t\tthis._delayedRefresh--;\n\t\t\t\tif (this._delayedRefresh <= 0) {\n\t\t\t\t\tthis.refresh();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (this.destroyed) { return; }\n\t\tthis._needRefresh = true;\n\t\tif (!this.created) { return; }\n\n\t\tif (this._refreshing) { return; }\n\t\tthis._refreshing = true;\n\n\t\tlet nodes: NeepNode[] | undefined;\n\t\twhile(this.needRefresh) {\n\t\t\tnodes = this._render();\n\t\t\tif (this.destroyed) { return; }\n\t\t}\n\t\tthis._refreshing = false;\n\t\tif (!this.canRefresh) { return; }\n\t\tif (!nodes) { return; }\n\n\t\tthis._nodes = convert(this, nodes, this._nodes);\n\t\tif (!this.mounted) { return; }\n\t\tif (this.destroyed) { return; }\n\t\tif (this.unmounted) { return; }\n\t\tthis.requestDraw();\n\t}\n\tcallHook<H extends Hooks>(id: H): void;\n\tcallHook(id: string): void;\n\tcallHook(id: string): void {\n\t\tcallHook(id, this.entity);\n\t}\n\n\tchildNodes: any[] = [];\n\t/** 更新属性及子代 */\n\tprotected _update(props: object, children: any[]): void {\n\t\tthis.childNodes = children;\n\t}\n\t/** 更新属性及子代 */\n\tupdate(props: object, children: any[]): void {\n\t\tthis._update(props, children);\n\t}\n\n\n\tprivate __executed_destroy = false;\n\tprivate __executed_mount = false;\n\tprivate __executed_mounted = false;\n\tprotected _destroy() { }\n\tdestroy() {\n\t\tif (this.__executed_destroy) { return; }\n\t\tthis.__executed_destroy = true;\n\t\tthis.callHook('beforeDestroy');\n\t\tthis._destroy();\n\t\tthis.callHook('destroyed');\n\t\tthis.destroyed = true;\n\t}\n\tprotected _mount() { }\n\tmount() {\n\t\tif (this.__executed_destroy) { return; }\n\t\tif (this.__executed_mount) { return; }\n\t\tthis.__executed_mount = true;\n\t\tthis.callHook('beforeMount');\n\t\tconst result = monitorable.exec(\n\t\t\t() => {\n\t\t\t\tthis._mount();\n\t\t\t\tthis.mounted = true;\n\t\t\t},\n\t\t\tc => c && this.requestDraw(),\n\t\t\t{ postpone: true }\n\t\t);\n\t\tthis._cancelDrawMonitor = result.stop;\n\t\tcomplete(() => this.callHook('mounted'));\n\t}\n\tprotected _unmount() { }\n\tunmount() {\n\t\tif (!this.mounted) { return; }\n\t\tif (this.__executed_mounted) { return; }\n\t\tthis.__executed_mounted = true;\n\t\tthis.callHook('beforeUnmount');\n\t\tthis._unmount();\n\t\tthis.callHook('unmounted');\n\t\tthis.unmounted = true;\n\t}\n\t_draw() {}\n\t_cancelDrawMonitor?: () => void;\n\tdraw() {\n\t\tif (this.__executed_destroy) { return; }\n\t\tthis._cancelDrawMonitor?.();\n\t\tthis.callHook('beforeUpdate');\n\t\tconst result = monitorable.exec(\n\t\t\t() => this._draw(),\n\t\t\tc => c && this.requestDraw(),\n\t\t\t{ postpone: true }\n\t\t);\n\t\tthis._cancelDrawMonitor = result.stop;\n\t\tcomplete(() => this.callHook('updated'));\n\t}\n}","import { Component, NeepNode, Slots, Context, Delivered, NativeShadow } from '../type';\nimport auxiliary, { createElement, Value } from '../auxiliary';\nimport { monitorable } from '../install';\nimport { setCurrent } from '../helper/current';\nimport convert, { destroy, TreeNode } from './convert';\nimport draw, { unmount, MountedNode, getNodes } from './draw';\nimport normalize from './normalize';\nimport { getSlots, setSlots } from './slot';\nimport NeepObject from './Object';\nimport { initContext } from '../helper/context';\nimport { updateProps } from './props';\nimport { typeSymbol } from '../symbols';\n\nfunction update(\n\tnObject: Entity<any, any>,\n\tprops: any,\n\tchildren:any[],\n) {\n\tupdateProps(nObject.props, props);\n\n\tconst slots = Object.create(null);\n\tconst {\n\t\tnative,\n\t\tiRender,\n\t} = nObject;\n\tconst childNodes = getSlots(\n\t\tiRender,\n\t\tchildren,\n\t\tslots,\n\t\tBoolean(native),\n\t);\n\tsetSlots(slots, nObject.slots);\n\tif (!native) { return; }\n\tnObject.nativeNodes\n\t\t= convert(nObject, childNodes, nObject.nativeNodes);\n\tif (!nObject.mounted) { return; }\n\tnObject.requestDraw();\n}\n\nfunction createContext<\n\tP extends object = object,\n\tR extends object = object\n>(nObject: Entity<P, R>): Context {\n\treturn initContext({\n\t\tslots: nObject.slots,\n\t\tget created() { return nObject.created; },\n\t\tget parent() { return nObject.parent.exposed; },\n\t\tget delivered() { return nObject.parentDelivered; },\n\t\tget children() { return nObject.children; },\n\t\tget childNodes() { return nObject.childNodes; },\n\t\trefresh(f) { nObject.refresh(f); }\n\t}, nObject.exposed);\n}\n\n/** 初始化渲染 */\nfunction initRender<R extends object = object>(\n\tnObject: Entity<any, R>\n): { render(): any, nodes: any, stopRender(): void } {\n\tconst {\n\t\tcomponent,\n\t\tprops,\n\t\tcontext,\n\t\tentity,\n\t} = nObject;\n\tconst refresh = (changed: boolean) => changed && nObject.refresh()\n\t// 初始化执行\n\tconst result = monitorable.exec(() => setCurrent(\n\t\t() => component(props, context, auxiliary),\n\t\tentity,\n\t), refresh, { resultOnly: true, postpone: true });\n\tif (typeof result === 'function') {\n\t\t// 响应式\n\t\tconst render = monitorable.createExecutable(\n\t\t\t() => normalize(nObject, (result as () => NeepNode)()),\n\t\t\trefresh,\n\t\t);\n\t\treturn {\n\t\t\tnodes: render(),\n\t\t\trender,\n\t\t\tstopRender: () => render.stop(),\n\t\t};\n\t}\n\n\tconst render = monitorable.createExecutable(\n\t\t() => normalize(nObject, setCurrent(\n\t\t\t() => component(props, context, auxiliary),\n\t\t\tentity,\n\t\t)),\n\t\trefresh,\n\t\t{ postpone: true },\n\t);\n\treturn {\n\t\tnodes: monitorable.exec(\n\t\t\t() => normalize(nObject, result),\n\t\t\trefresh,\n\t\t\t{ resultOnly: true, postpone: true },\n\t\t),\n\t\trender,\n\t\tstopRender: () => render.stop(),\n\t};\n}\n\n\nexport default class Entity<\n\tP extends object = object,\n\tR extends object = object\n> extends NeepObject {\n\t/** 组件函数 */\n\treadonly component: Component<P, R>;\n\t/** 组件属性 */\n\treadonly props: P = monitorable.encase(Object.create(null));\n\t/** 组件槽 */\n\treadonly slots: Slots = monitorable.encase(Object.create(null));\n\t/** 结果渲染函数 */\n\tprivate readonly _stopRender:() => void;\n\t/** 原生子代 */\n\tnativeNodes: (TreeNode | TreeNode[])[] | undefined;\n\tshadowTree: (MountedNode | MountedNode[])[] = [];\n\tnativeTree: (MountedNode | MountedNode[])[] = [];\n\tprivate readonly _shadow: NativeShadow | undefined;\n\t/** 组件上下文 */\n\treadonly context: Context;\n\treadonly parent: NeepObject;\n\t/** 结果渲染函数 */\n\tconstructor(\n\t\tcomponent: Component<P, R>,\n\t\tprops: object,\n\t\tchildren: any[],\n\t\tparent: NeepObject,\n\t\tdelivered?: Delivered,\n\t) {\n\t\tsuper(parent.iRender, parent, delivered, parent.container);\n\t\tthis.component = component;\n\t\tReflect.defineProperty(\n\t\t\tthis.exposed,\n\t\t\t'$component',\n\t\t\t{ value: component, enumerable: true, configurable: true },\n\t\t);\n\t\t// 原生组件\n\t\t[this.native, this._shadow] =\n\t\t\tcomponent[typeSymbol] === 'native' &&\n\t\t\tthis.iRender.component?.() || [];\n\t\t// 父子关系\n\t\tthis.parent = parent;\n\t\tparent.children.add(this.exposed);\n\t\t// 上下文属性\n\t\tconst context = createContext(this);\n\t\tthis.context = context;\n\t\t// 初始化钩子\n\t\tthis.callHook('beforeCreate');\n\t\t// 更新属性\n\t\tthis.childNodes = children;\n\t\tupdate(this, props, children);\n\t\t// 获取渲染函数及初始渲染\n\t\tconst { render, nodes, stopRender } = initRender(this);\n\t\tthis._render = render;\n\t\tthis._stopRender = stopRender;\n\t\tthis._nodes = convert(this, nodes);\n\t\t// 初始化钩子\n\t\tthis.callHook('created');\n\t\tthis.created = true;\n\t\tif (this._needRefresh) { this.refresh(); }\n\t}\n\t/** 更新属性及子代 */\n\t_update(props: object, children: any[]): void {\n\t\tif (this.destroyed) { return; }\n\t\tthis.childNodes = children;\n\t\tupdate(this, props, children);\n\t}\n\t_destroy() {\n\t\tif (this._stopRender) {\n\t\t\tthis._stopRender();\n\t\t}\n\t\tthis.parent.children.delete(this.exposed);\n\t\tdestroy(this._nodes);\n\t}\n\n\t/** 刷新 */\n\trequestDraw() {\n\t\tthis.container.markDraw(this);\n\t}\n\t_draw() {\n\t\tconst {nativeNodes, iRender, _shadow, native} = this;\n\t\tif (!native || !nativeNodes || !_shadow) {\n\t\t\tthis.tree = draw(\n\t\t\t\tiRender,\n\t\t\t\tthis._nodes,\n\t\t\t\tthis.tree,\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\t\tthis.shadowTree = draw(\n\t\t\tiRender,\n\t\t\tthis._nodes,\n\t\t\tthis.shadowTree,\n\t\t);\n\t\tthis.nativeTree = draw(\n\t\t\tiRender,\n\t\t\tnativeNodes,\n\t\t\tthis.nativeTree,\n\t\t);\n\t}\n\t_mount() {\n\t\tconst {nativeNodes, iRender, _shadow, native, _nodes} = this;\n\t\tif (!native || !nativeNodes || !_shadow) {\n\t\t\tthis.tree = draw(iRender, _nodes);\n\t\t\treturn;\n\t\t}\n\t\tthis.tree = draw(iRender, convert(this, native));\n\t\tthis.shadowTree = draw(iRender, _nodes);\n\t\tfor (const it of getNodes(this.shadowTree)) {\n\t\t\tiRender.insert(_shadow, it);\n\t\t}\n\t\tthis.nativeTree = draw(iRender, nativeNodes);\n\t\tfor (const it of getNodes(this.nativeTree)) {\n\t\t\tiRender.insert(native, it);\n\t\t}\n\t}\n\t_unmount() {\n\t\tconst {iRender, nativeTree} = this;\n\t\tunmount(iRender, this.tree);\n\t\tif (!nativeTree) { return; }\n\t\tunmount(iRender, nativeTree);\n\t}\n}\n","import { getRender } from '../install';\nimport { NeepNode, NeepElement, Tag } from '../type';\nimport { Tags, isElement, Value, Template } from '../auxiliary';\nimport { isElementSymbol, typeSymbol } from '../symbols';\nimport { recursive2iterable } from './recursive';\nimport Entity from './Entity';\nimport NeepObject from './Object';\nimport Container from './Container';\nimport { updateProps } from './props';\n\nexport interface TreeNode\n\textends Omit<\n\t\tNeepElement,\n\t\t'children' | 'tag' | typeof isElementSymbol\n\t>\n{\n\t/** 标签名 */\n\ttag: Tag;\n\tchildren: (this | this[])[];\n\tmounted?: boolean;\n\tcomponent?: NeepObject;\n}\n/** 强制转换为 NeepElement */\nfunction toElement(t: any): null | NeepElement {\n\tif (t === false || t === null || t === undefined) {\n\t\treturn null;\n\t}\n\tif (isElement(t)) {\n\t\treturn t;\n\t}\n\treturn {\n\t\t[isElementSymbol]: true,\n\t\ttag: Value,\n\t\tkey: t,\n\t\tvalue: t,\n\t\tchildren: [],\n\t};\n}\n\nexport function destroy(\n\ttree: TreeNode | TreeNode[] | (TreeNode | TreeNode[])[]\n) {\n\tif (Array.isArray(tree)) {\n\t\ttree.forEach(t => destroy(t));\n\t\treturn;\n\t}\n\tconst { component } = tree;\n\tif (component) { component.destroy(); }\n}\n\nfunction createItem(\n\tnObject: NeepObject,\n\tsource: NeepNode,\n): TreeNode {\n\tif (!source) { return { tag: null, children: [] }; }\n\tconst { tag } = source;\n\tif (!tag) { return { tag: null, children: [] }; }\n\tif (typeof tag !== 'string') {\n\t\tif (tag[typeSymbol] === 'simple') {\n\t\t\treturn {\n\t\t\t\t...source,\n\t\t\t\tchildren: convert(nObject, source.children),\n\t\t\t\tcomponent: undefined,\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t...source, children: [],\n\t\t\tcomponent: new Entity(\n\t\t\t\ttag,\n\t\t\t\tsource.props || {},\n\t\t\t\tsource.children,\n\t\t\t\tnObject,\n\t\t\t\tsource.$__neep__delivered,\n\t\t\t),\n\t\t};\n\t}\n\tif (tag === Tags.Container) {\n\t\tconst type = source?.props?.type;\n\t\tconst iRender = type ? getRender(type) : nObject.iRender;\n\t\treturn {\n\t\t\t...source, children: [],\n\t\t\tcomponent: new Container(\n\t\t\t\tiRender,\n\t\t\t\tsource.props || {},\n\t\t\t\tsource.children,\n\t\t\t\tnObject,\n\t\t\t\tsource.$__neep__delivered,\n\t\t\t),\n\t\t};\n\t}\n\tif (tag === Tags.Value) {\n\t\treturn { ...source, children: [] };\n\t}\n\tif (tag === Template || tag.substr(0, 5) === 'Neep:') {\n\t\treturn {\n\t\t\t...source,\n\t\t\tchildren: convert(nObject, source.children),\n\t\t};\n\t}\n\treturn {...source, children: convert(nObject, source.children) };\n}\n\n/**\n * 更新树节点\n * @param nObject Neep 对象\n * @param source 用于替换的源\n * @param tree 已有树\n */\nfunction updateList(\n\tnObject: NeepObject,\n\tsource: any[],\n\ttree: TreeNode | TreeNode[],\n): TreeNode[] {\n\tif (!Array.isArray(tree)) { tree = [tree]; }\n\tconst newList: TreeNode[] = [];\n\tfor (const src of recursive2iterable(source)) {\n\t\tconst node = toElement(src);\n\t\tif (!node) { continue; }\n\t\tconst index = tree.findIndex(it =>\n\t\t\tit.tag === node.tag && it.key === node.key\n\t\t);\n\t\tif (index >= 0) {\n\t\t\tnewList.push(updateItem(nObject, node, tree[index]));\n\t\t\ttree.splice(index, 1);\n\t\t} else {\n\t\t\tnewList.push(createItem(nObject, node));\n\t\t}\n\t}\n\tdestroy(tree);\n\treturn newList;\n}\n\n/**\n * 更新树节点\n * @param tree 已有树\n * @param source 用于替换的源\n * @param nObject Neep 对象\n */\nfunction updateItem(\n\tnObject: NeepObject,\n\tsource: NeepNode,\n\ttree?: TreeNode | TreeNode[],\n): TreeNode {\n\tif (!tree) {\n\t\treturn createItem(nObject, source);\n\t}\n\tif (!source) {\n\t\tdestroy(tree);\n\t\treturn { tag: null, children: [] };\n\t}\n\tif (Array.isArray(tree)) {\n\t\tif (!tree.length) { return createItem(nObject, source); }\n\t\tconst index = tree.findIndex(it => it.tag === source.tag);\n\t\tif (index < 0) {\n\t\t\tdestroy(tree);\n\t\t\treturn createItem(nObject, source);\n\t\t}\n\t\tconst all = tree;\n\t\t[tree] = tree.splice(index, 1);\n\t\tdestroy(all);\n\t}\n\tconst { tag } = source;\n\tif (tag !== tree.tag) {\n\t\tdestroy(tree);\n\t\treturn createItem(nObject, source);\n\t}\n\tif (!tag) { return { tag: null, children: [] }; }\n\tif (typeof tag !== 'string') {\n\t\tif (tag[typeSymbol] === 'simple') {\n\t\t\treturn {\n\t\t\t\t...source,\n\t\t\t\tchildren: convert(\n\t\t\t\t\tnObject,\n\t\t\t\t\tsource.children,\n\t\t\t\t\ttree.children,\n\t\t\t\t),\n\t\t\t\tcomponent: undefined,\n\t\t\t};\n\t\t}\n\t\tconst { component } = tree;\n\t\tif (!component) { return createItem(nObject, source); }\n\t\tcomponent.update(source.props || {}, source.children);\n\t\treturn { ...source, children: [], component };\n\t}\n\tif (tag === Tags.Container) {\n\t\tconst { component } = tree;\n\t\tif (!component) { return createItem(nObject, source); }\n\t\tconst type = source?.props?.type;\n\t\tconst iRender = type ? getRender(type) : nObject.iRender;\n\t\tif (iRender !== component.iRender) {\n\t\t\treturn createItem(nObject, source);\n\t\t}\n\t\tcomponent.update(source.props || {}, source.children);\n\t\treturn { ...source, children: [], component };\n\t}\n\tif (tag === Tags.Value) {\n\t\treturn { ...source, children: [] };\n\t}\n\tif (tag === Template || tag.substr(0, 5) === 'Neep:') {\n\t\tlet delivered: any;\n\t\tif (Tags.Deliver === tag) {\n\t\t\tconst props = { ...source.props };\n\t\t\tdelete props.ref;\n\t\t\tdelete props.slot;\n\t\t\tdelete props.key;\n\t\t\tdelivered = updateProps(\n\t\t\t\ttree.$__neep__delivered,\n\t\t\t\tprops,\n\t\t\t\ttree.props,\n\t\t\t\ttrue,\n\t\t\t);\n\t\t}\n\t\treturn {\n\t\t\t...source,\n\t\t\t$__neep__delivered: delivered,\n\t\t\tchildren: convert(\n\t\t\t\tnObject,\n\t\t\t\tsource.children,\n\t\t\t\ttree.children,\n\t\t\t),\n\t\t};\n\t}\n\treturn {\n\t\t...source,\n\t\tchildren: convert(nObject, source.children, tree.children),\n\t};\n}\n\n\nfunction createAll(\n\tnObject: NeepObject,\n\tsource: any[],\n): (TreeNode | TreeNode[])[] {\n\tif (!source.length) { return []; }\n\treturn (source as any[]).map(item => {\n\t\tif (!Array.isArray(item)) {\n\t\t\treturn createItem(nObject, toElement(item));\n\t\t}\n\t\treturn [...recursive2iterable(item)]\n\t\t\t.map(it => createItem(nObject, toElement(it)));\n\t});\n}\nfunction *updateAll(\n\tnObject: NeepObject,\n\tsource: any[],\n\ttree: (TreeNode | TreeNode[])[],\n): Iterable<TreeNode | TreeNode[]> {\n\tlet index = 0;\n\tlet length = Math.min(source.length, source.length);\n\tfor (; index < length; index++) {\n\t\tconst src = source[index];\n\t\tif (Array.isArray(src)) {\n\t\t\tyield updateList(nObject, src, tree[index]);\n\t\t} else {\n\t\t\tyield updateItem(nObject, toElement(src), tree[index]);\n\t\t}\n\t}\n\tlength = Math.max(source.length, source.length);\n\tif (tree.length > length) {\n\t\t\t// 销毁多余项\n\t\t\tfor (; index < length; index++) {\n\t\t\t\tdestroy(tree[index]);\n\t\t\t}\n\t}\n\tif (source.length > length) {\n\t\t// 创建多余项\n\t\tfor (; index < length; index++) {\n\t\t\tconst src = toElement(source[index]);\n\t\t\tif (Array.isArray(src)) {\n\t\t\t\tyield [...recursive2iterable(src)]\n\t\t\t\t\t.map(it => createItem(nObject, it));\n\t\t\t} else {\n\t\t\t\tyield createItem(nObject, src);\n\t\t\t}\n\t\t}\n\t}\n}\n\n\n/**\n * 更新树\n * @param source 用于替换的源\n * @param nObject Neep 对象\n * @param tree 已有树\n */\nfunction convert(\n\tnObject: NeepObject,\n\tsource: any,\n\ttree?: (TreeNode | TreeNode[])[],\n): (TreeNode | TreeNode[])[] {\n\tif (!Array.isArray(source)) { source = [source]; }\n\tif (!tree) {\n\t\treturn createAll(nObject, source);\n\t}\n\treturn [...updateAll(nObject, source, tree)];\n}\n\n\nexport default convert;\n","import {\n\tIRender,\n\tMountProps,\n\tNativeNode,\n\tNativeContainer,\n\tDelivered,\n} from '../type';\nimport { Tags } from '../auxiliary';\nimport { createMountedNode } from './id';\nimport convert, { destroy } from './convert';\nimport draw, { unmount, getNodes, MountedNode, setRefList } from './draw';\nimport NeepObject, { setCompleteList, complete } from './Object';\nimport { nextFrame, isValue, monitorable } from '../install';\n\n\nlet awaitDraw = new Set<Container>();\nlet requested = false;\nfunction markDraw(c: Container) {\n\tawaitDraw.add(c);\n\tif (requested) { return; }\n\trequested = true;\n\tnextFrame(() => {\n\t\trequested = false;\n\t\tconst list = [...awaitDraw];\n\t\tawaitDraw.clear();\n\t\tlist.map(c => c.drawAll());\n\t});\n}\n\nexport default class Container extends NeepObject {\n\tprops: MountProps;\n\t/** 组件树结构 */\n\tcontent: (MountedNode | MountedNode[])[] = [];\n\t_node: NativeNode | null = null;\n\t_container: NativeContainer | null = null;\n\treadonly rootContainer: Container = this;\n\tconstructor(\n\t\tiRender: IRender,\n\t\tprops: MountProps,\n\t\tchildren: any[],\n\t\tparent?: NeepObject,\n\t\tdelivered?: Delivered,\n\t) {\n\t\tsuper(iRender, parent, delivered);\n\t\tthis.props = props;\n\t\tthis.parent = parent;\n\t\tif (parent) {\n\t\t\tthis.rootContainer = parent.container.rootContainer;\n\t\t}\n\t\tthis.callHook('beforeCreate');\n\t\tthis._render = () => children;\n\t\tthis._nodes = convert(this, children);\n\t\tthis.callHook('created');\n\t\tthis.created = true;\n\t}\n\t_drawChildren = false;\n\t_drawContainer = false;\n\tsetChildren(children: any[]): void {\n\t\tif (this.destroyed) { return; }\n\t\tthis.childNodes = children;\n\t\tthis._render = () => children;\n\t\tthis._drawChildren = true;\n\t\tthis.refresh();\n\t}\n\tsetProps(props: MountProps): void {\n\t\tif (this.destroyed) { return; }\n\t\tthis.props = props;\n\t\tthis._drawContainer = true;\n\t\tthis.refresh();\n\t}\n\t/** 更新属性及子代 */\n\tupdate(props: MountProps, children: any[]): void {\n\t\tthis.refresh(() => {\n\t\t\tthis.setProps(props);\n\t\t\tthis.setChildren(children);\n\t\t});\n\t}\n\trequestDraw() {\n\t\tthis.markDraw(this);\n\t}\n\t_mount() {\n\t\tconst { props, parent, iRender } = this;\n\t\tconst content = draw(this.container.iRender, this._nodes);\n\t\tthis.content = content;\n\t\tconst [container, node]\n\t\t\t= iRender.mount(props, isValue, parent?.iRender);\n\t\tfor (const it of getNodes(content)) {\n\t\t\tiRender.insert(container, it);\n\t\t}\n\t\tthis.tree = [createMountedNode({\n\t\t\ttag: Tags.Value,\n\t\t\tcomponent: undefined,\n\t\t\tnode,\n\t\t\tvalue: node,\n\t\t\tchildren: [],\n\t\t})];\n\t\tthis._node = node;\n\t\tthis._container = container;\n\t}\n\t_destroy() {\n\t\tdestroy(this.content);\n\t}\n\t_unmount() {\n\t\tconst { parent, iRender } = this;\n\t\tif (parent) {\n\t\t\tunmount(parent.iRender, this.tree);\n\t\t}\n\t\tiRender.unmount(\n\t\t\tthis._container!,\n\t\t\tthis._node!,\n\t\t\tBoolean(parent),\n\t\t);\n\t\tunmount(this.iRender, this.content);\n\t}\n\t_draw() {\n\t\tconst {\n\t\t\t_drawChildren: drawChildren,\n\t\t\t_drawContainer: drawContainer,\n\t\t} = this;\n\t\tthis._drawContainer = false;\n\t\tif (drawContainer) {\n\t\t\tthis.iRender.drawContainer(\n\t\t\t\tthis._container!,\n\t\t\t\tthis._node!,\n\t\t\t\tthis.props,\n\t\t\t\tisValue,\n\t\t\t\tthis.parent?.iRender,\n\t\t\t);\n\t\t}\n\t\tif (this.parent && this.parent.iRender !== this.iRender) {\n\t\t\treturn;\n\t\t}\n\t\tthis._drawChildren = false;\n\t\tif (drawChildren) {\n\t\t\tthis.content = draw(\n\t\t\t\tthis.iRender,\n\t\t\t\tthis._nodes,\n\t\t\t\tthis.content,\n\t\t\t);\n\t\t}\n\t}\n\t_drawSelf() {\n\t\tconst {\n\t\t\t_drawChildren: drawChildren,\n\t\t\t_drawContainer: drawContainer,\n\t\t} = this;\n\t\tthis._needDraw = false;\n\t\tthis._drawChildren = false;\n\t\tthis._drawContainer = false;\n\t\tif (drawContainer) {\n\t\t\tthis.iRender.drawContainer(\n\t\t\t\tthis._container!,\n\t\t\t\tthis._node!,\n\t\t\t\tthis.props,\n\t\t\t\tisValue,\n\t\t\t\tthis.parent?.iRender,\n\t\t\t\ttrue,\n\t\t\t);\n\t\t}\n\t\tif (drawChildren) {\n\t\t\tthis.content = draw(\n\t\t\t\tthis.iRender,\n\t\t\t\tthis._nodes,\n\t\t\t\tthis.content,\n\t\t\t);\n\t\t}\n\t}\n\tdrawSelf() {\n\t\tif (!this.mounted) { return; }\n\t\tif (this.destroyed) { return; }\n\t\tthis.callHook('beforeUpdate');\n\t\tmonitorable.exec(\n\t\t\t() => this._drawSelf(),\n\t\t\tc => c && this.markDraw(this),\n\t\t\t{ postpone: true }\n\t\t);\n\t\tcomplete(() => this.callHook('updated'));\n\t}\n\t/** 等待重画的项目 */\n\tprivate _awaitDraw = new Set<NeepObject>();\n\t/** 自身是否需要重绘 */\n\tprivate _needDraw = false;\n\t/** 标记需要绘制的元素 */\n\tmarkDraw(\n\t\tnObject: NeepObject,\n\t\tremove = false,\n\t) {\n\t\tif (this.parent?.iRender === this.iRender) {\n\t\t\tthis.parent.container.markDraw(nObject, remove);\n\t\t\treturn;\n\t\t}\n\t\tif (nObject === this && this.parent) {\n\t\t\tthis.parent.container.markDraw(this, remove);\n\t\t\tthis._needDraw = !remove;\n\t\t} else if (remove) {\n\t\t\tthis._awaitDraw.delete(nObject);\n\t\t} else {\n\t\t\tthis._awaitDraw.add(nObject);\n\t\t}\n\t\tthis.rootContainer.markDrawContainer(\n\t\t\tthis,\n\t\t\t!this._needDraw && !this._awaitDraw.size || this.destroyed,\n\t\t);\n\t}\n\tdrawContainer() {\n\t\tconst {\n\t\t\t_node: node,\n\t\t\t_container: container,\n\t\t\t_awaitDraw: awaitDraw,\n\t\t} = this;\n\t\tif (!node || !container) { return; }\n\t\tthis.callHook('beforeDraw');\n\t\tconst needDraw = this._needDraw;\n\t\tthis._needDraw = false;\n\t\tconst list = [...awaitDraw];\n\t\tawaitDraw.clear();\n\t\tif (needDraw) { this.drawSelf(); }\n\t\tlist.map(c => c.draw());\n\t\tthis.iRender.draw(container, node);\n\t\tcomplete(() => this.callHook('drawn'));\n\t}\n\tprivate _containers = new Set<Container>();\n\tmarkDrawContainer(\n\t\tcontainer: Container,\n\t\tremove = false,\n\t) {\n\t\tif (remove) {\n\t\t\tthis._containers.delete(container);\n\t\t} else {\n\t\t\tthis._containers.add(container);\n\t\t}\n\t\tmarkDraw(this);\n\t}\n\tdrawAll() {\n\t\tconst containers = this._containers;\n\t\tif (!containers.size) { return; }\n\t\tthis.callHook('beforeDrawAll');\n\t\tconst refs: (() => void)[] = [];\n\t\tconst completeList: (() => void)[] = [];\n\t\tsetCompleteList(completeList);\n\t\tsetRefList(refs);\n\t\tconst list = [...containers];\n\t\tcontainers.clear();\n\t\tlist.forEach(c => c.drawContainer());\n\t\tsetRefList();\n\t\trefs.forEach(r => r());\n\t\tcompleteList.forEach(r => r());\n\t\tthis.callHook('drawnAll');\n\t}\n}\n","import { Component, Render, Marks } from './type';\nimport { nameSymbol, typeSymbol, renderSymbol } from './symbols';\n\n/** 组件标记函数 */\nexport interface Mark {\n\t<N extends Component<any, any>>(component: N): N;\n}\n\n/**\n * 创建组件标记函数\n */\nfunction Mark<S extends keyof Marks>(\n\tsymbol: S,\n\tvalue: Component[S],\n): Mark {\n\treturn component => {\n\t\tcomponent[symbol] = value as any;\n\t\treturn component;\n\t};\n}\n\n\n/** 标记组件名称 */\nexport function mName(name: string): Mark;\nexport function mName<N extends Component<any, any>>(\n\tname: string,\n\tcomponent: N,\n): N;\nexport function mName<N extends Component<any, any>>(\n\tname: string,\n\tcomponent?: N,\n): Mark | N {\n\tif (!component) { return Mark(nameSymbol, name); }\n\tcomponent[nameSymbol] = name;\n\treturn component;\n}\n\n/** 标记组件类型 */\nexport function mType(type?: 'native' | 'simple' | 'standard'): Mark;\nexport function mType<N extends Component<any, any>>(\n\ttype: 'native' | 'simple' | 'standard',\n\tcomponent: N,\n): N;\nexport function mType<N extends Component<any, any>>(\n\ttype?: 'native' | 'simple' | 'standard',\n\tcomponent?: N,\n): Mark | N {\n\tif (!component) { return Mark(typeSymbol, type); }\n\tcomponent[typeSymbol] = type;\n\treturn component;\n}\n/** 标记为简单组件 */\nexport function mSimple(): Mark;\nexport function mSimple<N extends Component<any, any>>(\n\tcomponent: N,\n): N;\nexport function mSimple<N extends Component<any, any>>(\n\tcomponent?: N,\n): Mark | N {\n\tif (!component) { return Mark(typeSymbol, 'simple'); }\n\tcomponent[typeSymbol] = 'simple';\n\treturn component;\n}\n/** 标记为原生组件 */\nexport function mNative(): Mark;\nexport function mNative<N extends Component<any, any>>(\n\tcomponent: N,\n): N;\nexport function mNative<N extends Component<any, any>>(\n\tcomponent?: N,\n): Mark | N {\n\tif (!component) { return Mark(typeSymbol, 'native'); }\n\tcomponent[typeSymbol] = 'native';\n\treturn component;\n}\n\n/** 标记独立的渲染函数 */\nexport function mRender(fn?: Marks[typeof renderSymbol]): Mark;\nexport function mRender<N extends Component<any, any>>(\n\tfn: Marks[typeof renderSymbol] | undefined,\n\tcomponent: N,\n): N;\nexport function mRender<N extends Component<any, any>>(\n\tfn?: Marks[typeof renderSymbol] | undefined,\n\tcomponent?: N,\n): Mark | N {\n\tif (!component) { return Mark(renderSymbol, fn); }\n\tcomponent[renderSymbol] = fn;\n\treturn component;\n}\n\nexport function create<P extends object>(\n\tc: Component<P, never>,\n): Component<P, never>;\nexport function create<\n\tP extends object = object,\n\tR extends object = object,\n>(c: Component<P, R>, r: Render<R>): Component<P, R>;\nexport function create<T extends Component<any, any>>(\n\tc: T,\n\tr?: Render,\n): T {\n\tif (typeof r === 'function') {\n\t\tc[renderSymbol] = r;\n\t}\n\treturn c;\n}\n\nexport function mark<N extends Component<any, any>>(\n\tcomponent: N,\n\t...marks: Mark[]\n): N {\n\tfor (const m of marks) { m(component); }\n\treturn component;\n}\n","import { install } from '.';\nimport * as monitorable from 'monitorable';\n\ninstall({ monitorable });\n\nexport * from '.'","import {\n\tMountProps,\n\tNeepElement,\n\tComponent,\n\tRootExposed,\n} from '../type';\nimport { isElement, createElement } from '../auxiliary';\nimport { isProduction } from '../constant';\nimport { devtools, getRender } from '../install';\nimport Container from './Container';\n\nexport function render(\n\te?: NeepElement | Component,\n\tp: MountProps = {},\n): RootExposed {\n\tlet params = {...p};\n\tconst container =  new Container(\n\t\tgetRender(p.type),\n\t\tparams,\n\t\te === undefined ? [] : isElement(e) ? [e] : [createElement(e)],\n\t);\n\tif (!isProduction) {\n\t\tdevtools.renderHook(container);\n\t}\n\tconst { exposed } = container;\n\tReflect.defineProperty(exposed, '$update', {\n\t\tvalue(c?: NeepElement | Component) {\n\t\t\tcontainer.setChildren(c === undefined ? []\n\t\t\t\t: isElement(c) ? [c] : [createElement(c)]);\n\t\t\treturn exposed;\n\t\t},\n\t\tconfigurable: true,\n\t});\n\tReflect.defineProperty(exposed, '$mount', {\n\t\tvalue(target?: any) {\n\t\t\tif (exposed.$mounted) { return exposed; }\n\t\t\tif (target) {\n\t\t\t\tparams.target = target;\n\t\t\t\tcontainer.setProps(params);\n\t\t\t}\n\t\t\tcontainer.mount();\n\t\t\treturn exposed;\n\t\t},\n\t\tconfigurable: true,\n\t});\n\tReflect.defineProperty(exposed, '$unmount', {\n\t\tvalue() {\n\t\t\tif (!exposed.$mounted) { return; }\n\t\t\tif (exposed.$unmounted) { return; }\n\t\t\tif (exposed.$destroyed) { return container.destroy(); }\n\t\t\tcontainer.unmount();\n\t\t\treturn;\n\t\t},\n\t\tconfigurable: true,\n\t});\n\tif (params.target) {\n\t\tcontainer.mount();\n\t}\n\treturn exposed as any as RootExposed;\n}\nexport { default as refresh } from './refresh';\n"],"names":["mode","NeepError","Error","constructor","message","tag","monitorable","nextFrameApi","nextFrame","fn","v","assert","renders","Object","create","getRender","type","default","addRender","render","install","apis","api","value","computed","isValue","encase","recover","Array","isArray","installRender","ScopeSlot","SlotRender","Slot","Value","Container","Deliver","Template","Fragment","setCurrent","entity","oldEntity","current","$_valueIndex","ret","$_values","length","checkCurrent","name","initOnly","created","constructors","initContext","context","exposed","hooks","setHook","id","hook","list","$_hooks","safeify","set","Set","add","delete","callHook","watch","cb","stop","s","useValue","index","values","undefined","setValue","obj","opt","includes","Reflect","defineProperty","get","configurable","enumerable","expose","deliver","delivered","isElementSymbol","Symbol","for","typeSymbol","nameSymbol","renderSymbol","isElement","createElement","attrs","children","node","key","slot","ref","Tags","argv","args","props","on","k","onInfo","exec","elements","n","push","concat","simple","label","text","color","auxiliary","Life","Element","Dev","Constant","State","createMountedNode","recursive2iterable","it","refList","setRefList","setRef","isRemove","getLastNode","tree","component","getFirstNode","getNodes","unmount","iRender","forEach","e","remove","replace","newTree","oldTree","next","parent","insert","updateList","source","createItem","newList","mountedMap","Map","src","findIndex","old","item","updateItem","splice","size","last","filter","t","has","i","o","updateAll","Math","min","max","createList","all","draw","createValue","substr","update","createAll","isNode","RegExp","String","Date","toISOString","placeholder","map","mount","getSlots","slots","native","nativeList","ownKeys","el","renderSlots","createSlots","inserted","setSlots","updateProps","oldProps","define","newKeys","nObject","newDelivered","$__neep__delivered","container","slotMap","childNodes","refresh","f","result","nodes","renderNode","execSimple","execSlot","normalize","Boolean","delayedRefresh","objectSet","wait","run","clear","completeList","setCompleteList","complete","NeepObject","cfg","$parent","_obj$parent","$component","$isContainer","$created","$destroyed","destroyed","$mounted","mounted","$unmounted","unmounted","createExposed","this","_obj$parent2","isContainer","writable","h","bind","createEntity","parentDelivered","_delayedRefresh","needRefresh","_needRefresh","requestDraw","async","asyncRefresh","_refreshing","_render","canRefresh","_nodes","convert","_update","_destroy","destroy","__executed_destroy","_mount","__executed_mount","c","postpone","_cancelDrawMonitor","_unmount","__executed_mounted","_draw","nativeNodes","Entity","_shadow","_this$iRender$compone","stopRender","changed","resultOnly","createExecutable","initRender","_stopRender","markDraw","shadowTree","nativeTree","toElement","_source$props","_source$props2","awaitDraw","requested","rootContainer","setChildren","_drawChildren","setProps","_drawContainer","content","_node","_container","drawChildren","drawContainer","_this$parent","_drawSelf","_needDraw","_this$parent2","drawSelf","_awaitDraw","markDrawContainer","needDraw","_containers","drawAll","containers","refs","r","Mark","symbol","marks","m","p","params","target"],"mappings":"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"}