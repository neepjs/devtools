{"version":3,"file":"neep.core.esm.min.js","sources":["../src/constant.ts","../src/EventEmitter.ts","../src/Error.ts","../src/install.ts","../src/register.ts","../src/auxiliary/tags.ts","../src/helper/current.ts","../src/helper/context.ts","../src/hook.ts","../src/auxiliary/life.ts","../src/symbols.ts","../src/auxiliary/element.ts","../src/auxiliary/dev.ts","../src/auxiliary/index.ts","../src/render/id.ts","../src/render/recursive.ts","../src/render/draw.ts","../src/render/slot.ts","../src/render/props.ts","../src/render/normalize.ts","../src/render/refresh.ts","../src/render/Object.ts","../src/render/Entity.ts","../src/render/convert.ts","../src/render/Container.ts","../src/render/index.ts","../src/create.ts"],"sourcesContent":["/**\n * Global constant\n *\n * Will be replaced by the 'rollup-plugin-replace' plug-in\n */\n\n /**\n * Neep code version\n */\nexport const version = '__VERSION__' as string;\n/**\n * Current mode\n * @enum production\n * @enum development\n */\nexport const mode = '__MODE__' as any as 'production' | 'development';\n/**\n * Is the current mode production mode\n * @description Support tree shaking\n */\nexport const isProduction = mode === 'production';\n","import { monitorable } from './install';\nimport { Emit, On } from './type';\n\nfunction getEventName(k: string): string {\n\tif (k[0] === '@') { return k.substr(1); }\n\tif (/^on[:-]/.test(k)) { return k.substr(3); }\n\treturn '';\n}\ninterface AddEvent<T extends Record<string, any[]>> {\n\t<N extends keyof T>(\n\t\tentName: N,\n\t\tlistener: (...p: T[N]) => void,\n\t): void\n}\n\nexport default class EventEmitter<\n\tT extends Record<string, any[]> = Record<string, any[]>\n> {\n\tstatic update<T extends Record<string, any[]>>(\n\t\temitter: EventEmitter<T>,\n\t\tevents: any,\n\t): (() => void)[] {\n\t\tif (!events) { return []; }\n\t\tconst newHandles: (() => void)[] = [];\n\t\tif (events && typeof events === 'object') {\n\t\t\tfor (const n of Object.keys(events)) {\n\t\t\t\tif (!n) { continue; }\n\t\t\t\tconst fn = events[n];\n\t\t\t\tif (typeof fn !== 'function') { continue; }\n\t\t\t\tnewHandles.push(emitter.on(n, fn));\n\t\t\t}\n\t\t}\n\t\treturn newHandles;\n\t}\n\tstatic updateInProps<T extends Record<string, any[]>>(\n\t\temitter: EventEmitter<T>,\n\t\tprops: any,\n\t\tcustom?: (addEvent: AddEvent<T>) => void,\n\t): (() => void)[] {\n\t\tif (!props) { return []; }\n\t\n\t\tconst newHandles: (() => void)[] = [];\n\n\t\tfunction addEvent<N extends keyof T>(\n\t\t\tentName: N,\n\t\t\tlistener: (...p: T[N]) => void,\n\t\t): void {\n\t\t\tnewHandles.push(emitter.on(entName, listener));\n\t\t}\n\t\tfor (const k of Object.keys(props)) {\n\t\t\tconst fn = props[k];\n\t\t\tif (typeof fn !== 'function') { continue; }\n\t\t\tconst entName = getEventName(k);\n\t\t\tif (!entName) { continue; }\n\t\t\taddEvent(entName, fn);\n\t\t}\n\t\tconst event = props['@'];\n\t\tif (event && typeof event === 'object') {\n\t\t\tfor (const k of Object.keys(event)) {\n\t\t\t\tconst f = event[k];\n\t\t\t\tif (typeof f !== 'function') { continue; }\n\t\t\t\taddEvent(k, f);\n\t\t\t}\n\t\t} if (typeof event === 'function') {\n\t\t\tconst { names } = event as Emit;\n\t\t\tif (Array.isArray(names)) {\n\t\t\t\tfor (const n of names) {\n\t\t\t\t\tif (!n) { continue; }\n\t\t\t\t\taddEvent(n, (...p) => event(n, ...p));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (typeof custom === 'function') {\n\t\t\tcustom(addEvent);\n\t\t}\n\t\tnewHandles.push(...EventEmitter.update(emitter, props['@']));\n\t\treturn newHandles;\n\t}\n\n\tprivate _names: (keyof T)[] = [];\n\tprivate readonly _cancelHandles = new Set<() => void>();\n\tget names(): (keyof T)[] {\n\t\treturn this._names;\n\t}\n\treadonly emit: Emit<T>;\n\treadonly on: On<T>;\n\tconstructor() {\n\t\tconst events: Record<keyof T, Set<Function>> = Object.create(null);\n\t\tconst names = this._names;\n\t\tfunction emit<N extends keyof T>(name: N, ...p: T[N]): void {\n\t\t\tconst event = events[name];\n\t\t\tif (!event) { return; }\n\t\t\tfor (const fn of [...event]) { \n\t\t\t\tfn(...p);\n\t\t\t}\n\t\t}\n\t\temit.names = names;\n\t\tReflect.defineProperty(emit, 'names', {\n\t\t\tget:() => {\n\t\t\t\tmonitorable.markRead(emit, 'names');\n\t\t\t\treturn this._names;\n\t\t\t},\n\t\t\tconfigurable: true,\n\t\t});\n\t\tconst on: On<T> = (name, listener) => {\n\t\t\tconst fn = monitorable.safeify(listener);\n\t\t\tlet event = events[name];\n\t\t\tif (!event) {\n\t\t\t\tevent = new Set();\n\t\t\t\tevents[name] = event;\n\t\t\t\tmonitorable.markChange(emit, 'names');\n\t\t\t\tthis._names = [...this._names, name];\n\t\t\t}\n\t\t\tevent.add(fn);\n\t\t\tlet removed = false;\n\t\t\treturn () => {\n\t\t\t\tif (removed) { return; }\n\t\t\t\tremoved = true;\n\t\t\t\tevent.delete(fn);\n\t\t\t\tif (event.size) { return; }\n\t\t\t\tmonitorable.markChange(emit, 'names');\n\t\t\t\tthis._names = this._names.filter(n => n !== name);\n\t\t\t};\n\t\t};\n\t\tthis.emit = emit;\n\t\tthis.on = on;\n\t}\n\tupdateHandles(newHandles: (() => void)[]): (() => void)[] {\n\t\tconst eventCancelHandles = this._cancelHandles;\n\t\tconst oldHandles = [...eventCancelHandles];\n\t\teventCancelHandles.clear();\n\t\tfor (const fn of oldHandles) { fn(); }\n\t\tnewHandles.forEach(f => eventCancelHandles.add(f));\n\t\treturn newHandles;\n\t}\n\tupdate(list: any): (() => void)[] {\n\t\tconst handles = EventEmitter.update(this, list);\n\t\treturn this.updateHandles(handles);\n\t}\n\tupdateInProps(\n\t\tlist: any,\n\t\tcustom?: (addEvent: AddEvent<T>) => void,\n\t): (() => void)[] {\n\t\tconst handles = EventEmitter.updateInProps(this, list, custom);\n\t\treturn this.updateHandles(handles);\n\t}\n}\n","export default class NeepError extends Error {\n\treadonly tag: string;\n\tconstructor(message: string, tag: string = '') {\n\t\tsuper(tag ? `[${tag}] ${message}` : message);\n\t\tthis.tag = tag;\n\t}\n}\nexport function assert(v: any, message: string, tag?: string) {\n\tif (v) { return; }\n\tthrow new NeepError(message, tag);\n}\n","import * as monitorableApi from 'monitorable';\nimport { IRender } from './type';\nimport { isProduction } from './constant';\nimport EventEmitter from './EventEmitter';\nimport NeepError, { assert } from './Error';\n\nimport { Devtools } from '../../devtools/src/type';\n\nexport let monitorable: typeof monitorableApi;\n\nexport let value: typeof monitorableApi.value;\nexport let computed: typeof monitorableApi.computed;\nexport let isValue: typeof monitorableApi.isValue;\nexport let encase: typeof monitorableApi.encase;\nexport let recover: typeof monitorableApi.recover;\n\nfunction installMonitorable(api?: typeof monitorableApi) {\n\tif (!api) { return; }\n\tmonitorable = api;\n\tvalue = monitorable.value;\n\tcomputed = monitorable.computed;\n\tisValue = monitorable.isValue;\n\tencase = monitorable.encase;\n\trecover = monitorable.recover;\n}\n\nexport interface InstallOptions {\n\tmonitorable?: typeof monitorableApi;\n\trender?: IRender;\n\trenders?: IRender[];\n\tdevtools?: any;\n}\n\n\nlet nextFrameApi: undefined | ((fn: () => void) => void);\nexport function nextFrame(fn: () => void): void {\n\tassert(nextFrameApi, 'The basic renderer is not installed', 'install');\n\tnextFrameApi!(fn);\n}\n\nexport const renders: Record<string, IRender>\n\t= Object.create(null);\n\nexport function getRender(\n\ttype: string | number | IRender = ''\n\t): IRender {\n\tif (typeof type === 'object') { return type; }\n\treturn renders[type] || renders.default;\n}\n\nfunction addRender(render?: IRender): void {\n\tif (!render) { return; }\n\tif (render.install) {\n\t\trender.install({\n\t\t\tget isValue() { return isValue; },\n\t\t\tEventEmitter,\n\t\t\tError: NeepError,\n\t\t});\n\t}\n\trenders[render.type] = render;\n\tif (nextFrameApi) { return; }\n\tif (!renders.default) {\n\t\trenders.default = render;\n\t}\n\tif (!nextFrameApi && render.nextFrame) {\n\t\trenders.default = render;\n\t\tnextFrameApi = render.nextFrame;\n\t}\n\n}\nfunction installRender({ render, renders}: InstallOptions) {\n\taddRender(render);\n\tif (!Array.isArray(renders)) { return; }\n\tfor (const render of renders) {\n\t\taddRender(render);\n\t}\n}\n\n\nexport const devtools: Devtools = {\n\trenderHook(){},\n};\n\nfunction installDevtools(tools?: Partial<Devtools>) {\n\tif (!tools) { return; }\n\tif (typeof tools !== 'object') { return; }\n\tconst { renderHook } = tools;\n\tif (typeof renderHook === 'function') {\n\t\tdevtools.renderHook = renderHook;\n\t}\n}\n\n\nexport default function install(apis: InstallOptions) {\n\tinstallMonitorable(apis.monitorable);\n\tinstallRender(apis);\n\tif (!isProduction) {\n\t\tinstallDevtools(apis.devtools);\n\t}\n}\n","import { Component } from './type';\n\nexport const components: Record<string, Component> = Object.create(null);\n\nexport function register(name: string, component: Component) {\n\tcomponents[name] = component;\n}\n","export const ScopeSlot = 'Neep:ScopeSlot';\nexport const SlotRender = 'Neep:SlotRender';\nexport const Slot = 'Neep:Slot';\nexport const Value = 'Neep:Value';\nexport const Container = 'Neep:Container';\nexport const Deliver = 'Neep:Deliver';\nexport const Template = 'template';\nexport const Fragment = Template;\n","import NeepError from '../Error';\nimport { Entity } from '../type';\n\n/** 当前正在执行的对象 */\nexport let current: Entity | undefined;\nexport function setCurrent<T>(\n\tfn: () => T,\n\tentity: Entity,\n): T {\n\tconst oldEntity = current;\n\tcurrent = entity;\n\ttry {\n\t\tcurrent.$_valueIndex = 0;\n\t\tconst ret = fn();\n\t\tif (current.$_valueIndex !== current.$_values.length) {\n\t\t\tthrow new NeepError(\n\t\t\t\t'Inconsistent number of useValue executions',\n\t\t\t\t'life',\n\t\t\t);\n\t\t}\n\t\treturn ret;\n\t} finally {\n\t\tcurrent = oldEntity;\n\t}\n}\n\nexport function checkCurrent(\n\tname: string,\n\tinitOnly = false,\n): Entity {\n\tif (!current) {\n\t\tthrow new NeepError(\n\t\t\t`Function \\`${name}\\` can only be called within a cycle.`,\n\t\t\t'life',\n\t\t);\n\t}\n\tif (!initOnly) {\n\t\treturn current;\n\t}\n\tif (!current.created) {\n\t\treturn current;\n\t}\n\tthrow new NeepError(\n\t\t`Function \\`${name}\\` can only be called at initialization time.`,\n\t\t'life',\n\t);\n}\n","import { Context, ContextConstructor, Exposed } from '../type';\nimport { monitorable } from '../install';\n\nconst constructors: ContextConstructor[] = [];\nexport function initContext(\n\tcontext: Context,\n\texposed?: Exposed,\n): Context {\n\tfor (const constructor of constructors) {\n\t\tconstructor(context, exposed);\n\t}\n\treturn context;\n}\nexport function addContextConstructor(\n\tconstructor: ContextConstructor\n): void {\n\tconstructors.push(monitorable.safeify(constructor));\n}\n","import { monitorable } from './install';\nimport { Hook, Hooks, Entity } from './type';\nconst hooks: Record<string, Set<Hook>> = Object.create(null);\n\nexport function setHook<H extends Hooks>(\n\tid: H,\n\thook: Hook,\n\tentity?: Entity,\n):() => void;\nexport function setHook(\n\tid: string,\n\thook: Hook,\n\tentity?: Entity,\n): () => void;\n\nexport function setHook(\n\tid: string,\n\thook: Hook,\n\tentity?: Entity,\n):() => void {\n\tlet list = entity?.$_hooks || hooks;\n\tif (!list) { return () => {}; }\n\thook = monitorable.safeify(hook);\n\tlet set = list[id];\n\tif (!set) {\n\t\tset = new Set();\n\t\tlist[id] = set;\n\t}\n\tset.add(hook);\n\treturn () => set.delete(hook);\n}\n\nexport function callHook<H extends Hooks>(\n\tid: H,\n\texposed: Entity,\n): void;\nexport function callHook(id: string, exposed: Entity): void;\nexport function callHook(id: string, exposed: Entity): void {\n\tif (!exposed) { return; }\n\tfor (const hook of exposed.$_hooks[id] || []) {\n\t\thook(exposed);\n\t}\n\tfor (const hook of hooks[id] || []) {\n\t\thook(exposed);\n\t}\n}\n","/**********************************\n * 组件上下文环境专用 API\n * @description 简单组件不支持\n **********************************/\nimport { Value, WatchCallback } from 'monitorable';\nimport { Hooks } from '../type';\nimport { checkCurrent } from '../helper';\nimport NeepError from '../Error';\nimport { setHook } from '../hook';\nimport { isValue, value, computed } from './state';\n\n\n/**********************************\n * 状态管理类 API\n **********************************/\n/**\n * 监听指定值的变化\n * @description 本质是调用 Value 对象的 watch 方法\n * @description 但是通过此方法进行的观察，会在组件生命周期结束时自动停止观察\n * @description 此函数只有在初始化调用时有效\n * @param value 被监听的值\n * @param cb    当监听的值发送变化时调用的函数\n */\nexport function watch<T>(\n\tvalue: Value<T>,\n\tcb: WatchCallback<T>,\n): () => void;\n/**\n * 监听指定值的变化\n * @description 本质是创建调用 Value 对象的 watch 方法\n * @description 但是通过此方法进行的观察，会在组件生命周期结束时自动停止观察\n * @description 此函数只有在初始化调用时有效\n * @param value 用于计算观测值的函数\n * @param cb    当监听的值发送变化时调用的函数\n */\nexport function watch<T>(\n\tvalue: () => T,\n\tcb: (v: T, stopped: boolean) => void,\n): () => void;\n\nexport function watch<T>(\n\tvalue: Value<T> | (() => T),\n\tcb: (v: Value<T> | T, stopped: boolean) => void\n): () => void {\n\tconst entity = checkCurrent('watch');\n\tif (typeof value !== 'function') { return () => {}; }\n\tconst stop = isValue(value)\n\t\t? value.watch(cb)\n\t\t: computed(value).watch((v, s) => cb(v(), s));\n\tsetHook('beforeDestroy', () => stop(), entity);\n\treturn stop;\n}\n\nexport function useValue(): Value<any>;\nexport function useValue<T>(fn: () => T, name?: string): T;\nexport function useValue<T>(fn?: () => T, name?: string): T | Value<any>;\nexport function useValue<T>(fn?: () => T, name = 'useValue'): T | Value<any> {\n\tconst entity = checkCurrent(name);\n\tconst index = entity.$_valueIndex++;\n\tconst values = entity.$_values;\n\tif (!entity.created) {\n\t\tvalues[index] = undefined;\n\t\tconst v = typeof fn === 'function' ? fn() : value(undefined);\n\t\treturn values[index] = v;\n\t}\n\tif (index >= values.length) {\n\t\tthrow new NeepError(\n\t\t\t'Inconsistent number of useValue executions',\n\t\t\t'life',\n\t\t);\n\t}\n\treturn values[index];\n\n}\n\n/**********************************\n * 钩子类 API\n **********************************/\n/**\n * 为当前组件注册钩子\n * @param name 钩子名称\n * @param hook 钩子\n * @param initOnly 是否仅在初始化时有效\n */\nexport function hook<H extends Hooks>(\n\tname: H,\n\thook: () => void,\n\tinitOnly?: boolean,\n): undefined | (() => void);\nexport function hook(\n\tname: string,\n\thook: () => void,\n\tinitOnly?: boolean,\n): undefined | (() => void);\nexport function hook(\n\tname: string,\n\thook: () => void,\n\tinitOnly?: boolean,\n): undefined | (() => void) {\n\tconst entity = checkCurrent('setHook');\n\tif (initOnly && entity.created) { return undefined; }\n\treturn setHook(name, () => hook(), entity);\n}\n\n/**********************************\n * 配置 API\n **********************************/\n\nexport function setValue<T>(\n\tobj: any,\n\tname: string | number | symbol,\n\tvalue: T | Value<T> | (() => T),\n\topt?: boolean | ((value: T) => void),\n): void {\n\tif (\n\t\ttypeof name === 'string'\n\t\t&& ['$', '_'].includes(name[0])\n\t) {\n\t\treturn;\n\t}\n\tif (isValue(value) && opt) {\n\t\tReflect.defineProperty(obj, name, {\n\t\t\tget() { return value(); },\n\t\t\tset(v) { value(v); },\n\t\t\tconfigurable: true,\n\t\t\tenumerable: true,\n\t\t});\n\t\treturn;\n\t}\n\tif (typeof value === 'function' && opt) {\n\t\tReflect.defineProperty(obj, name, {\n\t\t\tget: value as () => T,\n\t\t\tset: typeof opt === 'function' ? opt : undefined,\n\t\t\tconfigurable: true,\n\t\t\tenumerable: true,\n\t\t});\n\t\treturn;\n\t}\n\tReflect.defineProperty(obj, name, {\n\t\tget() { return value; },\n\t\tconfigurable: true,\n\t\tenumerable: true,\n\t});\n}\n\n\n/**\n * 将 Value 导出\n * @param name 导出用的名称\n */\nexport function expose<T>(\n\tname: string | number | symbol,\n\tvalue: Value<T>,\n\tmix?: boolean,\n): void;\n/**\n * 将普通值导出\n * @param name\n * @param value\n */\nexport function expose<T>(\n\tname: string | number | symbol,\n\tvalue: T,\n): void;\n/**\n * 设置基于 getter 的导出\n * @param name\n * @param getter\n * @param nonModifiable\n */\nexport function expose<T>(\n\tname: string | number | symbol,\n\tgetter: () => T,\n\tnonModifiable: true,\n): void;\n/**\n * 设置基于 getter/setter 的导出\n * @param name\n * @param getter\n * @param setter\n */\nexport function expose<T>(\n\tname: string | number | symbol,\n\tgetter: () => T,\n\tsetter: (value: T) => void,\n): void;\nexport function expose<T>(\n\tname: string | number | symbol,\n\tvalue: T | Value<T> | (() => T),\n\topt?: boolean | ((value: T) => void),\n): void {\n\tsetValue(checkCurrent('expose', true).exposed, name, value, opt);\n}\n\n\n/**\n * 将 Value 传递给子组件\n * @param name 导出用的名称\n */\nexport function deliver<T>(\n\tname: string | number | symbol,\n\tvalue: Value<T>,\n\tmix?: boolean,\n): void;\n/**\n * 将普通值导出\n * @param name\n * @param value\n */\nexport function deliver<T>(\n\tname: string | number | symbol,\n\tvalue: T,\n): void;\n/**\n * 设置基于 getter 的传递\n * @param name\n * @param getter\n * @param nonModifiable\n */\nexport function deliver<T>(\n\tname: string | number | symbol,\n\tgetter: () => T,\n\tnonModifiable: true,\n): void;\n/**\n * 设置基于 getter/setter 的传递\n * @param name\n * @param getter\n * @param setter\n */\nexport function deliver<T>(\n\tname: string | number | symbol,\n\tgetter: () => T,\n\tsetter: (value: T) => void,\n): void;\nexport function deliver<T>(\n\tname: string | number | symbol,\n\tvalue: T | Value<T> | (() => T),\n\topt?: boolean | ((value: T) => void),\n): void {\n\tsetValue(checkCurrent('deliver', true).delivered, name, value, opt);\n}\n","export const isElementSymbol = Symbol.for('isNeepElement');\nexport const typeSymbol = Symbol.for('type');\nexport const nameSymbol = Symbol.for('name');\nexport const renderSymbol = Symbol.for('render');\nexport const componentsSymbol = Symbol.for('components');\nexport const configSymbol = Symbol.for('config');\n","import { Tag, NeepElement, Component } from '../type';\nimport { isElementSymbol, typeSymbol } from '../symbols';\nimport * as Tags from './tags';\n\n/**\n * 判读是否为元素\n */\nexport function isElement(v: any): v is NeepElement {\n\tif (!v) { return false; }\n\tif (typeof v !== 'object') { return false; }\n\treturn v[isElementSymbol] === true;\n}\n\nexport function createElement(\n\ttag: Tag,\n\tattrs?: {[key:string]: any},\n\t...children: any[]\n): NeepElement {\n\tattrs = attrs ? {...attrs} : {};\n\tconst node: NeepElement = {\n\t\t[isElementSymbol]: true,\n\t\ttag,\n\t\tchildren: [],\n\t};\n\tif ('key' in attrs) { node.key = attrs.key; }\n\tif ('slot' in attrs) { node.slot = attrs.slot; }\n\tif (typeof attrs.ref === 'function') { node.ref = attrs.ref; }\n\tif (tag === Tags.Value) {\n\t\tnode.value = attrs.value;\n\t\treturn node;\n\t}\n\tnode.children = children;\n\tif (tag === Tags.Template) { return node; }\n\tif (tag === Tags.SlotRender) {\n\t\tnode.render = attrs.render;\n\t\treturn node;\n\t}\n\tif (tag === Tags.ScopeSlot || tag === Tags.Slot) {\n\t\tconst { render, argv, args, name } = attrs;\n\t\tnode.render = render;\n\t\tnode.args = argv && [argv]\n\t\t\t|| Array.isArray(args) && args.length && args\n\t\t\t|| [{}];\n\n\t\tif (tag === Tags.ScopeSlot) {\n\t\t\tnode.props = { name };\n\t\t\treturn node;\n\t\t}\n\t}\n\tnode.props = {};\n\tfor (let k in attrs) {\n\t\t// TODO: data\n\t\tconst nCmd = /^n([:-])([a-zA-Z0-9]+(?:\\.[a-zA-Z0-9]+)*)$/i.exec(k);\n\t\t/** 普通属性 */\n\t\tif (!nCmd) {\n\t\t\tnode.props[k] = attrs[k];\n\t\t\tcontinue;\n\t\t}\n\t}\n\treturn node;\n}\n\nexport interface elementIteratorOptions {\n\tsimple?: boolean | Component[] | ((c: Component) => boolean);\n}\n\nexport function elements(\n\tnode: any,\n\topt: elementIteratorOptions = {},\n): any[] {\n\tif (Array.isArray(node)) {\n\t\tconst list: any[][] = [];\n\t\tfor (let n of node) {\n\t\t\tlist.push(elements(n, opt));\n\t\t}\n\t\treturn ([] as any[]).concat(...list);\n\t}\n\tif (!isElement(node)) { return [node]; }\n\tlet { tag } = node;\n\tif (!tag) { return []; }\n\n\tif (([Tags.Template, Tags.ScopeSlot] as Tag[]).includes(tag)) {\n\t\treturn elements(node.children, opt);\n\t}\n\tif (typeof tag !== 'function') { return [node]; }\n\tif (tag[typeSymbol] !== 'simple') { return [node]; }\n\tconst { simple } = opt;\n\tif (!simple) { return [node]; }\n\tif (Array.isArray(simple)) {\n\t\tif (simple.includes(tag)) { return [node]; }\n\t} else if (typeof simple === 'function') {\n\t\tif (!simple(tag)) { return [node]; }\n\t}\n\treturn elements(node.children, opt);\n}\n","import { isProduction } from '../constant';\nimport { current } from '../helper';\nimport { setLabel } from '../helper/label';\n\nexport function label(text: string, color = ''): void {\n\tif (!isProduction) {\n\t\tif (!current) {\n\t\t\tsetLabel([text, color]);\n\t\t\treturn;\n\t\t}\n\t\tReflect.defineProperty(current.exposed, '$label', {\n\t\t\tvalue: [text, color],\n\t\t\tconfigurable: true,\n\t\t});\n\t}\n}\n","import * as Constant from '../constant';\nimport * as Tags from './tags';\nimport * as State from './state';\nimport * as Life from './life';\nimport * as Element from './element';\nimport * as Dev from './dev';\n\nexport * from './tags';\nexport * from './state';\nexport * from './life';\nexport * from './element';\nexport * from './dev';\n\nexport { Tags };\n\n/** 辅助 */\nexport interface Auxiliary extends\n\tReadonly<typeof Tags>,\n\tReadonly<typeof State>,\n\tReadonly<typeof Life>,\n\tReadonly<typeof Element>,\n\tReadonly<typeof Dev>,\n\tReadonly<typeof Constant>\n{}\n\nconst auxiliary: Auxiliary = {\n\t...Tags,\n\t...Life,\n\t...Element,\n\t...Dev,\n\t...Constant,\n\tget value() { return State.value; },\n\tget computed() { return State.computed; },\n\tget isValue() { return State.isValue; },\n\tget encase() { return State.encase; },\n\tget recover() { return State.recover; },\n};\n\nexport function setAuxiliary<T>(\n\tname: string,\n\tvalue: T,\n): void {\n\tReflect.defineProperty(auxiliary, name, {\n\t\tvalue,\n\t\tenumerable: true,\n\t\tconfigurable: true,\n\t});\n}\nexport function defineAuxiliary<T>(\n\tname: string,\n\tget: (this: Auxiliary) => T,\n): void {\n\tReflect.defineProperty(auxiliary, name, {\n\t\tget,\n\t\tenumerable: true,\n\t\tconfigurable: true,\n\t});\n}\nexport default auxiliary;\n","import { NativeNode } from '../type';\nimport { isProduction } from '../constant';\nimport { MountedNode } from './draw';\n\nlet ids = 0;\nconst Nodes: {[key: number]: MountedNode} = {};\nlet IdMap: undefined | Map<NativeNode, number>;\nif (!isProduction) {\n\tIdMap = new Map();\n}\nexport function createMountedNode(\n\tn: Omit<MountedNode, 'id'>,\n\tid?: number,\n): MountedNode {\n\tif (!isProduction) {\n\t\tid = id || ++ids;\n\t\tconst { node } = n;\n\t\tif (node && IdMap) { IdMap.set(node, id); }\n\t\treturn Nodes[id] = {...n, id};\n\t}\n\treturn {...n, id: 0};\n}\n\nexport function recoveryMountedNode(node: MountedNode): void {\n\tif (!isProduction) {\n\t\tdelete Nodes[node.id];\n\t}\n}\n\nexport function getNode(\n\tid: number | NativeNode,\n): MountedNode | undefined {\n\tif (!isProduction) {\n\t\tif (typeof id !== 'number') {\n\t\t\tid = IdMap?.get(id) || -1;\n\t\t}\n\t\treturn Nodes[id];\n\t}\n\treturn undefined;\n}\n","export interface RecursiveArray<T> extends Array<RecursiveItem<T>>{};\nexport type RecursiveItem<T> = T | RecursiveArray<T>;\n\nexport function *recursive2iterable<T>(\n\tlist: RecursiveItem<T>,\n): Iterable<T> {\n\tif (!Array.isArray(list)) {\n\t\tyield list;\n\t\treturn;\n\t}\n\tfor (const it of list) {\n\t\tyield* recursive2iterable(it);\n\t}\n}\n","import { Tags, Template, isValue } from '../auxiliary';\nimport { IRender, NativeNode, NativeElement, Exposed, Ref } from '../type';\nimport { createMountedNode, recoveryMountedNode } from './id';\nimport { TreeNode } from './convert';\n\n/**\n * @description node / component / children 至少一个有效\n */\nexport interface MountedNode extends TreeNode {\n\tid: number;\n\tparent?: this;\n\tnode: undefined | NativeNode;\n}\n\nlet refList: (() => void)[] | undefined;\nexport function setRefList(list?: (() => void)[]) {\n\trefList = list;\n}\nfunction setRef(\n\tref?: Ref,\n\tnode?: Exposed | NativeNode,\n\tisRemove?: boolean,\n) {\n\tif (typeof ref !== 'function') { return; }\n\tif (!node) { return; }\n\tif (!refList) {\n\t\tref(node, isRemove);\n\t} else {\n\t\trefList.push(() => ref(node, isRemove));\n\t}\n}\n\ntype MountedNodes = MountedNode | MountedNode[]\n\t| (MountedNode | MountedNode[])[];\n\nfunction getLastNode(tree: MountedNodes): NativeNode {\n\tif (Array.isArray(tree)) {\n\t\treturn getLastNode(tree[tree.length - 1]);\n\t}\n\tconst { component, children, node } = tree;\n\tif (node) { return node; }\n\tif (component) { return getLastNode(component.tree); }\n\treturn getLastNode(children);\n}\n\nfunction getFirstNode(tree: MountedNodes): NativeNode {\n\tif (Array.isArray(tree)) { return getFirstNode(tree[0]); }\n\tconst { component, children, node } = tree;\n\tif (node) { return node; }\n\tif (component) { return getFirstNode(component.tree); }\n\treturn getFirstNode(children[0]);\n}\n\nexport function *getNodes(tree: MountedNodes): Iterable<NativeNode> {\n\tif (Array.isArray(tree)) {\n\t\tfor (const it of tree) {\n\t\t\tyield* getNodes(it);\n\t\t}\n\t\treturn;\n\t}\n\tconst { children, node, component } = tree;\n\tif (node) {\n\t\tyield node;\n\t\treturn;\n\t}\n\tif (component) {\n\t\tyield* getNodes(component.tree);\n\t\treturn;\n\t}\n\tyield* getNodes(children);\n}\n\nexport function unmount(iRender: IRender, tree: MountedNodes): void {\n\tif (Array.isArray(tree)) {\n\t\ttree.forEach(e => unmount(iRender, e));\n\t\treturn;\n\t}\n\tconst { component, children, node, ref } = tree;\n\trecoveryMountedNode(tree);\n\tif (node) {\n\t\tsetRef(ref, node, true);\n\t\tiRender.remove(node);\n\t\treturn;\n\t}\n\tif (component) {\n\t\tsetRef(ref, component.exposed, true);\n\t\tcomponent.unmount();\n\t\treturn;\n\t}\n\tunmount(iRender, children);\n}\n\n\nfunction replace<T extends MountedNode | MountedNode[]>(\n\tiRender: IRender,\n\tnewTree: T,\n\toldTree: MountedNode | MountedNode[],\n): T {\n\tconst next = getFirstNode(oldTree);\n\tif (!next) { return newTree; }\n\tconst parent = iRender.parent(next);\n\tif (!parent) { return newTree; }\n\tfor (const it of getNodes(newTree)) {\n\t\tiRender.insert(parent, it, next);\n\t}\n\tunmount(iRender, oldTree);\n\treturn newTree;\n}\n\nfunction updateList(\n\tiRender: IRender,\n\tsource: TreeNode[],\n\ttree: MountedNode | MountedNode[],\n): MountedNode[] {\n\tif (!source.length) {\n\t\tconst node = createItem(iRender, {tag: null, children: []});\n\t\treturn [replace(iRender, node, tree)];\n\t}\n\tif (!Array.isArray(tree)) { tree = [tree]; }\n\tconst newList: MountedNode[] = [];\n\tconst list = [...tree];\n\tconst mountedMap = new Map<MountedNode, MountedNode>();\n\tfor (const src of source) {\n\t\tconst index = list.findIndex(it =>\n\t\t\tit.tag === src.tag && it.key === src.key\n\t\t);\n\t\tif (index >= 0) {\n\t\t\tconst old = list[index];\n\t\t\tconst item = updateItem(iRender, src, old);\n\t\t\tmountedMap.set(old, item);\n\t\t\tnewList.push(item);\n\t\t\tlist.splice(index, 1);\n\t\t} else {\n\t\t\tconst item = createItem(iRender, src);\n\t\t\tnewList.push(item);\n\t\t}\n\t}\n\tif (!mountedMap.size) {\n\t\treturn replace(iRender, newList, list);\n\t}\n\tunmount(iRender, list);\n\ttree = tree.filter(t => mountedMap.has(t));\n\tconst last = getLastNode(tree[tree.length - 1]);\n\tconst parent = iRender.parent(last);\n\tif (!parent) { return newList; }\n\tlet next = iRender.next(last);\n\t// 调整次序\n\tfor(let i = newList.length - 1; i >= 0; i--) {\n\t\tconst item = newList[i];\n\t\tconst index = tree.findIndex(o => mountedMap.get(o) === item);\n\t\tif (index >= 0) {\n\t\t\tfor (const it of tree.splice(index)) {\n\t\t\t\tmountedMap.delete(it);\n\t\t\t}\n\t\t} else {\n\t\t\tfor (const it of getNodes(item)) {\n\t\t\t\tiRender.insert(parent, it, next);\n\t\t\t}\n\t\t}\n\t\tnext = getFirstNode(item) || next;\n\t}\n\treturn newList;\n}\n/**\n * 更新树\n * @param tree 已有树\n * @param source 用于替换的源\n * @param iRender Neep 对象\n */\nfunction updateAll(\n\tiRender: IRender,\n\tsource: (TreeNode | TreeNode[])[],\n\ttree: (MountedNode | MountedNode[])[],\n): (MountedNode | MountedNode[])[] {\n\tlet index = 0;\n\tlet length = Math.min(source.length, source.length || 1);\n\tconst list: (MountedNode | MountedNode[])[] = [];\n\tfor (; index < length; index++) {\n\t\tconst src = source[index];\n\t\tif (Array.isArray(src)) {\n\t\t\tlist.push(updateList(iRender, src, tree[index]));\n\t\t} else {\n\t\t\tlist.push(updateItem(iRender, src, tree[index]));\n\t\t}\n\t}\n\tlength = Math.max(source.length, tree.length);\n\tif (tree.length > length) {\n\t\t\t// 销毁多余项\n\t\t\tfor (; index < length; index++) {\n\t\t\tunmount(iRender, tree[index]);\n\t\t}\n\t}\n\tif (source.length > length) {\n\t\t// 创建多余项\n\t\tconst last = getLastNode(list[list.length - 1]);\n\t\tconst parent = iRender.parent(last);\n\t\tconst next = iRender.next(last);\n\t\tfor (; index < length; index++) {\n\t\t\tconst src = source[index];\n\t\t\tconst item = Array.isArray(src)\n\t\t\t\t? createList(iRender, src)\n\t\t\t\t: createItem(iRender, src);\n\t\t\tlist.push(item);\n\t\t\tif (!parent) { continue; }\n\t\t\tfor (const it of getNodes(item)) {\n\t\t\t\tiRender.insert(parent, it, next);\n\t\t\t}\n\t\t}\n\t}\n\treturn list;\n}\n\n/**\n * 更新树节点\n * @param iRender Neep 对象\n * @param tree 已有树\n * @param source 用于替换的源\n */\nfunction updateItem(\n\tiRender: IRender,\n\tsource: TreeNode,\n\ttree: MountedNode | MountedNode[],\n): MountedNode {\n\tif (Array.isArray(tree)) {\n\t\tconst index = tree.findIndex(it =>\n\t\t\tit.tag === source.tag && it.component === source.component\n\t\t);\n\t\tif (index < 0) {\n\t\t\treturn replace(iRender, createItem(iRender, source), tree);\n\t\t}\n\t\tconst all = tree;\n\t\t[tree] = tree.splice(index, 1);\n\t\tunmount(iRender, all);\n\t}\n\tconst { tag, component } = source;\n\tconst ref = source.ref !== tree.ref && source.ref || undefined;\n\tif (tag !== tree.tag || component !== tree.component) {\n\t\treturn replace(iRender, createItem(iRender, source), tree);\n\t}\n\tif (!tag) { return tree; }\n\tif (typeof tag !== 'string' || tag === Tags.Container) {\n\t\tif (!component) {\n\t\t\t// TODO: ref\n\t\t\treturn createMountedNode({\n\t\t\t\t...source,\n\t\t\t\tnode: undefined,\n\t\t\t\tcomponent: undefined,\n\t\t\t\tchildren: draw(\n\t\t\t\t\tiRender,\n\t\t\t\t\tsource.children,\n\t\t\t\t\ttree.children,\n\t\t\t\t),\n\t\t\t}, tree.id);\n\t\t}\n\t\tsetRef(ref, component.exposed);\n\t\treturn createMountedNode({\n\t\t\t...source,\n\t\t\tnode: undefined,\n\t\t\tcomponent,\n\t\t\tchildren: [],\n\t\t}, tree.id);\n\t}\n\tif (tag === Tags.Value) {\n\t\tlet value = source.value;\n\t\tif (isValue(value)) { value = value(); }\n\t\tif(tree.value === value) {\n\t\t\tsetRef(ref, tree.node);\n\t\t\treturn createMountedNode({\n\t\t\t\t...tree,\n\t\t\t\t...source,\n\t\t\t\tvalue,\n\t\t\t\tchildren: [],\n\t\t\t}, tree.id);\n\t\t}\n\t\treturn replace(iRender, createValue(iRender, source, value), tree);\n\t}\n\tif (tag === Template || tag.substr(0, 5) === 'Neep:') {\n\t\t// TODO: ref\n\t\treturn createMountedNode({\n\t\t\t...source,\n\t\t\tnode: undefined,\n\t\t\tcomponent: undefined,\n\t\t\tchildren: updateAll(\n\t\t\t\tiRender,\n\t\t\t\tsource.children,\n\t\t\t\ttree.children,\n\t\t\t),\n\t\t}, tree.id);\n\t}\n\tconst { node } = tree;\n\tiRender.update(\n\t\tnode as NativeElement,\n\t\tsource.props || {},\n\t);\n\tsetRef(ref, node);\n\tif (!source.children.length && !tree.children.length) {\n\t\treturn createMountedNode(\n\t\t\t{\n\t\t\t\t...tree,\n\t\t\t\t...source,\n\t\t\t\tchildren: [],\n\t\t\t},\n\t\t\ttree.id);\n\t}\n\tif (!source.children.length && tree.children.length) {\n\t\tunmount(iRender, tree.children);\n\t}\n\tif (source.children.length && !tree.children.length) {\n\t\tconst children = createAll(iRender, source.children);\n\t\tfor (const it of getNodes(children)) {\n\t\t\tiRender.insert(node as NativeElement, it);\n\t\t}\n\t\treturn createMountedNode({\n\t\t\t...tree,\n\t\t\t...source,\n\t\t\tchildren,\n\t\t}, tree.id);\n\t}\n\treturn createMountedNode({\n\t\t...tree, ...source,\n\t\tchildren: updateAll(\n\t\t\tiRender,\n\t\t\tsource.children,\n\t\t\ttree.children,\n\t\t),\n\t}, tree.id);\n}\n\nfunction createValue(\n\tiRender: IRender,\n\tsource: TreeNode,\n\tvalue: any,\n): MountedNode {\n\tlet { ref } = source;\n\tif (iRender.isNode(value)) {\n\t\tsetRef(ref, value);\n\t\treturn createMountedNode({\n\t\t\t...source,\n\t\t\tvalue,\n\t\t\tnode: value,\n\t\t\tchildren: [],\n\t\t\tcomponent: undefined,\n\t\t});\n\t}\n\tconst type = typeof value;\n\tlet node: NativeNode | undefined;\n\tif (\n\t\ttype === 'bigint'\n\t\t|| type === 'boolean'\n\t\t|| type === 'number'\n\t\t|| type === 'string'\n\t\t|| type === 'symbol'\n\t\t|| value instanceof RegExp\n\t) {\n\t\tnode = iRender.text(String(value));\n\t} else if (value instanceof Date) {\n\t\tnode = iRender.text(value.toISOString());\n\t} else if (type === 'object' && value) {\n\t\tnode = iRender.text(String(value));\n\t\t// TODO: 对象处理\n\t}\n\tif (!node) { node = iRender.placeholder(); }\n\tsetRef(ref, node);\n\treturn createMountedNode({\n\t\t...source,\n\t\tvalue,\n\t\tnode,\n\t\tcomponent: undefined,\n\t\tchildren: [],\n\t});\n}\n\nfunction createAll(\n\tiRender: IRender,\n\tsource: (TreeNode | TreeNode[])[],\n): (MountedNode | MountedNode[])[] {\n\tif (!source.length) {\n\t\treturn [createMountedNode({\n\t\t\ttag: null,\n\t\t\tnode: iRender.placeholder(),\n\t\t\tcomponent: undefined,\n\t\t\tchildren: [],\n\t\t})];\n\t}\n\n\treturn source.map(item =>\n\t\tArray.isArray(item)\n\t\t\t? createList(iRender, item)\n\t\t\t: createItem(iRender, item)\n\t);\n}\n\nfunction createList(\n\tiRender: IRender,\n\tsource: TreeNode[],\n): MountedNode[] {\n\tif (source.length) {\n\t\treturn source.map(it => createItem(iRender, it));\n\t}\n\treturn [createMountedNode({\n\t\ttag: null,\n\t\tnode: iRender.placeholder(),\n\t\tcomponent: undefined,\n\t\tchildren: [],\n\t})];\n}\n\nfunction createItem(\n\tiRender: IRender,\n\tsource: TreeNode,\n): MountedNode {\n\tconst { tag, ref, component } = source;\n\tif (!tag) {\n\t\tconst node = iRender.placeholder();\n\t\tsetRef(ref, node);\n\t\treturn createMountedNode({\n\t\t\ttag: null,\n\t\t\tnode,\n\t\t\tcomponent: undefined,\n\t\t\tchildren: [],\n\t\t});\n\t}\n\tif (typeof tag !== 'string' || tag === Tags.Container) {\n\t\tif (!component) {\n\t\t\t// TODO: ref\n\t\t\treturn createMountedNode({\n\t\t\t\t...source,\n\t\t\t\tnode: undefined,\n\t\t\t\tcomponent: undefined,\n\t\t\t\tchildren: draw(iRender, source.children),\n\t\t\t});\n\t\t}\n\t\tcomponent.mount();\n\t\tsetRef(ref, component.exposed);\n\t\treturn createMountedNode({\n\t\t\t...source,\n\t\t\tnode: undefined,\n\t\t\tcomponent, children: [],\n\t\t});\n\t}\n\tif (tag === Tags.Value) {\n\t\tlet value = source.value;\n\t\tif (isValue(value)) { value = value(); }\n\t\treturn createValue(iRender, source, value);\n\t}\n\tif (tag === Template || tag.substr(0, 5) === 'Neep:') {\n\t\t// TODO: ref\n\t\treturn createMountedNode({\n\t\t\t...source,\n\t\t\tnode: undefined,\n\t\t\tcomponent: undefined,\n\t\t\tchildren: createAll(iRender, source.children),\n\t\t});\n\t}\n\tconst node = iRender.create(tag, source.props || {});\n\tsetRef(ref, node);\n\tlet children: (MountedNode | MountedNode[])[] = [];\n\tif (source.children) {\n\t\tchildren = createAll(iRender, source.children);\n\t\tfor (const it of getNodes(children)) {\n\t\t\tiRender.insert(node, it);\n\t\t}\n\t}\n\treturn createMountedNode({\n\t\t...source,\n\t\tnode,\n\t\tcomponent: undefined,\n\t\tchildren,\n\t});\n}\n\nexport default function draw(\n\tiRender: IRender,\n\tsource: (TreeNode | TreeNode[])[],\n\ttree?: (MountedNode | MountedNode[])[],\n): (MountedNode | MountedNode[])[] {\n\tif (tree) {\n\t\treturn updateAll(iRender, source, tree);\n\t}\n\treturn createAll(iRender, source);\n}\n","import { NeepElement, SlotFn, Slots, IRender } from '../type';\nimport { isElement, SlotRender, ScopeSlot } from '../auxiliary';\nimport { isElementSymbol } from '../symbols';\nimport { isProduction } from '../constant';\n\n\nexport function getSlots(\n\tiRender: IRender,\n\tchildren: any[],\n\tslots: Record<string | symbol, any[]>,\n\tnative = false,\n): any[] {\n\t/** 原始对象 */\n\tconst nativeList: any[] = [];\n\tfor (const it of children) {\n\t\tif (Array.isArray(it)) {\n\t\t\tconst list: Record<string | symbol, any[]>\n\t\t\t\t= Object.create(null);\n\t\t\tnativeList.push(getSlots(iRender, it, list, native));\n\t\t\tfor (const k of Reflect.ownKeys(list) as string[]) {\n\t\t\t\tif (k in slots) {\n\t\t\t\t\tslots[k].push(list[k]);\n\t\t\t\t} else {\n\t\t\t\t\tslots[k] = [list[k]];\n\t\t\t\t}\n\t\t\t}\n\t\t\tcontinue;\n\t\t}\n\t\tif (native) {\n\t\t\tif (iRender.isNode(it)) {\n\t\t\t\tnativeList.push(it);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (!isElement(it)) {\n\t\t\t\tnativeList.push(it);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (it.tag !== SlotRender) {\n\t\t\t\tnativeList.push(it);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\t\tconst slot = isElement(it) && it.slot || 'default';\n\t\tconst el = isElement(it) ? {\n\t\t\t...it, slot: undefined,\n\t\t\tprops: {...it.props, slot: undefined },\n\t\t} : it;\n\t\tif (slot in slots) {\n\t\t\tslots[slot].push(el);\n\t\t} else {\n\t\t\tslots[slot] = [el];\n\t\t}\n\t}\n\treturn nativeList;\n}\nfunction renderSlots(\n\tlist: any[],\n\t...props: any\n): any[] {\n\treturn list.map(it => {\n\t\tif (Array.isArray(it)) {\n\t\t\treturn renderSlots(it, ...props);\n\t\t}\n\t\tif (!isElement(it)) { return it; }\n\t\tif (it.tag !== SlotRender) {\n\t\t\treturn {\n\t\t\t\t...it,\n\t\t\t\tslot: undefined,\n\t\t\t} as NeepElement;\n\t\t}\n\t\tif (typeof it.render === 'function') {\n\t\t\treturn it.render(...props);\n\t\t}\n\t\treturn it.children;\n\t});\n}\nfunction createSlots(\n\tname: string,\n\tlist: any[],\n): SlotFn {\n\tconst slot = (...props: any) => ({\n\t\t[isElementSymbol]: true,\n\t\ttag: ScopeSlot,\n\t\tchildren: renderSlots(list, ...props),\n\t\tinserted: true,\n\t\tlabel: isProduction ? undefined : [`[${name}]`, '#00F'],\n\t} as NeepElement);\n\tslot.children = list;\n\treturn slot;\n}\nexport function setSlots(\n\tchildren: {[key: string]: any[]},\n\tslots: Slots = Object.create(null),\n) {\n\tfor (const k of Reflect.ownKeys(slots)) {\n\t\tif (!(k in children)) {\n\t\t\tdelete slots[k as string];\n\t\t}\n\t}\n\tfor (const k of Reflect.ownKeys(children) as string[]) {\n\t\tslots[k] = createSlots(k, children[k]);\n\t}\n\treturn slots;\n}\n","import { isValue } from '../auxiliary';\nconst disabledKey = new Set([\n\t':', '@', '#', '*',\n\t'!', '%', '^', '~',\n\t'&', '=', '+', '.',\n\t'(', ')', '[', ']', '{', '}', '<', '>',\n]);\nfunction filter(k: string | number | symbol) {\n\tif (typeof k !== 'string') { return true; }\n\treturn !disabledKey.has(k[0]);\n}\nexport function updateProps(\n\tobj: any,\n\tprops: any,\n\toldProps: any = {},\n\tdefine = false,\n) {\n\tconst newKeys = new Set(Reflect.ownKeys(props));\n\tfor (const k of Reflect.ownKeys(obj)) {\n\t\tif (!newKeys.has(k)) {\n\t\t\tdelete obj[k];\n\t\t}\n\t}\n\tif (!define) {\n\t\tfor (const k of newKeys) {\n\t\t\tobj[k] = props[k];\n\t\t}\n\t\treturn obj;\n\t}\n\tfor (const k of newKeys) {\n\t\tconst value = props[k];\n\t\tif (k in oldProps && oldProps[k] === value) {\n\t\t\tcontinue;\n\t\t}\n\t\tif (isValue(value)) {\n\t\t\tReflect.defineProperty(obj, k, {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tget() { return value(); },\n\t\t\t\tset(v) { value(v); },\n\t\t\t});\n\t\t\tcontinue;\n\t\t}\n\t\tReflect.defineProperty(obj, k, {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: true,\n\t\t\tvalue,\n\t\t});\n\t}\n\treturn obj;\n}\n","import {\n\tNeepElement, Exposed, Delivered,\n\tRender, NeepNode, Slots, Context, IRender, Component,\n} from '../type';\nimport { typeSymbol, componentsSymbol } from '../symbols';\nimport { isProduction } from '../constant';\nimport auxiliary, { isElement, Tags } from '../auxiliary';\nimport { renderSymbol, isElementSymbol } from '../symbols';\nimport { getLabel } from '../helper/label';\nimport Entity from './Entity';\nimport { getSlots, setSlots } from './slot';\nimport { initContext } from '../helper/context';\nimport { updateProps } from './props';\nimport EventEmitter from '../EventEmitter';\nimport { components as globalComponents } from '../register';\n\n\nfunction getComponents(\n\t...components: (Record<string, Component> | undefined)[]\n) {\n\treturn components.filter(Boolean) as Record<string, Component>[];\n}\n\nfunction execSimple(\n\tnObject: Entity,\n\tdelivered: Delivered,\n\tnode: NeepElement,\n\ttag: Component,\n\tcomponents: Record<string, Component>[],\n\tchildren: any[],\n) {\n\tconst { iRender } = nObject;\n\tconst slotMap = Object.create(null);\n\tgetSlots(iRender, children, slotMap);\n\tconst slots = setSlots(slotMap);\n\tconst event = new EventEmitter();\n\tevent.updateInProps(node.props);\n\tconst context: Context = initContext({\n\t\tslots,\n\t\tcreated: false,\n\t\tparent: nObject.exposed,\n\t\tdelivered,\n\t\tchildren: new Set<Exposed>(),\n\t\tchildNodes: children,\n\t\trefresh(f) { nObject.refresh(f); },\n\t\temit: event.emit,\n\t});\n\tif (!isProduction) { getLabel(); }\n\tconst result = tag({...node.props}, context, auxiliary);\n\tlet label: [string, string] | undefined;\n\tif (!isProduction) { label = getLabel(); }\n\tconst nodes = exec(nObject, delivered, renderNode(\n\t\tiRender,\n\t\tresult,\n\t\tcontext,\n\t\ttag[renderSymbol],\n\t), slots, getComponents(...components, tag[componentsSymbol]));\n\n\treturn {\n\t\t...node,\n\t\ttag,\n\t\tchildren: Array.isArray(nodes) ? nodes : [nodes],\n\t\tlabel,\n\t} as NeepElement;\n}\n\nfunction execSlot(\n\tnode: NeepElement,\n\tslots: Slots,\n\tchildren: any[],\n\targs: any[] = [{}],\n): NeepElement {\n\tconst slotName = node.props?.name || 'default';\n\tconst slot = slots[slotName];\n\tif (typeof slot === 'function') {\n\t\treturn {\n\t\t\t...node,\n\t\t\t...slot(...args),\n\t\t};\n\t}\n\tconst { render } = node;\n\tconst label: [string, string] | undefined = isProduction\n\t\t? undefined\n\t\t: [`[${ slotName }]`, '#00F'];\n\treturn {\n\t\t...node,\n\t\ttag: Tags.ScopeSlot,\n\t\tlabel,\n\t\tchildren:\n\t\t\ttypeof render !== 'function' ? children : render(...args),\n\t};\n}\n\nfunction findComponent(\n\ttag: any,\n\tcomponents: Record<string, Component>[],\n): Component | string | null {\n\tif (!tag) { return null; }\n\tif (typeof tag !== 'string') { return tag; }\n\tif (tag === 'template') { return tag; }\n\tif (/^neep:.+/i.test(tag)) { return tag; }\n\tfor (const list of components) {\n\t\tconst component = list[tag];\n\t\tif (component) { return component; }\n\t}\n\treturn globalComponents[tag] || tag;\n}\n\nfunction exec(\n\tnObject: Entity,\n\tdelivered: Delivered,\n\tnode: any,\n\tslots: Slots,\n\tcomponents: Record<string, Component>[],\n\tnative = false,\n): any {\n\tif (Array.isArray(node)) {\n\t\treturn node.map(n =>\n\t\t\texec(nObject, delivered, n, slots, components, native)\n\t\t);\n\t}\n\tif (!isElement(node)) { return node; }\n\tconst { inserted, args = [{}] } = node;\n\tlet tag = findComponent(node.tag, components);\n\tif (tag === Tags.Deliver) {\n\t\tconst props = { ...node.props };\n\t\tdelete props.ref;\n\t\tdelete props.slot;\n\t\tdelete props.key;\n\t\tconst newDelivered = Object.create(delivered);\n\t\tupdateProps(newDelivered, props || {}, {}, true);\n\t\treturn {\n\t\t\t...node,\n\t\t\ttag,\n\t\t\t$__neep__delivered: newDelivered,\n\t\t\tchildren: node.children.map(n => exec(\n\t\t\t\tnObject,\n\t\t\t\tnewDelivered,\n\t\t\t\tn,\n\t\t\t\tslots,\n\t\t\t\tcomponents,\n\t\t\t\tnative,\n\t\t\t)),\n\t\t};\n\t}\n\n\tconst children = node.children\n\t\t.map(n => exec(nObject, delivered, n, slots, components, native));\n\n\tif (typeof tag === 'function') {\n\t\tif (tag[typeSymbol] === 'simple') {\n\t\t\treturn execSimple(\n\t\t\t\tnObject,\n\t\t\t\tdelivered,\n\t\t\t\tnode,\n\t\t\t\ttag,\n\t\t\t\tcomponents,\n\t\t\t\tchildren,\n\t\t\t);\n\t\t}\n\t\treturn { ...node, $__neep__delivered: delivered, children, tag };\n\n\t}\n\tif (tag === Tags.Slot) {\n\t\ttag = native ? 'slot' : Tags.ScopeSlot;\n\t}\n\tif (tag !== Tags.ScopeSlot || inserted) {\n\t\treturn { ...node, children, tag };\n\t}\n\treturn execSlot({ ...node, tag }, slots, children, args);\n}\n\n\nfunction renderNode<R extends object = object>(\n\tiRender: IRender,\n\tnode: R | NeepNode | NeepNode[] | undefined | null,\n\tcontext: Context,\n\trender?: Render,\n): NeepNode[] {\n\tif (Array.isArray(node)) { return node; }\n\tif (isElement(node)) { return [node]; }\n\tif (node === undefined || node === null) {\n\t\treturn [{ [isElementSymbol]: true, tag: null, children: [] }];\n\t}\n\tif (!iRender.isNode(node)\n\t\t&& node && typeof node === 'object' && render\n\t) {\n\t\tnode = render(node, context, auxiliary);\n\t}\n\tif (isElement(node)) { return [node]; }\n\tif (node === undefined || node === null) {\n\t\treturn [{ [isElementSymbol]: true, tag: null, children: [] }];\n\t}\n\treturn [{\n\t\t[isElementSymbol]: true,\n\t\ttag: Tags.Value,\n\t\tvalue: node,\n\t\tchildren: [],\n\t}];\n}\n\nexport default function normalize(\n\tnObject: Entity,\n\tresult: any,\n) {\n\tconst { component } = nObject;\n\treturn exec(\n\t\tnObject,\n\t\tnObject.delivered,\n\t\trenderNode(\n\t\t\tnObject.iRender,\n\t\t\tresult,\n\t\t\tnObject.context,\n\t\t\tcomponent[renderSymbol],\n\t\t),\n\t\tnObject.context.slots,\n\t\tgetComponents(component[componentsSymbol]),\n\t\tBoolean(nObject.native),\n\t);\n}\n","import NeepObject from './Object';\n\nlet delayedRefresh = 0;\nconst objectSet = new Set<NeepObject>();\nexport function wait(obj: NeepObject) {\n\tif (delayedRefresh <= 0) { return false; }\n\tobjectSet.add(obj);\n\treturn true;\n}\nfunction run() {\n\tif (delayedRefresh > 0) { return; }\n\tconst list = [...objectSet];\n\tobjectSet.clear();\n\tlist.forEach(o => o.refresh());\n}\nasync function asyncRefresh<T>(f: () => PromiseLike<T> | T): Promise<T> {\n\ttry {\n\t\tdelayedRefresh++;\n\t\treturn await f();\n\t} finally {\n\t\tdelayedRefresh--;\n\t\trun();\n\t}\n}\nexport default function refresh<T>(f: () => T, async?: false): T;\nexport default function refresh<T>(\n\tf: () => PromiseLike<T> | T,\n\tasync: true,\n): Promise<T>;\nexport default function refresh<T>(\n\tf: () => PromiseLike<T> | T,\n\tasync?: boolean,\n): PromiseLike<T> | T;\nexport default function refresh<T>(\n\tf: () => PromiseLike<T> | T,\n\tasync?: boolean,\n): PromiseLike<T> | T {\n\tif (async) { return asyncRefresh(f); }\n\ttry {\n\t\tdelayedRefresh++;\n\t\treturn f();\n\t} finally {\n\t\tdelayedRefresh--;\n\t\trun();\n\t}\n}\n","import {\n\tExposed, Delivered,\n\tEntity as ComponentEntity,\n\tNativeComponent,\n\tHook, Hooks, NeepNode, IRender, Component,\n} from '../type';\nimport { callHook, setHook } from '../hook';\nimport { MountedNode } from './draw';\nimport Container from './Container';\nimport convert, { TreeNode } from './convert';\nimport { wait } from './refresh';\nimport { monitorable } from '../install';\nimport EventEmitter from '../EventEmitter';\n\nfunction createExposed(obj: NeepObject): Exposed {\n\tconst cfg: { [K in Exclude<keyof Exposed, '$label'>]-?:\n\t\t{ configurable: true, value: Exposed[K] }\n\t\t| { configurable: true, get(): Exposed[K] }\n\t} = {\n\t\t$parent: { configurable: true, get: () => obj.parent?.exposed },\n\t\t$component: { configurable: true, value: null },\n\t\t$isContainer: { configurable: true, value: false },\n\t\t$created: { configurable: true, get: () => obj.created },\n\t\t$destroyed: { configurable: true, get: () => obj.destroyed },\n\t\t$mounted: { configurable: true, get: () => obj.mounted },\n\t\t$unmounted: { configurable: true, get: () => obj.unmounted },\n\t};\n\tconst exposed: Exposed = Object.create(null, cfg);\n\treturn exposed;\n}\n\nlet completeList: (() => void)[] | undefined;\nexport function setCompleteList(list?: (() => void)[]) {\n\tcompleteList = list;\n}\nexport function complete(it: () => void) {\n\tif (!completeList) {\n\t\tit();\n\t} else {\n\t\tcompleteList.push(it);\n\t}\n}\n\nfunction createEntity(obj: NeepObject): ComponentEntity {\n\tconst cfg: { [K in keyof ComponentEntity]-?:\n\t\t{ configurable: true, value: ComponentEntity[K], writable?: boolean }\n\t\t| { configurable: true, get(): ComponentEntity[K] }\n\t} = {\n\t\texposed: { configurable: true, get: () => obj.exposed },\n\t\tdelivered: { configurable: true, get: () => obj.delivered },\n\t\tparent: { configurable: true, get: () => obj.parent?.entity },\n\t\tcomponent: { configurable: true, value: null },\n\t\tisContainer: { configurable: true, value: false },\n\t\tcreated: { configurable: true, get: () => obj.created },\n\t\tdestroyed: { configurable: true, get: () => obj.destroyed },\n\t\tmounted: { configurable: true, get: () => obj.mounted },\n\t\tunmounted: { configurable: true, get: () => obj.unmounted },\n\t\t$_hooks: { configurable: true, value: Object.create(null) },\n\t\t$_valueIndex: { configurable: true, value: 0, writable: true },\n\t\t$_values: { configurable: true, value: [] },\n\t\tcallHook: {\n\t\t\tconfigurable: true,\n\t\t\tvalue(h: string) { callHook(h, entity); },\n\t\t},\n\t\tsetHook: {\n\t\t\tconfigurable: true,\n\t\t\tvalue(id: string, hook: Hook) {\n\t\t\t\treturn setHook(id, hook, entity);\n\t\t\t},\n\t\t},\n\t\trefresh: { configurable: true, value: obj.refresh.bind(obj) },\n\t\ton: { configurable: true, value: obj.on },\n\t\temit: { configurable: true, value: obj.emit },\n\t\tconfig: { configurable: true, value: obj.config },\n\t};\n\tconst entity: ComponentEntity = Object.create(null, cfg);\n\treturn entity;\n}\n\nexport default class NeepObject {\n\treadonly events = new EventEmitter();\n\treadonly emit = this.events.emit;\n\treadonly on = this.events.on;\n\treadonly eventCancelHandles = new Set<() => void>();\n\treadonly iRender: IRender;\n\treadonly components: Record<string, Component> = Object.create(null);\n\treadonly config: Record<string, any> = Object.create(null);\n\t/** 接受到的呈递值 */\n\treadonly parentDelivered: Delivered;\n\t/** 向后代呈递的值 */\n\treadonly delivered: Delivered;\n\t/** 组件暴露值 */\n\treadonly exposed: Exposed = createExposed(this);\n\t/** 组件实体 */\n\treadonly entity: ComponentEntity = createEntity(this);\n\t/** 父组件 */\n\tparent?: NeepObject;\n\t/** 原生组件 */\n\tnative: NativeComponent | undefined;\n\t/** 状态 */\n\tcreated: boolean = false;\n\tdestroyed: boolean = false;\n\tmounted: boolean = false;\n\tunmounted: boolean = false;\n\t/**  子组件的暴露值 */\n\treadonly children: Set<Exposed> = new Set();\n\t/** The subtree mounted on the parent node */\n\ttree: (MountedNode | MountedNode[])[] = [];\n\treadonly container: Container;\n\tconstructor(\n\t\tiRender: IRender,\n\t\tparent?: NeepObject,\n\t\tdelivered: Delivered = parent?.delivered || Object.create(null),\n\t\tcontainer?: Container,\n\t) {\n\t\tthis.iRender = iRender;\n\t\tthis.parentDelivered = delivered;\n\t\tthis.delivered = Object.create(delivered);\n\t\tif (parent) {\n\t\t\tthis.parent = parent;\n\t\t}\n\t\tthis.container = container || this as any as Container;\n\t}\n\t/** 结果渲染函数 */\n\tprotected _render: () => NeepNode[] = () => [];\n\n\tget canRefresh(): boolean {\n\t\tif (wait(this)) { return false; }\n\t\treturn !this._delayedRefresh;\n\t}\n\tprotected get needRefresh(): boolean {\n\t\tif (wait(this)) { return false; }\n\t\tif (this._delayedRefresh) { return false; }\n\t\tconst needRefresh = this._needRefresh;\n\t\tthis._needRefresh = false;\n\t\treturn needRefresh;\n\t}\n\t/** 是否需要继续刷新 */\n\tprotected _needRefresh = false;\n\tprivate _delayedRefresh = 0;\n\t/** 是否为刷新中 */\n\tprivate _refreshing = false;\n\t/** 渲染结果 */\n\tprotected _nodes: (TreeNode | TreeNode[])[] = [];\n\tprotected requestDraw() { }\n\tasync asyncRefresh<T>(f: () => PromiseLike<T> | T): Promise<T> {\n\t\ttry {\n\t\t\tthis._delayedRefresh++;\n\t\t\treturn await f();\n\t\t} finally {\n\t\t\tthis._delayedRefresh--;\n\t\t\tthis.refresh();\n\t\t}\n\t}\n\trefresh(): void;\n\trefresh<T>(f: () => T, async?: false): T;\n\trefresh<T>(f: () => PromiseLike<T> | T, async: true): Promise<T>;\n\trefresh<T>(\n\t\tf: () => PromiseLike<T> | T,\n\t\tasync?: boolean,\n\t): PromiseLike<T> | T;\n\trefresh<T>(\n\t\tf?: () => PromiseLike<T> | T,\n\t\tasync?: boolean,\n\t): PromiseLike<T> | T | undefined;\n\trefresh<T>(\n\t\tf?: () => PromiseLike<T> | T,\n\t\tasync?: boolean,\n\t): PromiseLike<T> | T | undefined {\n\t\tif (typeof f === 'function') {\n\t\t\tif (async) { return this.asyncRefresh(f); }\n\t\t\ttry {\n\t\t\t\tthis._delayedRefresh++;\n\t\t\t\treturn f();\n\t\t\t} finally {\n\t\t\t\tthis._delayedRefresh--;\n\t\t\t\tif (this._delayedRefresh <= 0) {\n\t\t\t\t\tthis.refresh();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (this.destroyed) { return; }\n\t\tthis._needRefresh = true;\n\t\tif (!this.created) { return; }\n\n\t\tif (this._refreshing) { return; }\n\t\tthis._refreshing = true;\n\n\t\tlet nodes: NeepNode[] | undefined;\n\t\twhile(this.needRefresh) {\n\t\t\tnodes = this._render();\n\t\t\tif (this.destroyed) { return; }\n\t\t}\n\t\tthis._refreshing = false;\n\t\tif (!this.canRefresh) { return; }\n\t\tif (!nodes) { return; }\n\n\t\tthis._nodes = convert(this, nodes, this._nodes);\n\t\tif (!this.mounted) { return; }\n\t\tif (this.destroyed) { return; }\n\t\tif (this.unmounted) { return; }\n\t\tthis.requestDraw();\n\t}\n\tcallHook<H extends Hooks>(id: H): void;\n\tcallHook(id: string): void;\n\tcallHook(id: string): void {\n\t\tcallHook(id, this.entity);\n\t}\n\n\tchildNodes: any[] = [];\n\t/** 更新属性及子代 */\n\tprotected _update(props: object, children: any[]): void {\n\t\tthis.childNodes = children;\n\t}\n\t/** 更新属性及子代 */\n\tupdate(props: object, children: any[]): void {\n\t\tthis._update(props, children);\n\t}\n\n\n\tprivate __executed_destroy = false;\n\tprivate __executed_mount = false;\n\tprivate __executed_mounted = false;\n\tprotected _destroy() { }\n\tdestroy() {\n\t\tif (this.__executed_destroy) { return; }\n\t\tthis.__executed_destroy = true;\n\t\tthis.callHook('beforeDestroy');\n\t\tthis._destroy();\n\t\tthis.callHook('destroyed');\n\t\tthis.destroyed = true;\n\t}\n\tprotected _mount() { }\n\tmount() {\n\t\tif (this.__executed_destroy) { return; }\n\t\tif (this.__executed_mount) { return; }\n\t\tthis.__executed_mount = true;\n\t\tthis.callHook('beforeMount');\n\t\tconst result = monitorable.exec(\n\t\t\tc => c && this.requestDraw(),\n\t\t\t() => {\n\t\t\t\tthis._mount();\n\t\t\t\tthis.mounted = true;\n\t\t\t},\n\t\t);\n\t\tthis._cancelDrawMonitor = result.stop;\n\t\tcomplete(() => this.callHook('mounted'));\n\t}\n\tprotected _unmount() { }\n\tunmount() {\n\t\tif (!this.mounted) { return; }\n\t\tif (this.__executed_mounted) { return; }\n\t\tthis.__executed_mounted = true;\n\t\tthis.callHook('beforeUnmount');\n\t\tthis._unmount();\n\t\tthis.callHook('unmounted');\n\t\tthis.unmounted = true;\n\t}\n\t_draw() {}\n\t_cancelDrawMonitor?: () => void;\n\tdraw() {\n\t\tif (this.__executed_destroy) { return; }\n\t\tthis._cancelDrawMonitor?.();\n\t\tthis.callHook('beforeUpdate');\n\t\tconst result = monitorable.exec(\n\t\t\tc => c && this.requestDraw(),\n\t\t\t() => this._draw(),\n\t\t);\n\t\tthis._cancelDrawMonitor = result.stop;\n\t\tcomplete(() => this.callHook('updated'));\n\t}\n}\n","import { Component, NeepNode, Slots, Context, Delivered, NativeShadow } from '../type';\nimport auxiliary from '../auxiliary';\nimport { monitorable } from '../install';\nimport { setCurrent } from '../helper/current';\nimport convert, { destroy, TreeNode } from './convert';\nimport draw, { unmount, MountedNode, getNodes } from './draw';\nimport normalize from './normalize';\nimport { getSlots, setSlots } from './slot';\nimport NeepObject from './Object';\nimport { initContext } from '../helper/context';\nimport { updateProps } from './props';\nimport { typeSymbol, configSymbol, componentsSymbol } from '../symbols';\nimport refresh from './refresh';\n\nfunction update(\n\tnObject: Entity<any, any>,\n\tprops: any,\n\tchildren:any[],\n) {\n\tupdateProps(nObject.props, props);\n\tnObject.events.updateInProps(props);\n\tconst slots = Object.create(null);\n\tconst { native } = nObject;\n\tconst childNodes = getSlots(\n\t\tnObject.iRender,\n\t\tchildren,\n\t\tslots,\n\t\tBoolean(native),\n\t);\n\tsetSlots(slots, nObject.slots);\n\tif (!native) { return; }\n\tnObject.nativeNodes\n\t\t= convert(nObject, childNodes, nObject.nativeNodes);\n\tif (!nObject.mounted) { return; }\n\tnObject.requestDraw();\n}\n\nfunction createContext<\n\tP extends object = object,\n\tR extends object = object\n>(nObject: Entity<P, R>): Context {\n\treturn initContext({\n\t\tslots: nObject.slots,\n\t\tget created() { return nObject.created; },\n\t\tget parent() { return nObject.parent.exposed; },\n\t\tget delivered() { return nObject.parentDelivered; },\n\t\tget children() { return nObject.children; },\n\t\tget childNodes() { return nObject.childNodes; },\n\t\tget emit() { return nObject.emit; },\n\t\trefresh(f) { nObject.refresh(f); },\n\t}, nObject.exposed);\n}\n\n/** 初始化渲染 */\nfunction initRender<R extends object = object>(\n\tnObject: Entity<any, R>\n): { render(): any, nodes: any, stopRender(): void } {\n\tconst {\n\t\tcomponent,\n\t\tprops,\n\t\tcontext,\n\t\tentity,\n\t} = nObject;\n\tconst refresh = (changed: boolean) => changed && nObject.refresh();\n\t// 初始化执行\n\tconst result = monitorable.exec(refresh, () => setCurrent(\n\t\t() => component(props, context, auxiliary),\n\t\tentity,\n\t), { resultOnly: true });\n\tif (typeof result === 'function') {\n\t\t// 响应式\n\t\tconst render = monitorable.createExecutable(\n\t\t\trefresh,\n\t\t\t() => normalize(nObject, (result as () => NeepNode)()),\n\t\t);\n\t\treturn {\n\t\t\tnodes: render(),\n\t\t\trender,\n\t\t\tstopRender: () => render.stop(),\n\t\t};\n\t}\n\n\tconst render = monitorable.createExecutable(\n\t\trefresh,\n\t\t() => normalize(nObject, setCurrent(\n\t\t\t() => component(props, context, auxiliary),\n\t\t\tentity,\n\t\t)),\n\t);\n\treturn {\n\t\tnodes: monitorable.exec(\n\t\t\trefresh,\n\t\t\t() => normalize(nObject, result),\n\t\t\t{ resultOnly: true },\n\t\t),\n\t\trender,\n\t\tstopRender: () => render.stop(),\n\t};\n}\n\n\nexport default class Entity<\n\tP extends object = object,\n\tR extends object = object\n> extends NeepObject {\n\t/** 组件函数 */\n\treadonly component: Component<P, R>;\n\t/** 组件属性 */\n\treadonly props: P = monitorable.encase(Object.create(null));\n\t/** 组件槽 */\n\treadonly slots: Slots = monitorable.encase(Object.create(null));\n\t/** 结果渲染函数 */\n\tprivate readonly _stopRender:() => void;\n\t/** 原生子代 */\n\tnativeNodes: (TreeNode | TreeNode[])[] | undefined;\n\tshadowTree: (MountedNode | MountedNode[])[] = [];\n\tnativeTree: (MountedNode | MountedNode[])[] = [];\n\tprivate readonly _shadow: NativeShadow | undefined;\n\t/** 组件上下文 */\n\treadonly context: Context;\n\treadonly parent: NeepObject;\n\t/** 结果渲染函数 */\n\tconstructor(\n\t\tcomponent: Component<P, R>,\n\t\tprops: object,\n\t\tchildren: any[],\n\t\tparent: NeepObject,\n\t\tdelivered?: Delivered,\n\t) {\n\t\tsuper(parent.iRender, parent, delivered, parent.container);\n\t\tthis.component = component;\n\t\tObject.assign(this.config, component[configSymbol]);\n\t\tObject.assign(this.components, component[componentsSymbol]);\n\t\tReflect.defineProperty(\n\t\t\tthis.exposed,\n\t\t\t'$component',\n\t\t\t{ value: component, enumerable: true, configurable: true },\n\t\t);\n\t\t// 原生组件\n\t\t[this.native, this._shadow] =\n\t\t\tcomponent[typeSymbol] === 'native' &&\n\t\t\tthis.iRender.component?.() || [];\n\t\t// 父子关系\n\t\tthis.parent = parent;\n\t\tparent.children.add(this.exposed);\n\t\t// 上下文属性\n\t\tconst context = createContext(this);\n\t\tthis.context = context;\n\t\t// 初始化钩子\n\t\tthis.callHook('beforeCreate');\n\t\t// 更新属性\n\t\tthis.childNodes = children;\n\t\trefresh(() => update(this, props, children));\n\t\t// 获取渲染函数及初始渲染\n\t\tconst { render, nodes, stopRender } = initRender(this);\n\t\tthis._render = render;\n\t\tthis._stopRender = stopRender;\n\t\tthis._nodes = convert(this, nodes);\n\t\t// 初始化钩子\n\t\tthis.callHook('created');\n\t\tthis.created = true;\n\t\tif (this._needRefresh) { this.refresh(); }\n\t}\n\t/** 更新属性及子代 */\n\t_update(props: object, children: any[]): void {\n\t\tif (this.destroyed) { return; }\n\t\tthis.childNodes = children;\n\t\trefresh(() => update(this, props, children));\n\t}\n\t_destroy() {\n\t\tif (this._stopRender) {\n\t\t\tthis._stopRender();\n\t\t}\n\t\tthis.parent.children.delete(this.exposed);\n\t\tdestroy(this._nodes);\n\t}\n\n\t/** 刷新 */\n\trequestDraw() {\n\t\tthis.container.markDraw(this);\n\t}\n\t_draw() {\n\t\tconst {nativeNodes, iRender, _shadow, native} = this;\n\t\tif (!native || !nativeNodes || !_shadow) {\n\t\t\tthis.tree = draw(\n\t\t\t\tiRender,\n\t\t\t\tthis._nodes,\n\t\t\t\tthis.tree,\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\t\tthis.shadowTree = draw(\n\t\t\tiRender,\n\t\t\tthis._nodes,\n\t\t\tthis.shadowTree,\n\t\t);\n\t\tthis.nativeTree = draw(\n\t\t\tiRender,\n\t\t\tnativeNodes,\n\t\t\tthis.nativeTree,\n\t\t);\n\t}\n\t_mount() {\n\t\tconst {nativeNodes, iRender, _shadow, native, _nodes} = this;\n\t\tif (!native || !nativeNodes || !_shadow) {\n\t\t\tthis.tree = draw(iRender, _nodes);\n\t\t\treturn;\n\t\t}\n\t\tthis.tree = draw(iRender, convert(this, native));\n\t\tthis.shadowTree = draw(iRender, _nodes);\n\t\tfor (const it of getNodes(this.shadowTree)) {\n\t\t\tiRender.insert(_shadow, it);\n\t\t}\n\t\tthis.nativeTree = draw(iRender, nativeNodes);\n\t\tfor (const it of getNodes(this.nativeTree)) {\n\t\t\tiRender.insert(native, it);\n\t\t}\n\t}\n\t_unmount() {\n\t\tconst {iRender, nativeTree} = this;\n\t\tunmount(iRender, this.tree);\n\t\tif (!nativeTree) { return; }\n\t\tunmount(iRender, nativeTree);\n\t}\n}\n","import { getRender } from '../install';\nimport { NeepNode, NeepElement, Tag } from '../type';\nimport { Tags, isElement, Value, Template } from '../auxiliary';\nimport { isElementSymbol, typeSymbol } from '../symbols';\nimport { recursive2iterable } from './recursive';\nimport Entity from './Entity';\nimport NeepObject from './Object';\nimport Container from './Container';\nimport { updateProps } from './props';\n\nexport interface TreeNode\n\textends Omit<\n\t\tNeepElement,\n\t\t'children' | 'tag' | typeof isElementSymbol\n\t>\n{\n\t/** 标签名 */\n\ttag: Tag;\n\tchildren: (this | this[])[];\n\tmounted?: boolean;\n\tcomponent?: NeepObject;\n}\n/** 强制转换为 NeepElement */\nfunction toElement(t: any): null | NeepElement {\n\tif (t === false || t === null || t === undefined) {\n\t\treturn null;\n\t}\n\tif (isElement(t)) {\n\t\treturn t;\n\t}\n\treturn {\n\t\t[isElementSymbol]: true,\n\t\ttag: Value,\n\t\tkey: t,\n\t\tvalue: t,\n\t\tchildren: [],\n\t};\n}\n\nexport function destroy(\n\ttree: TreeNode | TreeNode[] | (TreeNode | TreeNode[])[]\n) {\n\tif (Array.isArray(tree)) {\n\t\ttree.forEach(t => destroy(t));\n\t\treturn;\n\t}\n\tconst { component } = tree;\n\tif (component) { component.destroy(); }\n}\n\nfunction createItem(\n\tnObject: NeepObject,\n\tsource: NeepNode,\n): TreeNode {\n\tif (!source) { return { tag: null, children: [] }; }\n\tconst { tag } = source;\n\tif (!tag) { return { tag: null, children: [] }; }\n\tif (typeof tag !== 'string') {\n\t\tif (tag[typeSymbol] === 'simple') {\n\t\t\treturn {\n\t\t\t\t...source,\n\t\t\t\tchildren: convert(nObject, source.children),\n\t\t\t\tcomponent: undefined,\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t...source, children: [],\n\t\t\tcomponent: new Entity(\n\t\t\t\ttag,\n\t\t\t\tsource.props || {},\n\t\t\t\tsource.children,\n\t\t\t\tnObject,\n\t\t\t\tsource.$__neep__delivered,\n\t\t\t),\n\t\t};\n\t}\n\tif (tag === Tags.Container) {\n\t\tconst type = source?.props?.type;\n\t\tconst iRender = type ? getRender(type) : nObject.iRender;\n\t\treturn {\n\t\t\t...source, children: [],\n\t\t\tcomponent: new Container(\n\t\t\t\tiRender,\n\t\t\t\tsource.props || {},\n\t\t\t\tsource.children,\n\t\t\t\tnObject,\n\t\t\t\tsource.$__neep__delivered,\n\t\t\t),\n\t\t};\n\t}\n\tif (tag === Tags.Value) {\n\t\treturn { ...source, children: [] };\n\t}\n\tif (tag === Template || tag.substr(0, 5) === 'Neep:') {\n\t\treturn {\n\t\t\t...source,\n\t\t\tchildren: convert(nObject, source.children),\n\t\t};\n\t}\n\treturn {...source, children: convert(nObject, source.children) };\n}\n\n/**\n * 更新树节点\n * @param nObject Neep 对象\n * @param source 用于替换的源\n * @param tree 已有树\n */\nfunction updateList(\n\tnObject: NeepObject,\n\tsource: any[],\n\ttree: TreeNode | TreeNode[],\n): TreeNode[] {\n\tif (!Array.isArray(tree)) { tree = [tree]; }\n\tconst newList: TreeNode[] = [];\n\tfor (const src of recursive2iterable(source)) {\n\t\tconst node = toElement(src);\n\t\tif (!node) { continue; }\n\t\tconst index = tree.findIndex(it =>\n\t\t\tit.tag === node.tag && it.key === node.key\n\t\t);\n\t\tif (index >= 0) {\n\t\t\tnewList.push(updateItem(nObject, node, tree[index]));\n\t\t\ttree.splice(index, 1);\n\t\t} else {\n\t\t\tnewList.push(createItem(nObject, node));\n\t\t}\n\t}\n\tdestroy(tree);\n\treturn newList;\n}\n\n/**\n * 更新树节点\n * @param tree 已有树\n * @param source 用于替换的源\n * @param nObject Neep 对象\n */\nfunction updateItem(\n\tnObject: NeepObject,\n\tsource: NeepNode,\n\ttree?: TreeNode | TreeNode[],\n): TreeNode {\n\tif (!tree) {\n\t\treturn createItem(nObject, source);\n\t}\n\tif (!source) {\n\t\tdestroy(tree);\n\t\treturn { tag: null, children: [] };\n\t}\n\tif (Array.isArray(tree)) {\n\t\tif (!tree.length) { return createItem(nObject, source); }\n\t\tconst index = tree.findIndex(it => it.tag === source.tag);\n\t\tif (index < 0) {\n\t\t\tdestroy(tree);\n\t\t\treturn createItem(nObject, source);\n\t\t}\n\t\tconst all = tree;\n\t\t[tree] = tree.splice(index, 1);\n\t\tdestroy(all);\n\t}\n\tconst { tag } = source;\n\tif (tag !== tree.tag) {\n\t\tdestroy(tree);\n\t\treturn createItem(nObject, source);\n\t}\n\tif (!tag) { return { tag: null, children: [] }; }\n\tif (typeof tag !== 'string') {\n\t\tif (tag[typeSymbol] === 'simple') {\n\t\t\treturn {\n\t\t\t\t...source,\n\t\t\t\tchildren: convert(\n\t\t\t\t\tnObject,\n\t\t\t\t\tsource.children,\n\t\t\t\t\ttree.children,\n\t\t\t\t),\n\t\t\t\tcomponent: undefined,\n\t\t\t};\n\t\t}\n\t\tconst { component } = tree;\n\t\tif (!component) { return createItem(nObject, source); }\n\t\tcomponent.update(source.props || {}, source.children);\n\t\treturn { ...source, children: [], component };\n\t}\n\tif (tag === Tags.Container) {\n\t\tconst { component } = tree;\n\t\tif (!component) { return createItem(nObject, source); }\n\t\tconst type = source?.props?.type;\n\t\tconst iRender = type ? getRender(type) : nObject.iRender;\n\t\tif (iRender !== component.iRender) {\n\t\t\treturn createItem(nObject, source);\n\t\t}\n\t\tcomponent.update(source.props || {}, source.children);\n\t\treturn { ...source, children: [], component };\n\t}\n\tif (tag === Tags.Value) {\n\t\treturn { ...source, children: [] };\n\t}\n\tif (tag === Template || tag.substr(0, 5) === 'Neep:') {\n\t\tlet delivered: any;\n\t\tif (Tags.Deliver === tag) {\n\t\t\tconst props = { ...source.props };\n\t\t\tdelete props.ref;\n\t\t\tdelete props.slot;\n\t\t\tdelete props.key;\n\t\t\tdelivered = updateProps(\n\t\t\t\ttree.$__neep__delivered,\n\t\t\t\tprops,\n\t\t\t\ttree.props,\n\t\t\t\ttrue,\n\t\t\t);\n\t\t}\n\t\treturn {\n\t\t\t...source,\n\t\t\t$__neep__delivered: delivered,\n\t\t\tchildren: convert(\n\t\t\t\tnObject,\n\t\t\t\tsource.children,\n\t\t\t\ttree.children,\n\t\t\t),\n\t\t};\n\t}\n\treturn {\n\t\t...source,\n\t\tchildren: convert(nObject, source.children, tree.children),\n\t};\n}\n\n\nfunction createAll(\n\tnObject: NeepObject,\n\tsource: any[],\n): (TreeNode | TreeNode[])[] {\n\tif (!source.length) { return []; }\n\treturn (source as any[]).map(item => {\n\t\tif (!Array.isArray(item)) {\n\t\t\treturn createItem(nObject, toElement(item));\n\t\t}\n\t\treturn [...recursive2iterable(item)]\n\t\t\t.map(it => createItem(nObject, toElement(it)));\n\t});\n}\nfunction *updateAll(\n\tnObject: NeepObject,\n\tsource: any[],\n\ttree: (TreeNode | TreeNode[])[],\n): Iterable<TreeNode | TreeNode[]> {\n\tlet index = 0;\n\tlet length = Math.min(source.length, source.length);\n\tfor (; index < length; index++) {\n\t\tconst src = source[index];\n\t\tif (Array.isArray(src)) {\n\t\t\tyield updateList(nObject, src, tree[index]);\n\t\t} else {\n\t\t\tyield updateItem(nObject, toElement(src), tree[index]);\n\t\t}\n\t}\n\tlength = Math.max(source.length, source.length);\n\tif (tree.length > length) {\n\t\t\t// 销毁多余项\n\t\t\tfor (; index < length; index++) {\n\t\t\t\tdestroy(tree[index]);\n\t\t\t}\n\t}\n\tif (source.length > length) {\n\t\t// 创建多余项\n\t\tfor (; index < length; index++) {\n\t\t\tconst src = toElement(source[index]);\n\t\t\tif (Array.isArray(src)) {\n\t\t\t\tyield [...recursive2iterable(src)]\n\t\t\t\t\t.map(it => createItem(nObject, it));\n\t\t\t} else {\n\t\t\t\tyield createItem(nObject, src);\n\t\t\t}\n\t\t}\n\t}\n}\n\n\n/**\n * 更新树\n * @param source 用于替换的源\n * @param nObject Neep 对象\n * @param tree 已有树\n */\nfunction convert(\n\tnObject: NeepObject,\n\tsource: any,\n\ttree?: (TreeNode | TreeNode[])[],\n): (TreeNode | TreeNode[])[] {\n\tif (!Array.isArray(source)) { source = [source]; }\n\tif (!tree) {\n\t\treturn createAll(nObject, source);\n\t}\n\treturn [...updateAll(nObject, source, tree)];\n}\n\n\nexport default convert;\n","import {\n\tIRender,\n\tMountProps,\n\tNativeNode,\n\tNativeContainer,\n\tDelivered,\n} from '../type';\nimport { Tags } from '../auxiliary';\nimport { createMountedNode } from './id';\nimport convert, { destroy } from './convert';\nimport draw, { unmount, getNodes, MountedNode, setRefList } from './draw';\nimport NeepObject, { setCompleteList, complete } from './Object';\nimport { nextFrame, monitorable } from '../install';\n\n\nlet awaitDraw = new Set<Container>();\nlet requested = false;\nfunction markDraw(c: Container) {\n\tawaitDraw.add(c);\n\tif (requested) { return; }\n\trequested = true;\n\tnextFrame(() => {\n\t\trequested = false;\n\t\tconst list = [...awaitDraw];\n\t\tawaitDraw.clear();\n\t\tlist.map(c => c.drawAll());\n\t});\n}\n\nexport default class Container extends NeepObject {\n\tprops: MountProps;\n\t/** 组件树结构 */\n\tcontent: (MountedNode | MountedNode[])[] = [];\n\t_node: NativeNode | null = null;\n\t_container: NativeContainer | null = null;\n\treadonly rootContainer: Container = this;\n\tconstructor(\n\t\tiRender: IRender,\n\t\tprops: MountProps,\n\t\tchildren: any[],\n\t\tparent?: NeepObject,\n\t\tdelivered?: Delivered,\n\t) {\n\t\tsuper(iRender, parent, delivered);\n\t\tthis.props = props;\n\t\tthis.parent = parent;\n\t\tif (parent) {\n\t\t\tthis.rootContainer = parent.container.rootContainer;\n\t\t}\n\t\tthis.callHook('beforeCreate');\n\t\tthis._render = () => children;\n\t\tthis._nodes = convert(this, children);\n\t\tthis.callHook('created');\n\t\tthis.created = true;\n\t}\n\t_drawChildren = false;\n\t_drawContainer = false;\n\tsetChildren(children: any[]): void {\n\t\tif (this.destroyed) { return; }\n\t\tthis.childNodes = children;\n\t\tthis._render = () => children;\n\t\tthis._drawChildren = true;\n\t\tthis.refresh();\n\t}\n\tsetProps(props: MountProps): void {\n\t\tif (this.destroyed) { return; }\n\t\tthis.props = props;\n\t\tthis._drawContainer = true;\n\t\tthis.refresh();\n\t}\n\t/** 更新属性及子代 */\n\tupdate(props: MountProps, children: any[]): void {\n\t\tthis.refresh(() => {\n\t\t\tthis.setProps(props);\n\t\t\tthis.setChildren(children);\n\t\t});\n\t}\n\trequestDraw() {\n\t\tthis.markDraw(this);\n\t}\n\t_mount() {\n\t\tconst { props, parent, iRender } = this;\n\t\tconst content = draw(this.container.iRender, this._nodes);\n\t\tthis.content = content;\n\t\tconst [container, node]\n\t\t\t= iRender.mount(props, parent?.iRender);\n\t\tfor (const it of getNodes(content)) {\n\t\t\tiRender.insert(container, it);\n\t\t}\n\t\tthis.tree = [createMountedNode({\n\t\t\ttag: Tags.Value,\n\t\t\tcomponent: undefined,\n\t\t\tnode,\n\t\t\tvalue: node,\n\t\t\tchildren: [],\n\t\t})];\n\t\tthis._node = node;\n\t\tthis._container = container;\n\t}\n\t_destroy() {\n\t\tdestroy(this.content);\n\t}\n\t_unmount() {\n\t\tconst { parent, iRender } = this;\n\t\tif (parent) {\n\t\t\tunmount(parent.iRender, this.tree);\n\t\t}\n\t\tiRender.unmount(\n\t\t\tthis._container!,\n\t\t\tthis._node!,\n\t\t\tBoolean(parent),\n\t\t);\n\t\tunmount(this.iRender, this.content);\n\t}\n\t_draw() {\n\t\tconst {\n\t\t\t_drawChildren: drawChildren,\n\t\t\t_drawContainer: drawContainer,\n\t\t} = this;\n\t\tthis._drawContainer = false;\n\t\tif (drawContainer) {\n\t\t\tthis.iRender.drawContainer(\n\t\t\t\tthis._container!,\n\t\t\t\tthis._node!,\n\t\t\t\tthis.props,\n\t\t\t\tthis.parent?.iRender,\n\t\t\t);\n\t\t}\n\t\tif (this.parent && this.parent.iRender !== this.iRender) {\n\t\t\treturn;\n\t\t}\n\t\tthis._drawChildren = false;\n\t\tif (drawChildren) {\n\t\t\tthis.content = draw(\n\t\t\t\tthis.iRender,\n\t\t\t\tthis._nodes,\n\t\t\t\tthis.content,\n\t\t\t);\n\t\t}\n\t}\n\t_drawSelf() {\n\t\tconst {\n\t\t\t_drawChildren: drawChildren,\n\t\t\t_drawContainer: drawContainer,\n\t\t} = this;\n\t\tthis._needDraw = false;\n\t\tthis._drawChildren = false;\n\t\tthis._drawContainer = false;\n\t\tif (drawContainer) {\n\t\t\tthis.iRender.drawContainer(\n\t\t\t\tthis._container!,\n\t\t\t\tthis._node!,\n\t\t\t\tthis.props,\n\t\t\t\tthis.parent?.iRender,\n\t\t\t\ttrue,\n\t\t\t);\n\t\t}\n\t\tif (drawChildren) {\n\t\t\tthis.content = draw(\n\t\t\t\tthis.iRender,\n\t\t\t\tthis._nodes,\n\t\t\t\tthis.content,\n\t\t\t);\n\t\t}\n\t}\n\tdrawSelf() {\n\t\tif (!this.mounted) { return; }\n\t\tif (this.destroyed) { return; }\n\t\tthis.callHook('beforeUpdate');\n\t\tmonitorable.exec(\n\t\t\tc => c && this.markDraw(this),\n\t\t\t() => this._drawSelf(),\n\t\t);\n\t\tcomplete(() => this.callHook('updated'));\n\t}\n\t/** 等待重画的项目 */\n\tprivate _awaitDraw = new Set<NeepObject>();\n\t/** 自身是否需要重绘 */\n\tprivate _needDraw = false;\n\t/** 标记需要绘制的元素 */\n\tmarkDraw(\n\t\tnObject: NeepObject,\n\t\tremove = false,\n\t) {\n\t\tif (this.parent?.iRender === this.iRender) {\n\t\t\tthis.parent.container.markDraw(nObject, remove);\n\t\t\treturn;\n\t\t}\n\t\tif (nObject === this && this.parent) {\n\t\t\tthis.parent.container.markDraw(this, remove);\n\t\t\tthis._needDraw = !remove;\n\t\t} else if (remove) {\n\t\t\tthis._awaitDraw.delete(nObject);\n\t\t} else {\n\t\t\tthis._awaitDraw.add(nObject);\n\t\t}\n\t\tthis.rootContainer.markDrawContainer(\n\t\t\tthis,\n\t\t\t!this._needDraw && !this._awaitDraw.size || this.destroyed,\n\t\t);\n\t}\n\tdrawContainer() {\n\t\tconst {\n\t\t\t_node: node,\n\t\t\t_container: container,\n\t\t\t_awaitDraw: awaitDraw,\n\t\t} = this;\n\t\tif (!node || !container) { return; }\n\t\tthis.callHook('beforeDraw');\n\t\tconst needDraw = this._needDraw;\n\t\tthis._needDraw = false;\n\t\tconst list = [...awaitDraw];\n\t\tawaitDraw.clear();\n\t\tif (needDraw) { this.drawSelf(); }\n\t\tlist.map(c => c.draw());\n\t\tthis.iRender.draw(container, node);\n\t\tcomplete(() => this.callHook('drawn'));\n\t}\n\tprivate _containers = new Set<Container>();\n\tmarkDrawContainer(\n\t\tcontainer: Container,\n\t\tremove = false,\n\t) {\n\t\tif (remove) {\n\t\t\tthis._containers.delete(container);\n\t\t} else {\n\t\t\tthis._containers.add(container);\n\t\t}\n\t\tmarkDraw(this);\n\t}\n\tdrawAll() {\n\t\tconst containers = this._containers;\n\t\tif (!containers.size) { return; }\n\t\tthis.callHook('beforeDrawAll');\n\t\tconst refs: (() => void)[] = [];\n\t\tconst completeList: (() => void)[] = [];\n\t\tsetCompleteList(completeList);\n\t\tsetRefList(refs);\n\t\tconst list = [...containers];\n\t\tcontainers.clear();\n\t\tlist.forEach(c => c.drawContainer());\n\t\tsetRefList();\n\t\trefs.forEach(r => r());\n\t\tcompleteList.forEach(r => r());\n\t\tthis.callHook('drawnAll');\n\t}\n}\n","import {\n\tMountProps,\n\tNeepElement,\n\tComponent,\n\tRootExposed,\n} from '../type';\nimport { isElement, createElement } from '../auxiliary';\nimport { isProduction } from '../constant';\nimport { devtools, getRender } from '../install';\nimport Container from './Container';\n\nexport function render(\n\te?: NeepElement | Component,\n\tp: MountProps = {},\n): RootExposed {\n\tlet params = {...p};\n\tconst container =  new Container(\n\t\tgetRender(p.type),\n\t\tparams,\n\t\te === undefined ? [] : isElement(e) ? [e] : [createElement(e)],\n\t);\n\tif (!isProduction) {\n\t\tdevtools.renderHook(container);\n\t}\n\tconst { exposed } = container;\n\tReflect.defineProperty(exposed, '$update', {\n\t\tvalue(c?: NeepElement | Component) {\n\t\t\tcontainer.setChildren(c === undefined ? []\n\t\t\t\t: isElement(c) ? [c] : [createElement(c)]);\n\t\t\treturn exposed;\n\t\t},\n\t\tconfigurable: true,\n\t});\n\tReflect.defineProperty(exposed, '$mount', {\n\t\tvalue(target?: any) {\n\t\t\tif (exposed.$mounted) { return exposed; }\n\t\t\tif (target) {\n\t\t\t\tparams.target = target;\n\t\t\t\tcontainer.setProps(params);\n\t\t\t}\n\t\t\tcontainer.mount();\n\t\t\treturn exposed;\n\t\t},\n\t\tconfigurable: true,\n\t});\n\tReflect.defineProperty(exposed, '$unmount', {\n\t\tvalue() {\n\t\t\tif (!exposed.$mounted) { return; }\n\t\t\tif (exposed.$unmounted) { return; }\n\t\t\tif (exposed.$destroyed) { return container.destroy(); }\n\t\t\tcontainer.unmount();\n\t\t\treturn;\n\t\t},\n\t\tconfigurable: true,\n\t});\n\tif (params.target) {\n\t\tcontainer.mount();\n\t}\n\treturn exposed as any as RootExposed;\n}\nexport { default as refresh } from './refresh';\n","import { Component, Render, Marks } from './type';\nimport { nameSymbol, typeSymbol, renderSymbol, componentsSymbol, configSymbol } from './symbols';\n\n/** 组件标记函数 */\nexport interface Mark {\n\t<N extends Component<any, any>>(component: N): N;\n}\n\n/** 创建组件标记函数 */\nfunction Mark<S extends keyof Marks>(\n\tsymbol: S,\n\tvalue: Component[S],\n): Mark {\n\treturn component => {\n\t\tcomponent[symbol] = value as any;\n\t\treturn component;\n\t};\n}\n/** 创建组件标记函数 */\nfunction MarkValue<S extends typeof componentsSymbol | typeof configSymbol>(\n\tsymbol: S,\n\tkey: keyof (NonNullable<Marks[typeof configSymbol]>),\n\tvalue: NonNullable<Marks[typeof componentsSymbol]>[typeof key],\n): Mark {\n\treturn component => {\n\t\tlet obj = component[symbol] as any;\n\t\tif (!obj) {\n\t\t\tobj = Object.create(null);\n\t\t\tcomponent[symbol] = obj;\n\t\t}\n\t\tobj[key] = value;\n\t\treturn component;\n\t};\n}\n\n\n/** 标记组件名称 */\nexport function mName(name: string): Mark;\nexport function mName<N extends Component<any, any>>(\n\tname: string,\n\tcomponent: N,\n): N;\nexport function mName<N extends Component<any, any>>(\n\tname: string,\n\tcomponent?: N,\n): Mark | N {\n\tif (!component) { return Mark(nameSymbol, name); }\n\tcomponent[nameSymbol] = name;\n\treturn component;\n}\n\n/** 标记组件类型 */\nexport function mType(type?: 'native' | 'simple' | 'standard'): Mark;\nexport function mType<N extends Component<any, any>>(\n\ttype: 'native' | 'simple' | 'standard',\n\tcomponent: N,\n): N;\nexport function mType<N extends Component<any, any>>(\n\ttype?: 'native' | 'simple' | 'standard',\n\tcomponent?: N,\n): Mark | N {\n\tif (!component) { return Mark(typeSymbol, type); }\n\tcomponent[typeSymbol] = type;\n\treturn component;\n}\n/** 标记为简单组件 */\nexport function mSimple(): Mark;\nexport function mSimple<N extends Component<any, any>>(\n\tcomponent: N,\n): N;\nexport function mSimple<N extends Component<any, any>>(\n\tcomponent?: N,\n): Mark | N {\n\tif (!component) { return Mark(typeSymbol, 'simple'); }\n\tcomponent[typeSymbol] = 'simple';\n\treturn component;\n}\n/** 标记为原生组件 */\nexport function mNative(): Mark;\nexport function mNative<N extends Component<any, any>>(\n\tcomponent: N,\n): N;\nexport function mNative<N extends Component<any, any>>(\n\tcomponent?: N,\n): Mark | N {\n\tif (!component) { return Mark(typeSymbol, 'native'); }\n\tcomponent[typeSymbol] = 'native';\n\treturn component;\n}\n\n/** 标记独立的渲染函数 */\nexport function mRender(fn?: Marks[typeof renderSymbol]): Mark;\nexport function mRender<N extends Component<any, any>>(\n\tfn: Marks[typeof renderSymbol] | undefined,\n\tcomponent: N,\n): N;\nexport function mRender<N extends Component<any, any>>(\n\tfn?: Marks[typeof renderSymbol] | undefined,\n\tcomponent?: N,\n): Mark | N {\n\tif (!component) { return Mark(renderSymbol, fn); }\n\tcomponent[renderSymbol] = fn;\n\treturn component;\n}\n\n/** 标记组件类型 */\nexport function mConfig(name: string, config: any): Mark;\nexport function mConfig<N extends Component<any, any>>(\n\tname: string, config: any,\n\tcomponent: N,\n): N;\nexport function mConfig<N extends Component<any, any>>(\n\tname: string, config: any,\n\tcomponent?: N,\n): Mark | N {\n\tconst mark = MarkValue(configSymbol, name, config);\n\tif (!component) { return mark; }\n\treturn mark(component);\n}\n/** 标记组件类型 */\nexport function mComponent(name: string, item: Component): Mark;\nexport function mComponent<N extends Component<any, any>>(\n\tname: string, item: Component,\n\tcomponent: N,\n): N;\nexport function mComponent<N extends Component<any, any>>(\n\tname: string, item: Component,\n\tcomponent?: N,\n): Mark | N {\n\tconst mark = MarkValue(componentsSymbol, name, item);\n\tif (!component) { return mark; }\n\treturn mark(component);\n}\n\nexport function create<P extends object>(\n\tc: Component<P, never>,\n): Component<P, never>;\nexport function create<\n\tP extends object = object,\n\tR extends object = object,\n>(c: Component<P, R>, r: Render<R>): Component<P, R>;\nexport function create<T extends Component<any, any>>(\n\tc: T,\n\tr?: Render,\n): T {\n\tif (typeof r === 'function') {\n\t\tc[renderSymbol] = r;\n\t}\n\treturn c;\n}\n\nexport function mark<N extends Component<any, any>>(\n\tcomponent: N,\n\t...marks: Mark[]\n): N {\n\tfor (const m of marks) { m(component); }\n\treturn component;\n}\n"],"names":["version","mode","isProduction","getEventName","k","substr","test","EventEmitter","emitter","events","newHandles","n","Object","keys","fn","push","on","props","custom","addEvent","entName","listener","event","f","names","Array","isArray","p","update","this","_names","constructor","Set","create","emit","name","Reflect","defineProperty","get","monitorable","markRead","configurable","safeify","markChange","add","removed","delete","size","filter","updateHandles","eventCancelHandles","_cancelHandles","oldHandles","clear","forEach","list","handles","updateInProps","NeepError","Error","message","tag","value","computed","isValue","encase","recover","nextFrameApi","nextFrame","v","assert","renders","getRender","type","default","addRender","render","install","apis","api","installRender","components","register","component","ScopeSlot","SlotRender","Slot","Value","Container","Deliver","Template","Fragment","current","setCurrent","entity","oldEntity","$_valueIndex","ret","$_values","length","checkCurrent","initOnly","created","constructors","initContext","context","exposed","addContextConstructor","hooks","setHook","id","hook","$_hooks","set","callHook","watch","cb","stop","s","useValue","index","values","undefined","setValue","obj","opt","includes","enumerable","expose","deliver","delivered","isElementSymbol","Symbol","for","typeSymbol","nameSymbol","renderSymbol","componentsSymbol","configSymbol","isElement","createElement","attrs","children","node","key","slot","ref","Tags","argv","args","exec","elements","concat","simple","label","text","color","auxiliary","Life","Element","Dev","Constant","State","setAuxiliary","defineAuxiliary","createMountedNode","recursive2iterable","it","refList","setRefList","setRef","isRemove","getLastNode","tree","getFirstNode","getNodes","unmount","iRender","e","remove","replace","newTree","oldTree","next","parent","insert","updateList","source","createItem","newList","mountedMap","Map","src","findIndex","old","item","updateItem","splice","last","t","has","i","o","updateAll","Math","min","max","createList","all","draw","createValue","createAll","isNode","RegExp","String","Date","toISOString","placeholder","map","mount","getSlots","slots","native","nativeList","ownKeys","el","renderSlots","createSlots","inserted","setSlots","updateProps","oldProps","define","newKeys","getComponents","Boolean","findComponent","globalComponents","nObject","newDelivered","$__neep__delivered","slotMap","childNodes","refresh","result","nodes","renderNode","execSimple","execSlot","normalize","delayedRefresh","objectSet","wait","run","async","asyncRefresh","completeList","setCompleteList","complete","NeepObject","container","cfg","$parent","_obj$parent","$component","$isContainer","$created","$destroyed","destroyed","$mounted","mounted","$unmounted","unmounted","createExposed","_obj$parent2","isContainer","writable","h","bind","config","createEntity","parentDelivered","_delayedRefresh","needRefresh","_needRefresh","requestDraw","_refreshing","_render","canRefresh","_nodes","convert","_update","_destroy","destroy","__executed_destroy","_mount","__executed_mount","c","_cancelDrawMonitor","_unmount","__executed_mounted","_draw","nativeNodes","Entity","assign","_shadow","_this$iRender$compone","stopRender","changed","resultOnly","createExecutable","initRender","_stopRender","markDraw","shadowTree","nativeTree","toElement","_source$props","_source$props2","awaitDraw","requested","rootContainer","setChildren","_drawChildren","setProps","_drawContainer","content","_node","_container","drawChildren","drawContainer","_this$parent","_drawSelf","_needDraw","_this$parent2","drawSelf","_awaitDraw","markDrawContainer","needDraw","_containers","drawAll","containers","refs","r","params","target","Mark","symbol","MarkValue","mName","mType","mSimple","mNative","mRender","mConfig","mark","mComponent","marks","m"],"mappings":"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"}