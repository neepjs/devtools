{"version":3,"file":"neep.core.esm.min.js","sources":["../src/constant.ts","../src/Error.ts","../src/install.ts","../src/auxiliary/tags.ts","../src/auxiliary/state.ts","../src/helper/current.ts","../src/helper/context.ts","../src/hook.ts","../src/auxiliary/life.ts","../src/symbols.ts","../src/auxiliary/element.ts","../src/auxiliary/dev.ts","../src/auxiliary/index.ts","../src/render/id.ts","../src/render/recursive.ts","../src/render/draw.ts","../src/render/slot.ts","../src/render/props.ts","../src/render/normalize.ts","../src/render/refresh.ts","../src/render/Object.ts","../src/render/Entity.ts","../src/render/convert.ts","../src/render/Container.ts","../src/render/index.ts","../src/create.ts"],"sourcesContent":["/**\n * Global constant\n *\n * Will be replaced by the 'rollup-plugin-replace' plug-in\n */\n\n /**\n * Neep code version\n */\nexport const version = '__VERSION__' as string;\n/**\n * Current mode\n * @enum production\n * @enum development\n */\nexport const mode = '__MODE__' as any as 'production' | 'development';\n/**\n * Is the current mode production mode\n * @description Support tree shaking\n */\nexport const isProduction = mode === 'production';\n","export default class NeepError extends Error {\n\treadonly tag: string;\n\tconstructor(message: string, tag: string = '') {\n\t\tsuper(tag ? `[${tag}] ${message}` : message);\n\t\tthis.tag = tag;\n\t}\n}\nexport function assert(v: any, message: string, tag?: string) {\n\tif (v) { return; }\n\tthrow new NeepError(message, tag);\n}","import * as monitorableApi from 'monitorable';\nimport { IRender } from './type';\nimport { isProduction } from './constant';\n\nimport { Devtools } from '../../devtools/src/type';\nimport { assert } from './Error';\n\nexport let monitorable: typeof monitorableApi;\n\nexport interface InstallOptions {\n\tmonitorable?: typeof monitorableApi;\n\trender?: IRender;\n\trenders?: IRender[];\n\tdevtools?: any;\n}\n\n\nlet nextFrameApi: undefined | ((fn: () => void) => void);\nexport function nextFrame(fn: () => void): void {\n\tassert(nextFrameApi, 'The basic renderer is not installed', 'install');\n\tnextFrameApi!(fn);\n}\n\nexport const renders: Record<string, IRender>\n\t= Object.create(null);\n\nexport function getRender(\n\ttype: string | number | IRender = ''\n\t): IRender {\n\tif (typeof type === 'object') { return type; }\n\treturn renders[type] || renders.default;\n}\n\nfunction addRender(render?: IRender): void {\n\tif (!render) { return; }\n\trenders[render.type] = render;\n\tif (nextFrameApi) { return; }\n\tif (!renders.default) {\n\t\trenders.default = render;\n\t}\n\tif (!nextFrameApi && render.nextFrame) {\n\t\trenders.default = render;\n\t\tnextFrameApi = render.nextFrame;\n\t}\n\n}\nfunction installRender({ render, renders}: InstallOptions) {\n\taddRender(render);\n\tif (!Array.isArray(renders)) { return; }\n\tfor (const render of renders) {\n\t\taddRender(render);\n\t}\n}\n\n\nexport const devtools: Devtools = {\n\trenderHook(){},\n};\n\nfunction installDevtools(tools?: Partial<Devtools>) {\n\tif (!tools) { return; }\n\tif (typeof tools !== 'object') { return; }\n\tconst { renderHook } = tools;\n\tif (typeof renderHook === 'function') {\n\t\tdevtools.renderHook = renderHook;\n\t}\n}\n\n\nexport default function install(apis: InstallOptions) {\n\tif (apis.monitorable) {\n\t\tmonitorable = apis.monitorable;\n\t}\n\tinstallRender(apis);\n\tif (!isProduction) {\n\t\tinstallDevtools(apis.devtools);\n\t}\n}\n","export const ScopeSlot = 'Neep:ScopeSlot';\nexport const SlotRender = 'Neep:SlotRender';\nexport const Slot = 'Neep:Slot';\nexport const Value = 'Neep:Value';\nexport const Container = 'Neep:Container';\nexport const Deliver = 'Neep:Deliver';\nexport const Template = 'template';\nexport const Fragment = Template;\n","/**\n * 状态管理类 API\n */\nimport { Value, Options } from 'monitorable';\nimport { monitorable } from '../install';\n\nexport function value<T>(\n\tvalue: T,\n\toptions?: boolean | Options,\n): Value<T>\nexport function value(...v: [any]) {\n\treturn monitorable.value(...v);\n}\nexport function computed<T>(\n\tgetter: () => T,\n\toptions?: boolean | Options,\n): Value<T>;\nexport function computed<T>(...v: [any]) {\n\treturn monitorable.computed(...v);\n}\nexport function isValue(v: any): v is Value<any>;\nexport function isValue(...v: [any]) {\n\treturn monitorable.isValue(...v);\n}\nexport function encase<T>(value: T, nest?: number | boolean): T;\nexport function encase<T>(...v: [any]): T {\n\treturn monitorable.encase(...v);\n}\nexport function recover<T>(v: T): T;\nexport function recover<T>(...v: [any]): T {\n\treturn monitorable.recover(...v);\n}\n","import NeepError from '../Error';\nimport { Entity } from '../type';\n\n/** 当前正在执行的对象 */\nexport let current: Entity | undefined;\nexport function setCurrent<T>(\n\tfn: () => T,\n\tentity: Entity,\n): T {\n\tconst oldEntity = current;\n\tcurrent = entity;\n\ttry {\n\t\tcurrent.$_valueIndex = 0;\n\t\tconst ret = fn();\n\t\tif (current.$_valueIndex !== current.$_values.length) {\n\t\t\tthrow new NeepError(\n\t\t\t\t'Inconsistent number of useValue executions',\n\t\t\t\t'life',\n\t\t\t);\n\t\t}\n\t\treturn ret;\n\t} finally {\n\t\tcurrent = oldEntity;\n\t}\n}\n\nexport function checkCurrent(\n\tname: string,\n\tinitOnly = false,\n): Entity {\n\tif (!current) {\n\t\tthrow new NeepError(\n\t\t\t`Function \\`${name}\\` can only be called within a cycle.`,\n\t\t\t'life',\n\t\t);\n\t}\n\tif (!initOnly) {\n\t\treturn current;\n\t}\n\tif (!current.created) {\n\t\treturn current;\n\t}\n\tthrow new NeepError(\n\t\t`Function \\`${name}\\` can only be called at initialization time.`,\n\t\t'life',\n\t);\n}\n","import { Context, ContextConstructor, Exposed } from '../type';\nimport { monitorable } from '../install';\n\nconst constructors: ContextConstructor[] = [];\nexport function initContext(\n\tcontext: Context,\n\texposed?: Exposed,\n): Context {\n\tfor (const constructor of constructors) {\n\t\tconstructor(context, exposed);\n\t}\n\treturn context;\n}\nexport function addContextConstructor(\n\tconstructor: ContextConstructor\n): void {\n\tconstructors.push(monitorable.safeify(constructor));\n}","import { monitorable } from './install';\nimport { Hook, Hooks, Entity } from './type';\nconst hooks: Record<string, Set<Hook>> = Object.create(null);\n\nexport function setHook<H extends Hooks>(\n\tid: H,\n\thook: Hook,\n\tentity?: Entity,\n):() => void;\nexport function setHook(\n\tid: string,\n\thook: Hook,\n\tentity?: Entity,\n): () => void;\n\nexport function setHook(\n\tid: string,\n\thook: Hook,\n\tentity?: Entity,\n):() => void {\n\tlet list = entity?.$_hooks || hooks;\n\tif (!list) { return () => {}; }\n\thook = monitorable.safeify(hook);\n\tlet set = list[id];\n\tif (!set) {\n\t\tset = new Set();\n\t\tlist[id] = set;\n\t}\n\tset.add(hook);\n\treturn () => set.delete(hook);\n}\n\nexport function callHook<H extends Hooks>(\n\tid: H,\n\texposed: Entity,\n): void;\nexport function callHook(id: string, exposed: Entity): void;\nexport function callHook(id: string, exposed: Entity): void {\n\tif (!exposed) { return; }\n\tfor (const hook of exposed.$_hooks[id] || []) {\n\t\thook(exposed);\n\t}\n\tfor (const hook of hooks[id] || []) {\n\t\thook(exposed);\n\t}\n}\n","/**********************************\n * 组件上下文环境专用 API\n * @description 简单组件不支持\n **********************************/\nimport { Value, WatchCallback } from 'monitorable';\nimport { Hooks, Hook } from '../type';\nimport { checkCurrent } from '../helper';\nimport { monitorable } from '../install';\nimport NeepError from '../Error';\nimport { setHook } from '../hook';\nimport { isValue } from './state';\n\n\n/**********************************\n * 状态管理类 API\n **********************************/\n/**\n * 监听指定值的变化\n * @description 本质是调用 Value 对象的 watch 方法\n * @description 但是通过此方法进行的观察，会在组件生命周期结束时自动停止观察\n * @description 此函数只有在初始化调用时有效\n * @param value 被监听的值\n * @param cb    当监听的值发送变化时调用的函数\n */\nexport function watch<T>(\n\tvalue: Value<T>,\n\tcb: WatchCallback<T>,\n): () => void;\n/**\n * 监听指定值的变化\n * @description 本质是创建调用 Value 对象的 watch 方法\n * @description 但是通过此方法进行的观察，会在组件生命周期结束时自动停止观察\n * @description 此函数只有在初始化调用时有效\n * @param value 用于计算观测值的函数\n * @param cb    当监听的值发送变化时调用的函数\n */\nexport function watch<T>(\n\tvalue: () => T,\n\tcb: (v: T, stopped: boolean) => void,\n): () => void;\n\nexport function watch<T>(\n\tvalue: Value<T> | (() => T),\n\tcb: (v: Value<T> | T, stopped: boolean) => void\n): () => void {\n\tconst entity = checkCurrent('watch');\n\tif (typeof value !== 'function') { return () => {}; }\n\tconst stop = isValue(value)\n\t\t? value.watch(cb)\n\t\t: monitorable.computed(value).watch((v, s) => cb(v(), s));\n\tsetHook('beforeDestroy', () => stop(), entity);\n\treturn stop;\n}\n\nexport function useValue<T>(f: () => T, name = 'useValue'): T {\n\tconst entity = checkCurrent(name);\n\tconst index = entity.$_valueIndex++;\n\tconst values = entity.$_values;\n\tif (!entity.created) {\n\t\tvalues[index] = undefined;\n\t\treturn values[index] = f();\n\t}\n\tif (index >= values.length) {\n\t\tthrow new NeepError(\n\t\t\t'Inconsistent number of useValue executions',\n\t\t\t'life',\n\t\t);\n\t}\n\treturn values[index];\n\n}\n\n/**********************************\n * 钩子类 API\n **********************************/\n/**\n * 为当前组件注册钩子\n * @param name 钩子名称\n * @param hook 钩子\n * @param initOnly 是否仅在初始化时有效\n */\nexport function hook<H extends Hooks>(\n\tname: H,\n\thook: () => void,\n\tinitOnly?: boolean,\n): undefined | (() => void);\nexport function hook(\n\tname: string,\n\thook: () => void,\n\tinitOnly?: boolean,\n): undefined | (() => void);\nexport function hook(\n\tname: string,\n\thook: () => void,\n\tinitOnly?: boolean,\n): undefined | (() => void) {\n\tconst entity = checkCurrent('setHook');\n\tif (initOnly && entity.created) { return undefined; }\n\treturn setHook(name, () => hook(), entity);\n}\n\n/**********************************\n * 配置 API\n **********************************/\n\nexport function setValue<T>(\n\tobj: any,\n\tname: string | number | symbol,\n\tvalue: T | Value<T> | (() => T),\n\topt?: boolean | ((value: T) => void),\n): void {\n\tif (\n\t\ttypeof name === 'string'\n\t\t&& ['$', '_'].includes(name[0])\n\t) {\n\t\treturn;\n\t}\n\tif (isValue(value) && opt) {\n\t\tReflect.defineProperty(obj, name, {\n\t\t\tget() { return value(); },\n\t\t\tset(v) { value(v); },\n\t\t\tconfigurable: true,\n\t\t\tenumerable: true,\n\t\t});\n\t\treturn;\n\t}\n\tif (typeof value === 'function' && opt) {\n\t\tReflect.defineProperty(obj, name, {\n\t\t\tget: value as () => T,\n\t\t\tset: typeof opt === 'function' ? opt : undefined,\n\t\t\tconfigurable: true,\n\t\t\tenumerable: true,\n\t\t});\n\t\treturn;\n\t}\n\tReflect.defineProperty(obj, name, {\n\t\tget() { return value; },\n\t\tconfigurable: true,\n\t\tenumerable: true,\n\t});\n}\n\n\n/**\n * 将 Value 导出\n * @param name 导出用的名称\n */\nexport function expose<T>(\n\tname: string | number | symbol,\n\tvalue: Value<T>,\n\tmix?: boolean,\n): void;\n/**\n * 将普通值导出\n * @param name\n * @param value\n */\nexport function expose<T>(\n\tname: string | number | symbol,\n\tvalue: T,\n): void;\n/**\n * 设置基于 getter 的导出\n * @param name\n * @param getter\n * @param nonModifiable\n */\nexport function expose<T>(\n\tname: string | number | symbol,\n\tgetter: () => T,\n\tnonModifiable: true,\n): void;\n/**\n * 设置基于 getter/setter 的导出\n * @param name\n * @param getter\n * @param setter\n */\nexport function expose<T>(\n\tname: string | number | symbol,\n\tgetter: () => T,\n\tsetter: (value: T) => void,\n): void;\nexport function expose<T>(\n\tname: string | number | symbol,\n\tvalue: T | Value<T> | (() => T),\n\topt?: boolean | ((value: T) => void),\n): void {\n\tsetValue(checkCurrent('expose', true).exposed, name, value, opt);\n}\n\n\n/**\n * 将 Value 传递给子组件\n * @param name 导出用的名称\n */\nexport function deliver<T>(\n\tname: string | number | symbol,\n\tvalue: Value<T>,\n\tmix?: boolean,\n): void;\n/**\n * 将普通值导出\n * @param name\n * @param value\n */\nexport function deliver<T>(\n\tname: string | number | symbol,\n\tvalue: T,\n): void;\n/**\n * 设置基于 getter 的传递\n * @param name\n * @param getter\n * @param nonModifiable\n */\nexport function deliver<T>(\n\tname: string | number | symbol,\n\tgetter: () => T,\n\tnonModifiable: true,\n): void;\n/**\n * 设置基于 getter/setter 的传递\n * @param name\n * @param getter\n * @param setter\n */\nexport function deliver<T>(\n\tname: string | number | symbol,\n\tgetter: () => T,\n\tsetter: (value: T) => void,\n): void;\nexport function deliver<T>(\n\tname: string | number | symbol,\n\tvalue: T | Value<T> | (() => T),\n\topt?: boolean | ((value: T) => void),\n): void {\n\tsetValue(checkCurrent('deliver', true).delivered, name, value, opt);\n}\n","export const isElementSymbol = Symbol.for('isNeepElement');\nexport const typeSymbol = Symbol.for('type');\nexport const nameSymbol = Symbol.for('name');\nexport const renderSymbol = Symbol.for('render');\n","import { Tag, NeepElement, Component } from '../type';\nimport { isElementSymbol, typeSymbol } from '../symbols';\nimport * as Tags from './tags';\n\n/**\n * 判读是否为元素\n */\nexport function isElement(v: any): v is NeepElement {\n\tif (!v) { return false; }\n\tif (typeof v !== 'object') { return false; }\n\treturn v[isElementSymbol] === true;\n}\n\nexport function createElement(\n\ttag: Tag,\n\tattrs?: {[key:string]: any},\n\t...children: any[]\n): NeepElement {\n\tattrs = attrs ? {...attrs} : {};\n\tconst node: NeepElement = {\n\t\t[isElementSymbol]: true,\n\t\ttag,\n\t\tchildren: [],\n\t};\n\tif ('key' in attrs) { node.key = attrs.key; }\n\tif ('slot' in attrs) { node.slot = attrs.slot; }\n\tif (typeof attrs.ref === 'function') { node.ref = attrs.ref; }\n\tif (tag === Tags.Value) {\n\t\tnode.value = attrs.value;\n\t\treturn node;\n\t}\n\tnode.children = children;\n\tif (tag === Tags.Template) { return node; }\n\tif (tag === Tags.SlotRender) {\n\t\tnode.render = attrs.render;\n\t\treturn node;\n\t}\n\tif (tag === Tags.ScopeSlot || tag === Tags.Slot) {\n\t\tconst { render, argv, args, name } = attrs;\n\t\tnode.render = render;\n\t\tnode.args = argv && [argv]\n\t\t\t|| Array.isArray(args) && args.length && args\n\t\t\t|| [{}];\n\n\t\tif (tag === Tags.ScopeSlot) {\n\t\t\tnode.props = { name };\n\t\t\treturn node;\n\t\t}\n\t}\n\tnode.on = {};\n\tnode.props = {};\n\tfor (let k in attrs) {\n\t\t/** 事件 */\n\t\tconst onInfo = /^(::|@|on:)([a-zA-Z0-9].*)$/.exec(k);\n\t\tif (onInfo) {\n\t\t\tnode.on[onInfo[2]] = attrs[k];\n\t\t\tcontinue;\n\t\t}\n\t\t// TODO: data\n\t\tconst nCmd = /^n([:-])([a-zA-Z0-9]+(?:\\.[a-zA-Z0-9]+)*)$/i.exec(k);\n\t\t/** 普通属性 */\n\t\tif (!nCmd) {\n\t\t\tnode.props[k] = attrs[k];\n\t\t\tcontinue;\n\t\t}\n\t}\n\treturn node;\n}\n\nexport interface elementIteratorOptions {\n\tsimple?: boolean | Component[] | ((c: Component) => boolean);\n}\n\nexport function elements(\n\tnode: any,\n\topt: elementIteratorOptions = {},\n): any[] {\n\tif (Array.isArray(node)) {\n\t\tconst list: any[][] = [];\n\t\tfor (let n of node) {\n\t\t\tlist.push(elements(n, opt));\n\t\t}\n\t\treturn ([] as any[]).concat(...list);\n\t}\n\tif (!isElement(node)) { return [node]; }\n\tlet { tag } = node;\n\tif (!tag) { return []; }\n\n\tif (([Tags.Template, Tags.ScopeSlot] as Tag[]).includes(tag)) {\n\t\treturn elements(node.children, opt);\n\t}\n\tif (typeof tag !== 'function') { return [node]; }\n\tif (tag[typeSymbol] !== 'simple') { return [node]; }\n\tconst { simple } = opt;\n\tif (!simple) { return [node]; }\n\tif (Array.isArray(simple)) {\n\t\tif (simple.includes(tag)) { return [node]; }\n\t} else if (typeof simple === 'function') {\n\t\tif (!simple(tag)) { return [node]; }\n\t}\n\treturn elements(node.children, opt);\n}\n","import { isProduction } from '../constant';\nimport { current } from '../helper';\nimport { setLabel } from '../helper/label';\n\nexport function label(text: string, color = ''): void {\n\tif (!isProduction) {\n\t\tif (!current) {\n\t\t\tsetLabel([text, color]);\n\t\t\treturn;\n\t\t}\n\t\tReflect.defineProperty(current.exposed, '$label', {\n\t\t\tvalue: [text, color],\n\t\t\tconfigurable: true,\n\t\t});\n\t}\n}\n","import * as Constant from '../constant';\nimport * as Tags from './tags';\nimport * as State from './state';\nimport * as Life from './life';\nimport * as Element from './element';\nimport * as Dev from './dev';\n\nexport * from './tags';\nexport * from './state';\nexport * from './life';\nexport * from './element';\nexport * from './dev';\n\nexport { Tags };\n\n\n/** 辅助 */\nexport interface Auxiliary extends\n\tReadonly<typeof Tags>,\n\tReadonly<typeof State>,\n\tReadonly<typeof Life>,\n\tReadonly<typeof Element>,\n\tReadonly<typeof Dev>,\n\tReadonly<typeof Constant>\n{}\n\nconst auxiliary: Auxiliary = {\n\t...Tags,\n\t...State,\n\t...Life,\n\t...Element,\n\t...Dev,\n\t...Constant,\n};\n\nexport function setAuxiliary<T>(\n\tname: string,\n\tvalue: T,\n): void {\n\tReflect.defineProperty(auxiliary, name, {\n\t\tvalue,\n\t\tenumerable: true,\n\t\tconfigurable: true,\n\t});\n}\nexport function defineAuxiliary<T>(\n\tname: string,\n\tget: (this: Auxiliary) => T,\n): void {\n\tReflect.defineProperty(auxiliary, name, {\n\t\tget,\n\t\tenumerable: true,\n\t\tconfigurable: true,\n\t});\n}\nexport default auxiliary;\n","import { NativeNode } from '../type';\nimport { isProduction } from '../constant';\nimport { MountedNode } from './draw';\n\nlet ids = 0;\nconst Nodes: {[key: number]: MountedNode} = {};\nlet IdMap: undefined | Map<NativeNode, number>;\nif (!isProduction) {\n\tIdMap = new Map();\n}\nexport function createMountedNode(\n\tn: Omit<MountedNode, 'id'>,\n\tid?: number,\n): MountedNode {\n\tif (!isProduction) {\n\t\tid = id || ++ids;\n\t\tconst { node } = n;\n\t\tif (node && IdMap) { IdMap.set(node, id); }\n\t\treturn Nodes[id] = {...n, id};\n\t}\n\treturn {...n, id: 0};\n}\n\nexport function recoveryMountedNode(node: MountedNode): void {\n\tif (!isProduction) {\n\t\tdelete Nodes[node.id];\n\t}\n}\n\nexport function getNode(\n\tid: number | NativeNode,\n): MountedNode | undefined {\n\tif (!isProduction) {\n\t\tif (typeof id !== 'number') {\n\t\t\tid = IdMap?.get(id) || -1;\n\t\t}\n\t\treturn Nodes[id];\n\t}\n\treturn undefined;\n}\n","export interface RecursiveArray<T> extends Array<RecursiveItem<T>>{};\nexport type RecursiveItem<T> = T | RecursiveArray<T>;\n\nexport function *recursive2iterable<T>(\n\tlist: RecursiveItem<T>,\n): Iterable<T> {\n\tif (!Array.isArray(list)) {\n\t\tyield list;\n\t\treturn;\n\t}\n\tfor (const it of list) {\n\t\tyield* recursive2iterable(it);\n\t}\n}\n","import { Tags, Template } from '../auxiliary';\nimport { IRender, NativeNode, NativeElement } from '../type';\nimport { createMountedNode, recoveryMountedNode } from './id';\nimport { TreeNode } from './convert';\nimport NeepObject from './Object';\n\n\n/**\n * @description node / component / children 至少一个有效\n */\nexport interface MountedNode extends TreeNode {\n\tid: number;\n\tparent?: this;\n\tnode: undefined | NativeNode;\n}\n\n\ntype MountedNodes = MountedNode | MountedNode[]\n\t| (MountedNode | MountedNode[])[];\n\nfunction getLastNode(tree: MountedNodes): NativeNode {\n\tif (Array.isArray(tree)) {\n\t\treturn getLastNode(tree[tree.length - 1]);\n\t}\n\tconst { component, children, node } = tree;\n\tif (node) { return node; }\n\tif (component) { return getLastNode(component.tree); }\n\treturn getLastNode(children);\n}\n\nfunction getFirstNode(tree: MountedNodes): NativeNode {\n\tif (Array.isArray(tree)) { return getFirstNode(tree[0]); }\n\tconst { component, children, node } = tree;\n\tif (node) { return node; }\n\tif (component) { return getFirstNode(component.tree); }\n\treturn getFirstNode(children[0]);\n}\n\nexport function *getNodes(tree: MountedNodes): Iterable<NativeNode> {\n\tif (Array.isArray(tree)) {\n\t\tfor (const it of tree) {\n\t\t\tyield* getNodes(it);\n\t\t}\n\t\treturn;\n\t}\n\tconst { children, node, component } = tree;\n\tif (node) {\n\t\tyield node;\n\t\treturn;\n\t}\n\tif (component) {\n\t\tyield* getNodes(component.tree);\n\t\treturn;\n\t}\n\tyield* getNodes(children);\n}\n\nexport function unmount(iRender: IRender, tree: MountedNodes): void {\n\tif (Array.isArray(tree)) {\n\t\ttree.forEach(e => unmount(iRender, e));\n\t\treturn;\n\t}\n\tconst { component, children, node, ref } = tree;\n\trecoveryMountedNode(tree);\n\tif (node) {\n\t\tif (ref) { ref(node, true); }\n\t\tiRender.remove(node);\n\t\treturn;\n\t}\n\tif (component) {\n\t\tif (ref) { ref(component.exposed, true); }\n\t\tcomponent.unmount();\n\t\treturn;\n\t}\n\tunmount(iRender, children);\n}\n\n\nfunction replace<T extends MountedNode | MountedNode[]>(\n\tiRender: IRender,\n\tnewTree: T,\n\toldTree: MountedNode | MountedNode[],\n): T {\n\tconst next = getFirstNode(oldTree);\n\tif (!next) { return newTree; }\n\tconst parent = iRender.parent(next);\n\tif (!parent) { return newTree; }\n\tfor (const it of getNodes(newTree)) {\n\t\tiRender.insert(parent, it, next);\n\t}\n\tunmount(iRender, oldTree);\n\treturn newTree;\n}\n\nfunction updateList(\n\tiRender: IRender,\n\tsource: TreeNode[],\n\ttree: MountedNode | MountedNode[],\n): MountedNode[] {\n\tif (!source.length) {\n\t\tconst node = createItem(iRender, {tag: null, children: []});\n\t\treturn [replace(iRender, node, tree)];\n\t}\n\tif (!Array.isArray(tree)) { tree = [tree]; }\n\tconst newList: MountedNode[] = [];\n\tconst list = [...tree];\n\tconst mountedMap = new Map<MountedNode, MountedNode>();\n\tfor (const src of source) {\n\t\tconst index = list.findIndex(it =>\n\t\t\tit.tag === src.tag && it.key === src.key\n\t\t);\n\t\tif (index >= 0) {\n\t\t\tconst old = list[index];\n\t\t\tconst item = updateItem(iRender, src, old);\n\t\t\tmountedMap.set(old, item);\n\t\t\tnewList.push(item);\n\t\t\tlist.splice(index, 1);\n\t\t} else {\n\t\t\tconst item = createItem(iRender, src);\n\t\t\tnewList.push(item);\n\t\t}\n\t}\n\tif (!mountedMap.size) {\n\t\treturn replace(iRender, newList, list);\n\t}\n\tunmount(iRender, list);\n\ttree = tree.filter(t => mountedMap.has(t));\n\tconst last = getLastNode(tree[tree.length - 1]);\n\tconst parent = iRender.parent(last);\n\tif (!parent) { return newList; }\n\tlet next = iRender.next(last);\n\t// 调整次序\n\tfor(let i = newList.length - 1; i >= 0; i--) {\n\t\tconst item = newList[i];\n\t\tconst index = tree.findIndex(o => mountedMap.get(o) === item);\n\t\tif (index >= 0) {\n\t\t\tfor (const it of tree.splice(index)) {\n\t\t\t\tmountedMap.delete(it);\n\t\t\t}\n\t\t} else {\n\t\t\tfor (const it of getNodes(item)) {\n\t\t\t\tiRender.insert(parent, it, next);\n\t\t\t}\n\t\t}\n\t\tnext = getFirstNode(item) || next;\n\t}\n\treturn newList;\n}\n/**\n * 更新树\n * @param tree 已有树\n * @param source 用于替换的源\n * @param iRender Neep 对象\n */\nfunction updateAll(\n\tiRender: IRender,\n\tsource: (TreeNode | TreeNode[])[],\n\ttree: (MountedNode | MountedNode[])[],\n): (MountedNode | MountedNode[])[] {\n\tlet index = 0;\n\tlet length = Math.min(source.length, source.length || 1);\n\tconst list: (MountedNode | MountedNode[])[] = [];\n\tfor (; index < length; index++) {\n\t\tconst src = source[index];\n\t\tif (Array.isArray(src)) {\n\t\t\tlist.push(updateList(iRender, src, tree[index]));\n\t\t} else {\n\t\t\tlist.push(updateItem(iRender, src, tree[index]));\n\t\t}\n\t}\n\tlength = Math.max(source.length, tree.length);\n\tif (tree.length > length) {\n\t\t\t// 销毁多余项\n\t\t\tfor (; index < length; index++) {\n\t\t\tunmount(iRender, tree[index]);\n\t\t}\n\t}\n\tif (source.length > length) {\n\t\t// 创建多余项\n\t\tconst last = getLastNode(list[list.length - 1]);\n\t\tconst parent = iRender.parent(last);\n\t\tconst next = iRender.next(last);\n\t\tfor (; index < length; index++) {\n\t\t\tconst src = source[index];\n\t\t\tconst item = Array.isArray(src)\n\t\t\t\t? createList(iRender, src)\n\t\t\t\t: createItem(iRender, src);\n\t\t\tlist.push(item);\n\t\t\tif (!parent) { continue; }\n\t\t\tfor (const it of getNodes(item)) {\n\t\t\t\tiRender.insert(parent, it, next);\n\t\t\t}\n\t\t}\n\t}\n\treturn list;\n}\n\n/**\n * 更新树节点\n * @param iRender Neep 对象\n * @param tree 已有树\n * @param source 用于替换的源\n */\nfunction updateItem(\n\tiRender: IRender,\n\tsource: TreeNode,\n\ttree: MountedNode | MountedNode[],\n): MountedNode {\n\tif (Array.isArray(tree)) {\n\t\tconst index = tree.findIndex(it =>\n\t\t\tit.tag === source.tag && it.component === source.component\n\t\t);\n\t\tif (index < 0) {\n\t\t\treturn replace(iRender, createItem(iRender, source), tree);\n\t\t}\n\t\tconst all = tree;\n\t\t[tree] = tree.splice(index, 1);\n\t\tunmount(iRender, all);\n\t}\n\tconst { tag, component } = source;\n\tconst ref = source.ref !== tree.ref && source.ref;\n\tif (tag !== tree.tag || component !== tree.component) {\n\t\treturn replace(iRender, createItem(iRender, source), tree);\n\t}\n\tif (!tag) { return tree; }\n\tif (typeof tag !== 'string' || tag === Tags.Container) {\n\t\tif (!component) {\n\t\t\t// TODO: ref\n\t\t\treturn createMountedNode({\n\t\t\t\t...source,\n\t\t\t\tnode: undefined,\n\t\t\t\tcomponent: undefined,\n\t\t\t\tchildren: draw(\n\t\t\t\t\tiRender,\n\t\t\t\t\tsource.children,\n\t\t\t\t\ttree.children,\n\t\t\t\t),\n\t\t\t}, tree.id);\n\t\t}\n\t\tif (ref) { ref(component.exposed); }\n\t\treturn createMountedNode({\n\t\t\t...source,\n\t\t\tnode: undefined,\n\t\t\tcomponent,\n\t\t\tchildren: [],\n\t\t}, tree.id);\n\t}\n\tif (tag === Tags.Value) {\n\t\tif(tree.value === source.value) {\n\t\t\tif (ref && tree.node) { ref(tree.node); }\n\t\t\treturn createMountedNode({\n\t\t\t\t...tree,\n\t\t\t\t...source,\n\t\t\t\tchildren: [],\n\t\t\t}, tree.id);\n\t\t}\n\t\treturn replace( iRender, createValue(iRender, source), tree);\n\t}\n\tif (tag === Template || tag.substr(0, 5) === 'Neep:') {\n\t\t// TODO: ref\n\t\treturn createMountedNode({\n\t\t\t...source,\n\t\t\tnode: undefined,\n\t\t\tcomponent: undefined,\n\t\t\tchildren: updateAll(\n\t\t\t\tiRender,\n\t\t\t\tsource.children,\n\t\t\t\ttree.children,\n\t\t\t),\n\t\t}, tree.id);\n\t}\n\tconst { node } = tree;\n\tiRender.update(\n\t\tnode as NativeElement,\n\t\tsource.props || {},\n\t);\n\tif (ref) { ref(node!); }\n\tif (!source.children.length && !tree.children.length) {\n\t\treturn createMountedNode(\n\t\t\t{\n\t\t\t\t...tree,\n\t\t\t\t...source,\n\t\t\t\tchildren: [],\n\t\t\t},\n\t\t\ttree.id);\n\t}\n\tif (!source.children.length && tree.children.length) {\n\t\tunmount(iRender, tree.children);\n\t}\n\tif (source.children.length && !tree.children.length) {\n\t\tconst children = createAll(iRender, source.children);\n\t\tfor (const it of getNodes(children)) {\n\t\t\tiRender.insert(node as NativeElement, it);\n\t\t}\n\t\treturn createMountedNode({\n\t\t\t...tree,\n\t\t\t...source,\n\t\t\tchildren,\n\t\t}, tree.id);\n\t}\n\treturn createMountedNode({\n\t\t...tree, ...source,\n\t\tchildren: updateAll(\n\t\t\tiRender,\n\t\t\tsource.children,\n\t\t\ttree.children,\n\t\t),\n\t}, tree.id);\n}\n\nfunction createValue(\n\tiRender: IRender,\n\tsource: TreeNode,\n): MountedNode {\n\tconst { value, ref } = source;\n\tif (iRender.isNode(source.value)) {\n\t\tif (ref) { ref(value); }\n\t\treturn createMountedNode({\n\t\t\t...source,\n\t\t\tnode: value,\n\t\t\tchildren: [],\n\t\t\tcomponent: undefined,\n\t\t});\n\t}\n\tconst type = typeof value;\n\tlet node: NativeNode | undefined;\n\tif (\n\t\ttype === 'bigint'\n\t\t|| type === 'boolean'\n\t\t|| type === 'number'\n\t\t|| type === 'string'\n\t\t|| type === 'symbol'\n\t\t|| value instanceof RegExp\n\t) {\n\t\tnode = iRender.text(String(value));\n\t} else if (value instanceof Date) {\n\t\tnode = iRender.text(value.toISOString());\n\t} else if (type === 'object' && value) {\n\t\tnode = iRender.text(String(value));\n\t\t// TODO: 对象处理\n\t}\n\tif (!node) { node = iRender.placeholder(); }\n\tif (ref) { ref(node); }\n\treturn createMountedNode({\n\t\t...source,\n\t\tnode,\n\t\tcomponent: undefined,\n\t\tchildren: [],\n\t});\n}\n\nfunction createAll(\n\tiRender: IRender,\n\tsource: (TreeNode | TreeNode[])[],\n): (MountedNode | MountedNode[])[] {\n\tif (!source.length) {\n\t\treturn [createMountedNode({\n\t\t\ttag: null,\n\t\t\tnode: iRender.placeholder(),\n\t\t\tcomponent: undefined,\n\t\t\tchildren: [],\n\t\t})];\n\t}\n\n\treturn source.map(item =>\n\t\tArray.isArray(item)\n\t\t\t? createList(iRender, item)\n\t\t\t: createItem(iRender, item)\n\t);\n}\n\nfunction createList(\n\tiRender: IRender,\n\tsource: TreeNode[],\n): MountedNode[] {\n\tif (source.length) {\n\t\treturn source.map(it => createItem(iRender, it));\n\t}\n\treturn [createMountedNode({\n\t\ttag: null,\n\t\tnode: iRender.placeholder(),\n\t\tcomponent: undefined,\n\t\tchildren: [],\n\t})];\n}\n\nfunction createItem(\n\tiRender: IRender,\n\tsource: TreeNode,\n): MountedNode {\n\tconst { tag, ref, component } = source;\n\tif (!tag) {\n\t\tconst node = iRender.placeholder();\n\t\tif (ref) { ref(node); }\n\t\treturn createMountedNode({\n\t\t\ttag: null,\n\t\t\tnode,\n\t\t\tcomponent: undefined,\n\t\t\tchildren: [],\n\t\t});\n\t}\n\tif (typeof tag !== 'string' || tag === Tags.Container) {\n\t\tif (!component) {\n\t\t\t// TODO: ref\n\t\t\treturn createMountedNode({\n\t\t\t\t...source,\n\t\t\t\tnode: undefined,\n\t\t\t\tcomponent: undefined,\n\t\t\t\tchildren: draw(iRender, source.children),\n\t\t\t});\n\t\t}\n\t\tcomponent.mount();\n\t\tif (ref) { ref(component.exposed); }\n\t\treturn createMountedNode({\n\t\t\t...source,\n\t\t\tnode: undefined,\n\t\t\tcomponent, children: [],\n\t\t});\n\t}\n\tif (tag === Tags.Value) {\n\t\treturn createValue(iRender, source);\n\t}\n\tif (tag === Template || tag.substr(0, 5) === 'Neep:') {\n\t\t// TODO: ref\n\t\treturn createMountedNode({\n\t\t\t...source,\n\t\t\tnode: undefined,\n\t\t\tcomponent: undefined,\n\t\t\tchildren: createAll(iRender, source.children),\n\t\t});\n\t}\n\tconst node = iRender.create(tag, source.props || {});\n\tif (ref) { ref(node); }\n\tlet children: (MountedNode | MountedNode[])[] = [];\n\tif (source.children) {\n\t\tchildren = createAll(iRender, source.children);\n\t\tfor (const it of getNodes(children)) {\n\t\t\tiRender.insert(node, it);\n\t\t}\n\t}\n\treturn createMountedNode({\n\t\t...source,\n\t\tnode,\n\t\tcomponent: undefined,\n\t\tchildren,\n\t});\n}\n\nexport default function draw(\n\tiRender: IRender,\n\tsource: (TreeNode | TreeNode[])[],\n\ttree?: (MountedNode | MountedNode[])[],\n): (MountedNode | MountedNode[])[] {\n\tif (tree) {\n\t\treturn updateAll(iRender, source, tree);\n\t}\n\treturn createAll(iRender, source);\n}\n","import { NeepElement, SlotFn, Slots, IRender } from '../type';\nimport { isElement, SlotRender, ScopeSlot } from '../auxiliary';\nimport { isElementSymbol } from '../symbols';\nimport { isProduction } from '../constant';\n\n\nexport function getSlots(\n\tiRender: IRender,\n\tchildren: any[],\n\tslots: Record<string | symbol, any[]>,\n\tnative = false,\n): any[] {\n\t/** 原始对象 */\n\tconst nativeList: any[] = [];\n\tfor (const it of children) {\n\t\tif (Array.isArray(it)) {\n\t\t\tconst list: Record<string | symbol, any[]>\n\t\t\t\t= Object.create(null);\n\t\t\tnativeList.push(getSlots(iRender, it, list, native));\n\t\t\tfor (const k of Reflect.ownKeys(list) as string[]) {\n\t\t\t\tif (k in slots) {\n\t\t\t\t\tslots[k].push(list[k]);\n\t\t\t\t} else {\n\t\t\t\t\tslots[k] = [list[k]];\n\t\t\t\t}\n\t\t\t}\n\t\t\tcontinue;\n\t\t}\n\t\tif (native) {\n\t\t\tif (iRender.isNode(it)) {\n\t\t\t\tnativeList.push(it);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (!isElement(it)) {\n\t\t\t\tnativeList.push(it);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (it.tag !== SlotRender) {\n\t\t\t\tnativeList.push(it);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\t\tconst slot = isElement(it) && it.slot || 'default';\n\t\tconst el = isElement(it) ? {\n\t\t\t...it, slot: undefined,\n\t\t\tprops: {...it.props, slot: undefined },\n\t\t} : it;\n\t\tif (slot in slots) {\n\t\t\tslots[slot].push(el);\n\t\t} else {\n\t\t\tslots[slot] = [el];\n\t\t}\n\t}\n\treturn nativeList;\n}\nfunction renderSlots(\n\tlist: any[],\n\t...props: any\n): any[] {\n\treturn list.map(it => {\n\t\tif (Array.isArray(it)) {\n\t\t\treturn renderSlots(it, ...props);\n\t\t}\n\t\tif (!isElement(it)) { return it; }\n\t\tif (it.tag !== SlotRender) {\n\t\t\treturn {\n\t\t\t\t...it,\n\t\t\t\tslot: undefined,\n\t\t\t} as NeepElement;\n\t\t}\n\t\tif (typeof it.render === 'function') {\n\t\t\treturn it.render(...props);\n\t\t}\n\t\treturn it.children;\n\t});\n}\nfunction createSlots(\n\tname: string,\n\tlist: any[],\n): SlotFn {\n\tconst slot = (...props: any) => ({\n\t\t[isElementSymbol]: true,\n\t\ttag: ScopeSlot,\n\t\tchildren: renderSlots(list, ...props),\n\t\tinserted: true,\n\t\tlabel: isProduction ? undefined : [`[${name}]`, '#00F'],\n\t} as NeepElement);\n\tslot.children = list;\n\treturn slot;\n}\nexport function setSlots(\n\tchildren: {[key: string]: any[]},\n\tslots: Slots = Object.create(null),\n) {\n\tfor (const k of Reflect.ownKeys(slots)) {\n\t\tif (!(k in children)) {\n\t\t\tdelete slots[k as string];\n\t\t}\n\t}\n\tfor (const k of Reflect.ownKeys(children) as string[]) {\n\t\tslots[k] = createSlots(k, children[k]);\n\t}\n\treturn slots;\n}\n","import { isValue } from '../auxiliary';\n\nexport function updateProps(\n\tobj: any,\n\tprops: any,\n\toldProps: any = {},\n\tdefine = false,\n) {\n\tconst newKeys = new Set(Reflect.ownKeys(props));\n\tfor (const k of Reflect.ownKeys(obj)) {\n\t\tif (!newKeys.has(k)) {\n\t\t\tdelete obj[k];\n\t\t}\n\t}\n\tif (!define) {\n\t\tfor (const k of newKeys) {\n\t\t\tobj[k] = props[k];\n\t\t}\n\t\treturn obj;\n\t}\n\tfor (const k of newKeys) {\n\t\tconst value = props[k];\n\t\tif (k in oldProps && oldProps[k] === value) {\n\t\t\tcontinue;\n\t\t}\n\t\tif (isValue(value)) {\n\t\t\tReflect.defineProperty(obj, k, {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tget() { return value(); },\n\t\t\t\tset(v) { value(v); }\n\t\t\t});\n\t\t\tcontinue;\n\t\t}\n\t\tReflect.defineProperty(obj, k, {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: true,\n\t\t\tvalue,\n\t\t});\n\t}\n\treturn obj;\n}","import {\n\tNeepElement, Exposed, Delivered,\n\tRender, NeepNode, Slots, Context, IRender, Component,\n} from '../type';\nimport { typeSymbol } from '../symbols';\nimport { isProduction } from '../constant';\nimport auxiliary, { isElement, Tags } from '../auxiliary';\nimport { renderSymbol, isElementSymbol } from '../symbols';\nimport { getLabel } from '../helper/label';\nimport Container from './Container';\nimport Entity from './Entity';\nimport { getSlots, setSlots } from './slot';\nimport { initContext } from '../helper/context';\nimport { updateProps } from './props';\n\nfunction execSimple(\n\tnObject: Container | Entity,\n\tdelivered: Delivered,\n\tnode: NeepElement,\n\ttag: Component,\n\tchildren: any[],\n) {\n\tconst { iRender } = nObject.container;\n\tconst slotMap = Object.create(null);\n\tgetSlots(iRender, children, slotMap);\n\tconst slots = setSlots(slotMap);\n\tconst context: Context = initContext({\n\t\tslots,\n\t\tcreated: false,\n\t\tparent: nObject.exposed,\n\t\tdelivered,\n\t\tchildren: new Set<Exposed>(),\n\t\tchildNodes: children,\n\t\trefresh(f) { nObject.refresh(f); }\n\t});\n\tif (!isProduction) { getLabel(); }\n\tconst result = tag({...node.props}, context, auxiliary);\n\tlet label: [string, string] | undefined;\n\tif (!isProduction) { label = getLabel(); }\n\tconst nodes = exec(nObject, delivered, renderNode(\n\t\tiRender,\n\t\tresult,\n\t\tcontext,\n\t\ttag[renderSymbol],\n\t), slots);\n\n\treturn {\n\t\t...node,\n\t\tchildren: Array.isArray(nodes) ? nodes : [nodes],\n\t\tlabel,\n\t} as NeepElement;\n}\n\nfunction execSlot(\n\tnode: NeepElement,\n\tslots: Slots,\n\tchildren: any[],\n\targs: any[] = [{}],\n): NeepElement {\n\tconst slotName = node.props?.name || 'default';\n\tconst slot = slots[slotName];\n\tif (typeof slot === 'function') {\n\t\treturn {\n\t\t\t...node,\n\t\t\t...slot(...args),\n\t\t};\n\t}\n\tconst { render } = node;\n\tconst label: [string, string] | undefined = isProduction\n\t\t? undefined\n\t\t: [`[${ slotName }]`, '#00F'];\n\treturn {\n\t\t...node,\n\t\ttag: Tags.ScopeSlot,\n\t\tlabel,\n\t\tchildren:\n\t\t\ttypeof render !== 'function' ? children : render(...args),\n\t};\n}\n\nfunction exec(\n\tnObject: Container | Entity,\n\tdelivered: Delivered,\n\tnode: any,\n\tslots: Slots,\n\tnative = false,\n): any {\n\tif (Array.isArray(node)) {\n\t\treturn node.map(n =>\n\t\t\texec(nObject, delivered, n, slots, native)\n\t\t);\n\t}\n\tif (!isElement(node)) { return node; }\n\tlet { tag, inserted, args = [{}] } = node;\n\tif (tag === Tags.Deliver) {\n\t\tconst props = { ...node.props };\n\t\tdelete props.ref;\n\t\tdelete props.slot;\n\t\tdelete props.key;\n\t\tconst newDelivered = Object.create(delivered);\n\t\tupdateProps(newDelivered, props || {}, {}, true);\n\t\treturn {\n\t\t\t...node,\n\t\t\ttag,\n\t\t\t$__neep__delivered: newDelivered,\n\t\t\tchildren: node.children.map(n => exec(\n\t\t\t\tnObject,\n\t\t\t\tnewDelivered,\n\t\t\t\tn,\n\t\t\t\tslots,\n\t\t\t\tnative,\n\t\t\t)),\n\t\t};\n\t}\n\n\tconst children = node.children\n\t\t.map(n => exec(nObject, delivered, n, slots, native));\n\n\tif (typeof tag === 'function') {\n\t\tif (tag[typeSymbol] === 'simple') {\n\t\t\treturn execSimple(nObject, delivered, node, tag, children);\n\t\t}\n\t\treturn { ...node, $__neep__delivered: delivered, children, tag };\n\n\t}\n\tif (tag === Tags.Slot) {\n\t\ttag = native ? 'slot' : Tags.ScopeSlot;\n\t}\n\tif (tag !== Tags.ScopeSlot || inserted) {\n\t\treturn { ...node, children, tag };\n\t}\n\treturn execSlot(node, slots, children, args);\n}\n\n\n\nfunction renderNode<R extends object = object>(\n\tiRender: IRender,\n\tnode: R | NeepNode | NeepNode[] | undefined | null,\n\tcontext: Context,\n\trender?: Render,\n): NeepNode[] {\n\tif (Array.isArray(node)) { return node; }\n\tif (isElement(node)) { return [node]; }\n\tif (node === undefined || node === null) {\n\t\treturn [{ [isElementSymbol]: true, tag: null, children: [] }];\n\t}\n\tif (!iRender.isNode(node) && typeof node === 'object' && render) {\n\t\tnode = render(node, context, auxiliary);\n\t}\n\tif (isElement(node)) { return [node]; }\n\tif (node === undefined || node === null) {\n\t\treturn [{ [isElementSymbol]: true, tag: null, children: [] }];\n\t}\n\treturn [{\n\t\t[isElementSymbol]: true,\n\t\ttag: Tags.Value,\n\t\tvalue: node,\n\t\tchildren: [],\n\t}];\n}\n\n\nexport default function normalize(\n\tnObject: Entity,\n\tresult: any,\n) {\n\treturn exec(\n\t\tnObject,\n\t\tnObject.delivered,\n\t\trenderNode(\n\t\t\tnObject.iRender,\n\t\t\tresult,\n\t\t\tnObject.context,\n\t\t\tnObject.component[renderSymbol],\n\t\t),\n\t\tnObject.context.slots,\n\t\tBoolean(nObject.native),\n\t);\n}\n","import NeepObject from \"./Object\";\n\nlet delayedRefresh = 0;\nconst objectSet = new Set<NeepObject>();\nexport function wait(obj: NeepObject) {\n\tif (delayedRefresh <= 0) { return false; }\n\tobjectSet.add(obj);\n\treturn true;\n}\nfunction run() {\n\tif (delayedRefresh > 0) { return; }\n\tconst list = [...objectSet];\n\tobjectSet.clear();\n\tlist.forEach(o => o.refresh());\n}\nasync function asyncRefresh<T>(f: () => PromiseLike<T> | T): Promise<T> {\n\ttry {\n\t\tdelayedRefresh++;\n\t\treturn await f();\n\t} finally {\n\t\tdelayedRefresh--;\n\t\trun();\n\t}\n}\nexport default function refresh<T>(f: () => T, async?: false): T;\nexport default function refresh<T>(\n\tf: () => PromiseLike<T> | T,\n\tasync: true,\n): Promise<T>;\nexport default function refresh<T>(\n\tf: () => PromiseLike<T> | T,\n\tasync?: boolean,\n): PromiseLike<T> | T;\nexport default function refresh<T>(\n\tf: () => PromiseLike<T> | T,\n\tasync?: boolean,\n): PromiseLike<T> | T {\n\tif (async) { return asyncRefresh(f); }\n\ttry {\n\t\tdelayedRefresh++;\n\t\treturn f();\n\t} finally {\n\t\tdelayedRefresh--;\n\t\trun();\n\t}\n}","import {\n\tExposed, Delivered,\n\tEntity as ComponentEntity,\n\tNativeComponent,\n\tHook, Hooks, NeepNode, IRender,\n} from '../type';\nimport { callHook, setHook } from '../hook';\nimport { MountedNode } from './draw';\nimport Container from './Container';\nimport convert, { TreeNode } from './convert';\nimport { wait } from './refresh';\n\nfunction createExposed(obj: NeepObject): Exposed {\n\tconst cfg: { [K in Exclude<keyof Exposed, '$label'>]-?:\n\t\t{ configurable: true, value: Exposed[K] }\n\t\t| { configurable: true, get(): Exposed[K] }\n\t} = {\n\t\t$parent: { configurable: true, get: () => obj.parent?.exposed },\n\t\t$component: { configurable: true, value: null },\n\t\t$isContainer: { configurable: true, value: false },\n\t\t$created: { configurable: true, get: () => obj.created },\n\t\t$destroyed: { configurable: true, get: () => obj.destroyed },\n\t\t$mounted: { configurable: true, get: () => obj.mounted },\n\t\t$unmounted: { configurable: true, get: () => obj.unmounted },\n\t};\n\tconst exposed: Exposed = Object.create(null, cfg);\n\treturn exposed;\n}\n\nfunction createEntity(obj: NeepObject): ComponentEntity {\n\tconst cfg: { [K in keyof ComponentEntity]-?:\n\t\t{ configurable: true, value: ComponentEntity[K], writable?: boolean }\n\t\t| { configurable: true, get(): ComponentEntity[K] }\n\t} = {\n\t\texposed: { configurable: true, get: () => obj.exposed },\n\t\tdelivered: { configurable: true, get: () => obj.delivered },\n\t\tparent: { configurable: true, get: () => obj.parent?.entity },\n\t\tcomponent: { configurable: true, value: null },\n\t\tisContainer: { configurable: true, value: false },\n\t\tcreated: { configurable: true, get: () => obj.created },\n\t\tdestroyed: { configurable: true, get: () => obj.destroyed },\n\t\tmounted: { configurable: true, get: () => obj.mounted },\n\t\tunmounted: { configurable: true, get: () => obj.unmounted },\n\t\t$_hooks: { configurable: true, value: Object.create(null) },\n\t\t$_valueIndex: { configurable: true, value: 0, writable: true },\n\t\t$_values: { configurable: true, value: [] },\n\t\tcallHook: {\n\t\t\tconfigurable: true,\n\t\t\tvalue(h: string) { callHook(h, entity); },\n\t\t},\n\t\tsetHook: {\n\t\t\tconfigurable: true,\n\t\t\tvalue(id: string, hook: Hook) {\n\t\t\t\treturn setHook(id, hook, entity);\n\t\t\t},\n\t\t},\n\t\trefresh: {\n\t\t\tconfigurable: true,\n\t\t\tvalue: obj.refresh.bind(obj),\n\t\t},\n\t};\n\tconst entity: ComponentEntity = Object.create(null, cfg);\n\treturn entity;\n}\n\nexport default class NeepObject {\n\treadonly iRender: IRender;\n\t/** TODO: 向后代呈递的值 */\n\treadonly parentDelivered: Delivered;\n\t/** TODO: 向后代呈递的值 */\n\treadonly delivered: Delivered;\n\t/** 组件暴露值 */\n\treadonly exposed: Exposed = createExposed(this);\n\t/** 组件实体 */\n\treadonly entity: ComponentEntity = createEntity(this);\n\t/** 父组件 */\n\tparent?: NeepObject;\n\t/** 原生组件 */\n\tnative: NativeComponent | null = null;\n\t/** 状态 */\n\tcreated: boolean = false;\n\tdestroyed: boolean = false;\n\tmounted: boolean = false;\n\tunmounted: boolean = false;\n\t/**  子组件的暴露值 */\n\treadonly children: Set<Exposed> = new Set();\n\t/** The subtree mounted on the parent node */\n\ttree: (MountedNode | MountedNode[])[] = [];\n\treadonly container: Container;\n\tconstructor(\n\t\tiRender: IRender,\n\t\tparent?: NeepObject,\n\t\tdelivered: Delivered = parent?.delivered || Object.create(null),\n\t\tcontainer?: Container,\n\t) {\n\t\tthis.iRender = iRender;\n\t\tthis.parentDelivered = delivered;\n\t\tthis.delivered = Object.create(delivered);\n\t\tif (parent) {\n\t\t\tthis.parent = parent;\n\t\t}\n\t\tthis.container = container || this as any as Container;\n\t}\n\t/** 结果渲染函数 */\n\tprotected _render: () => NeepNode[] = () => [];\n\n\tget canRefresh(): boolean {\n\t\tif (wait(this)) { return false; }\n\t\treturn !this._delayedRefresh;\n\t}\n\tprotected get needRefresh(): boolean {\n\t\tif (wait(this)) { return false; }\n\t\tif (this._delayedRefresh) { return false; }\n\t\tconst needRefresh = this._needRefresh;\n\t\tthis._needRefresh = false;\n\t\treturn needRefresh;\n\t}\n\t/** 是否需要继续刷新 */\n\tprotected _needRefresh = false;\n\tprivate _delayedRefresh = 0;\n\t/** 是否为刷新中 */\n\tprivate _refreshing = false;\n\t/** 渲染结果 */\n\tprotected _nodes: (TreeNode | TreeNode[])[] = [];\n\tprotected _refresh() { }\n\tasync asyncRefresh<T>(f: () => PromiseLike<T> | T): Promise<T> {\n\t\ttry {\n\t\t\tthis._delayedRefresh++;\n\t\t\treturn await f();\n\t\t} finally {\n\t\t\tthis._delayedRefresh--;\n\t\t\tthis.refresh();\n\t\t}\n\t}\n\trefresh(): void;\n\trefresh<T>(f: () => T, async?: false): T;\n\trefresh<T>(f: () => PromiseLike<T> | T, async: true): Promise<T>;\n\trefresh<T>(\n\t\tf: () => PromiseLike<T> | T,\n\t\tasync?: boolean,\n\t): PromiseLike<T> | T;\n\trefresh<T>(\n\t\tf?: () => PromiseLike<T> | T,\n\t\tasync?: boolean,\n\t): PromiseLike<T> | T | undefined;\n\trefresh<T>(\n\t\tf?: () => PromiseLike<T> | T,\n\t\tasync?: boolean,\n\t): PromiseLike<T> | T | undefined {\n\t\tif (typeof f === 'function') {\n\t\t\tif (async) { return this.asyncRefresh(f); }\n\t\t\ttry {\n\t\t\t\tthis._delayedRefresh++;\n\t\t\t\treturn f();\n\t\t\t} finally {\n\t\t\t\tthis._delayedRefresh--;\n\t\t\t\tif (this._delayedRefresh <= 0) {\n\t\t\t\t\tthis.refresh();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (this.destroyed) { return; }\n\t\tthis._needRefresh = true;\n\t\tif (!this.created) { return; }\n\n\t\tif (this._refreshing) { return; }\n\t\tthis._refreshing = true;\n\n\t\tlet nodes: NeepNode[] | undefined;\n\t\twhile(this.needRefresh) {\n\t\t\tnodes = this._render();\n\t\t\tif (this.destroyed) { return; }\n\t\t}\n\t\tthis._refreshing = false;\n\t\tif (!this.canRefresh) { return; }\n\t\tif (!nodes) { return; }\n\n\t\tthis._nodes = convert(this, nodes, this._nodes);\n\t\tif (!this.mounted) { return; }\n\t\tif (this.destroyed) { return; }\n\t\tif (this.unmounted) { return; }\n\t\tthis._refresh();\n\t}\n\tcallHook<H extends Hooks>(id: H): void;\n\tcallHook(id: string): void;\n\tcallHook(id: string): void {\n\t\tcallHook(id, this.entity);\n\t}\n\n\tchildNodes: any[] = [];\n\t/** 更新属性及子代 */\n\tprotected _update(props: object, children: any[]): void {\n\t\tthis.childNodes = children;\n\t}\n\t/** 更新属性及子代 */\n\tupdate(props: object, children: any[]): void {\n\t\tthis._update(props, children);\n\t}\n\n\n\tprivate __executed_destroy = false;\n\tprivate __executed_mount = false;\n\tprivate __executed_mounted = false;\n\tprotected _destroy() { }\n\tdestroy() {\n\t\tif (this.__executed_destroy) { return; }\n\t\tthis.__executed_destroy = true;\n\t\tthis.callHook('beforeDestroy');\n\t\tthis._destroy();\n\t\tthis.callHook('destroyed');\n\t\tthis.destroyed = true;\n\t}\n\tprotected _mount() { }\n\tmount() {\n\t\tif (this.__executed_destroy) { return; }\n\t\tif (this.__executed_mount) { return; }\n\t\tthis.__executed_mount = true;\n\t\tthis.callHook('beforeMount');\n\t\tthis._mount();\n\t\tthis.callHook('mounted');\n\t\tthis.mounted = true;\n\t}\n\tprotected _unmount() { }\n\tunmount() {\n\t\tif (!this.mounted) { return; }\n\t\tif (this.__executed_mounted) { return; }\n\t\tthis.__executed_mounted = true;\n\t\tthis.callHook('beforeUnmount');\n\t\tthis._unmount();\n\t\tthis.callHook('unmounted');\n\t\tthis.unmounted = true;\n\t}\n\t_draw() {}\n\tdraw() {\n\t\tif (this.__executed_destroy) { return; }\n\t\tthis.callHook('beforeUpdate');\n\t\tthis._draw();\n\t\tthis.callHook('updated');\n\t}\n}\n","import { Component, NeepNode, Slots, Context, Delivered } from '../type';\nimport auxiliary from '../auxiliary';\nimport { monitorable } from '../install';\nimport { setCurrent } from '../helper/current';\nimport convert, { destroy, TreeNode } from './convert';\nimport draw, { unmount, MountedNode } from './draw';\nimport normalize from './normalize';\nimport { getSlots, setSlots } from './slot';\nimport NeepObject from './Object';\nimport { initContext } from '../helper/context';\nimport { updateProps } from './props';\n\nfunction update(\n\tnObject: Entity<any, any>,\n\tprops: any,\n\tchildren:any[],\n) {\n\tupdateProps(nObject.props, props);\n\n\tconst slots = Object.create(null);\n\tconst {\n\t\tnative,\n\t\tcontainer: { iRender },\n\t} = nObject;\n\tconst childNodes = getSlots(\n\t\tiRender,\n\t\tchildren,\n\t\tslots,\n\t\tBoolean(native),\n\t);\n\tsetSlots(slots, nObject.slots);\n\tif (!native) { return; }\n\tnObject.nativeNodes\n\t\t= convert(nObject, childNodes, nObject.nativeNodes);\n}\n\nfunction createContext<\n\tP extends object = object,\n\tR extends object = object\n>(nObject: Entity<P, R>): Context {\n\treturn initContext({\n\t\tslots: nObject.slots,\n\t\tget created() { return nObject.created; },\n\t\tget parent() { return nObject.parent.exposed; },\n\t\tget delivered() { return nObject.parentDelivered; },\n\t\tget children() { return nObject.children; },\n\t\tget childNodes() { return nObject.childNodes; },\n\t\trefresh(f) { nObject.refresh(f); }\n\t}, nObject.exposed);\n}\n\n/** 初始化渲染 */\nfunction initRender<R extends object = object>(\n\tnObject: Entity<any, R>\n): { render(): any, nodes: any, stopRender(): void } {\n\tconst {\n\t\tcomponent,\n\t\tprops,\n\t\tcontext,\n\t\tentity,\n\t} = nObject;\n\tconst refresh = (changed: boolean) => changed && nObject.refresh()\n\t// 初始化执行\n\tconst result = monitorable.exec(() => setCurrent(\n\t\t() => component(props, context, auxiliary),\n\t\tentity,\n\t), refresh, { resultOnly: true, postpone: true });\n\tif (typeof result === 'function') {\n\t\t// 响应式\n\t\tconst render = monitorable.createExecutable(\n\t\t\t() => normalize(nObject, (result as () => NeepNode)()),\n\t\t\trefresh,\n\t\t);\n\t\treturn {\n\t\t\tnodes: render(),\n\t\t\trender,\n\t\t\tstopRender: () => render.stop(),\n\t\t};\n\t}\n\n\tconst render = monitorable.createExecutable(\n\t\t() => normalize(nObject, setCurrent(\n\t\t\t() => component(props, context, auxiliary),\n\t\t\tentity,\n\t\t)),\n\t\trefresh,\n\t\t{ postpone: true },\n\t);\n\treturn {\n\t\tnodes: monitorable.exec(\n\t\t\t() => normalize(nObject, result),\n\t\t\trefresh,\n\t\t\t{ resultOnly: true, postpone: true },\n\t\t),\n\t\trender,\n\t\tstopRender: () => render.stop(),\n\t};\n}\n\n\nexport default class Entity<\n\tP extends object = object,\n\tR extends object = object\n> extends NeepObject {\n\t/** 组件函数 */\n\treadonly component: Component<P, R>;\n\t/** 组件属性 */\n\treadonly props: P = monitorable.encase(Object.create(null));\n\t/** 组件槽 */\n\treadonly slots: Slots = monitorable.encase(Object.create(null));\n\t/** 结果渲染函数 */\n\tprivate readonly _stopRender:() => void;\n\t/** 原生子代 */\n\tnativeNodes: (TreeNode | TreeNode[])[] | undefined;\n\tnativeTree: (MountedNode | MountedNode[])[] = [];\n\t/** 组件上下文 */\n\treadonly context: Context;\n\treadonly parent: NeepObject;\n\t/** 结果渲染函数 */\n\tconstructor(\n\t\tcomponent: Component<P, R>,\n\t\tprops: object,\n\t\tchildren: any[],\n\t\tparent: NeepObject,\n\t\tdelivered?: Delivered,\n\t) {\n\t\tsuper(parent.iRender, parent, delivered, parent.container);\n\t\tthis.component = component;\n\t\tReflect.defineProperty(\n\t\t\tthis.exposed,\n\t\t\t'$component',\n\t\t\t{ value: component, enumerable: true, configurable: true },\n\t\t);\n\t\t// // 原生组件\n\t\t// const native = nativeRender.component\n\t\t// \t&& component[typeSymbol] === 'native' && false;\n\t\t// // 原生组件\n\t\t// const nativeComponent = native\n\t\t// \t? nativeRender.component!()\n\t\t// \t: null;\n\t\t// this.native = nativeComponent;\n\t\t// 父子关系\n\t\tthis.parent = parent;\n\t\tparent.children.add(this.exposed);\n\t\t// 上下文属性\n\t\tconst context = createContext(this);\n\t\tthis.context = context;\n\t\t// 初始化钩子\n\t\tthis.callHook('beforeCreate');\n\t\t// 更新属性\n\t\tthis.childNodes = children;\n\t\tupdate(this, props, children);\n\t\t// 获取渲染函数及初始渲染\n\t\tconst { render, nodes, stopRender } = initRender(this);\n\t\tthis._render = render;\n\t\tthis._stopRender = stopRender;\n\t\tthis._nodes = convert(this, nodes);\n\t\t// 初始化钩子\n\t\tthis.callHook('created');\n\t\tthis.created = true;\n\t\tif (this._needRefresh) { this.refresh(); }\n\t}\n\t/** 更新属性及子代 */\n\t_update(props: object, children: any[]): void {\n\t\tif (this.destroyed) { return; }\n\t\tthis.childNodes = children;\n\t\tupdate(this, props, children);\n\t}\n\t_destroy() {\n\t\tif (this._stopRender) {\n\t\t\tthis._stopRender();\n\t\t}\n\t\tthis.parent.children.delete(this.exposed);\n\t\tdestroy(this._nodes);\n\t}\n\n\t/** 刷新 */\n\t_refresh() {\n\t\tthis.container.markDraw(this);\n\t}\n\t_draw() {\n\t\tthis.tree = draw(\n\t\t\tthis.container.iRender,\n\t\t\tthis._nodes,\n\t\t\tthis.tree,\n\t\t);\n\t\tconst {native} = this;\n\t\tif (native) {\n\t\t\t// const shadow = this.container.iRender.shadow!(native);\n\t\t\t// TODO: 更新 childNodes\n\t\t}\n\t}\n\t_mount() {\n\t\tthis.tree = draw(this.container.iRender, this._nodes);\n\t}\n\t_unmount() {\n\t\tunmount(this.container.iRender, this.tree);\n\t}\n}\n","import { getRender } from '../install';\nimport { NeepNode, NeepElement, Tag } from '../type';\nimport { Tags, isElement, Value, Template } from '../auxiliary';\nimport { isElementSymbol, typeSymbol } from '../symbols';\nimport { recursive2iterable } from './recursive';\nimport Entity from './Entity';\nimport NeepObject from './Object';\nimport Container from './Container';\nimport { updateProps } from './props';\n\nexport interface TreeNode\n\textends Omit<\n\t\tNeepElement,\n\t\t'children' | 'tag' | typeof isElementSymbol\n\t>\n{\n\t/** 标签名 */\n\ttag: Tag;\n\tchildren: (this | this[])[];\n\tmounted?: boolean;\n\tcomponent?: NeepObject;\n}\n/** 强制转换为 NeepElement */\nfunction toElement(t: any): null | NeepElement {\n\tif (t === false || t === null || t === undefined) {\n\t\treturn null;\n\t}\n\tif (isElement(t)) {\n\t\treturn t;\n\t}\n\treturn {\n\t\t[isElementSymbol]: true,\n\t\ttag: Value,\n\t\tkey: t,\n\t\tvalue: t,\n\t\tchildren: [],\n\t};\n}\n\nexport function destroy(\n\ttree: TreeNode | TreeNode[] | (TreeNode | TreeNode[])[]\n) {\n\tif (Array.isArray(tree)) {\n\t\ttree.forEach(t => destroy(t));\n\t\treturn;\n\t}\n\tconst { component } = tree;\n\tif (component) { component.destroy(); }\n}\n\nfunction createItem(\n\tnObject: NeepObject,\n\tsource: NeepNode,\n): TreeNode {\n\tif (!source) { return { tag: null, children: [] }; }\n\tconst { tag } = source;\n\tif (!tag) { return { tag: null, children: [] }; }\n\tif (typeof tag !== 'string') {\n\t\tif (tag[typeSymbol] === 'simple') {\n\t\t\treturn {\n\t\t\t\t...source,\n\t\t\t\tchildren: convert(nObject, source.children),\n\t\t\t\tcomponent: undefined,\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t...source, children: [],\n\t\t\tcomponent: new Entity(\n\t\t\t\ttag,\n\t\t\t\tsource.props || {},\n\t\t\t\tsource.children,\n\t\t\t\tnObject,\n\t\t\t\tsource.$__neep__delivered,\n\t\t\t),\n\t\t};\n\t}\n\tif (tag === Tags.Container) {\n\t\tconst type = source?.props?.type;\n\t\tconst iRender = type ? getRender(type) : nObject.iRender;\n\t\treturn {\n\t\t\t...source, children: [],\n\t\t\tcomponent: new Container(\n\t\t\t\tiRender,\n\t\t\t\tsource.props || {},\n\t\t\t\tsource.children,\n\t\t\t\tnObject,\n\t\t\t\tsource.$__neep__delivered,\n\t\t\t),\n\t\t};\n\t}\n\tif (tag === Tags.Value) {\n\t\treturn { ...source, children: [] };\n\t}\n\tif (tag === Template || tag.substr(0, 5) === 'Neep:') {\n\t\treturn {\n\t\t\t...source,\n\t\t\tchildren: convert(nObject, source.children),\n\t\t};\n\t}\n\treturn {...source, children: convert(nObject, source.children) };\n}\n\n/**\n * 更新树节点\n * @param nObject Neep 对象\n * @param source 用于替换的源\n * @param tree 已有树\n */\nfunction updateList(\n\tnObject: NeepObject,\n\tsource: any[],\n\ttree: TreeNode | TreeNode[],\n): TreeNode[] {\n\tif (!Array.isArray(tree)) { tree = [tree]; }\n\tconst newList: TreeNode[] = [];\n\tfor (const src of recursive2iterable(source)) {\n\t\tconst node = toElement(src);\n\t\tif (!node) { continue; }\n\t\tconst index = tree.findIndex(it =>\n\t\t\tit.tag === node.tag && it.key === node.key\n\t\t);\n\t\tif (index >= 0) {\n\t\t\tnewList.push(updateItem(nObject, node, tree[index]));\n\t\t\ttree.splice(index, 1);\n\t\t} else {\n\t\t\tnewList.push(createItem(nObject, node));\n\t\t}\n\t}\n\tdestroy(tree);\n\treturn newList;\n}\n\n/**\n * 更新树节点\n * @param tree 已有树\n * @param source 用于替换的源\n * @param nObject Neep 对象\n */\nfunction updateItem(\n\tnObject: NeepObject,\n\tsource: NeepNode,\n\ttree?: TreeNode | TreeNode[],\n): TreeNode {\n\tif (!tree) {\n\t\treturn createItem(nObject, source);\n\t}\n\tif (!source) {\n\t\tdestroy(tree);\n\t\treturn { tag: null, children: [] };\n\t}\n\tif (Array.isArray(tree)) {\n\t\tif (!tree.length) { return createItem(nObject, source); }\n\t\tconst index = tree.findIndex(it => it.tag === source.tag);\n\t\tif (index < 0) {\n\t\t\tdestroy(tree);\n\t\t\treturn createItem(nObject, source);\n\t\t}\n\t\tconst all = tree;\n\t\t[tree] = tree.splice(index, 1);\n\t\tdestroy(all);\n\t}\n\tconst { tag } = source;\n\tif (tag !== tree.tag) {\n\t\tdestroy(tree);\n\t\treturn createItem(nObject, source);\n\t}\n\tif (!tag) { return { tag: null, children: [] }; }\n\tif (typeof tag !== 'string') {\n\t\tif (tag[typeSymbol] === 'simple') {\n\t\t\treturn {\n\t\t\t\t...source,\n\t\t\t\tchildren: convert(\n\t\t\t\t\tnObject,\n\t\t\t\t\tsource.children,\n\t\t\t\t\ttree.children,\n\t\t\t\t),\n\t\t\t\tcomponent: undefined,\n\t\t\t};\n\t\t}\n\t\tconst { component } = tree;\n\t\tif (!component) { return createItem(nObject, source); }\n\t\tcomponent!.update(source.props || {}, source.children);\n\t\treturn { ...source, children: [], component };\n\t}\n\tif (tag === Tags.Container) {\n\t\tconst { component } = tree;\n\t\tif (!component) { return createItem(nObject, source); }\n\t\tconst type = source?.props?.type;\n\t\tconst iRender = type ? getRender(type) : nObject.iRender;\n\t\tif (iRender !== component.iRender) {\n\t\t\treturn createItem(nObject, source);\n\t\t}\n\t\tcomponent!.update(source.props || {}, source.children);\n\t\treturn { ...source, children: [], component };\n\t}\n\tif (tag === Tags.Value) {\n\t\treturn { ...source, children: [] };\n\t}\n\tif (tag === Template || tag.substr(0, 5) === 'Neep:') {\n\t\tlet delivered: any;\n\t\tif (Tags.Deliver === tag) {\n\t\t\tconst props = { ...source.props };\n\t\t\tdelete props.ref;\n\t\t\tdelete props.slot;\n\t\t\tdelete props.key;\n\t\t\tdelivered = updateProps(\n\t\t\t\ttree.$__neep__delivered,\n\t\t\t\tprops,\n\t\t\t\ttree.props,\n\t\t\t\ttrue,\n\t\t\t);\n\t\t}\n\t\treturn {\n\t\t\t...source,\n\t\t\t$__neep__delivered: delivered,\n\t\t\tchildren: convert(\n\t\t\t\tnObject,\n\t\t\t\tsource.children,\n\t\t\t\ttree.children,\n\t\t\t),\n\t\t};\n\t}\n\treturn {\n\t\t...source,\n\t\tchildren: convert(nObject, source.children, tree.children),\n\t};\n}\n\n\nfunction createAll(\n\tnObject: NeepObject,\n\tsource: any[],\n): (TreeNode | TreeNode[])[] {\n\tif (!source.length) { return []; }\n\treturn (source as any[]).map(item => {\n\t\tif (!Array.isArray(item)) {\n\t\t\treturn createItem(nObject, toElement(item));\n\t\t}\n\t\treturn [...recursive2iterable(item)]\n\t\t\t.map(it => createItem(nObject, toElement(it)));\n\t});\n}\nfunction *updateAll(\n\tnObject: NeepObject,\n\tsource: any[],\n\ttree: (TreeNode | TreeNode[])[],\n): Iterable<TreeNode | TreeNode[]> {\n\tlet index = 0;\n\tlet length = Math.min(source.length, source.length);\n\tfor (; index < length; index++) {\n\t\tconst src = source[index];\n\t\tif (Array.isArray(src)) {\n\t\t\tyield updateList(nObject, src, tree[index]);\n\t\t} else {\n\t\t\tyield updateItem(nObject, toElement(src), tree[index]);\n\t\t}\n\t}\n\tlength = Math.max(source.length, source.length);\n\tif (tree.length > length) {\n\t\t\t// 销毁多余项\n\t\t\tfor (; index < length; index++) {\n\t\t\t\tdestroy(tree[index]);\n\t\t\t}\n\t}\n\tif (source.length > length) {\n\t\t// 创建多余项\n\t\tfor (; index < length; index++) {\n\t\t\tconst src = source[index];\n\t\t\tif (Array.isArray(src)) {\n\t\t\t\tyield [...recursive2iterable(src)]\n\t\t\t\t\t.map(it => createItem(nObject, it));\n\t\t\t} else {\n\t\t\t\tyield createItem(nObject, src);\n\t\t\t}\n\t\t}\n\t}\n}\n\n\n/**\n * 更新树\n * @param source 用于替换的源\n * @param nObject Neep 对象\n * @param tree 已有树\n */\nfunction convert(\n\tnObject: NeepObject,\n\tsource: any,\n\ttree?: (TreeNode | TreeNode[])[],\n): (TreeNode | TreeNode[])[] {\n\tif (!Array.isArray(source)) { source = []; }\n\tif (!tree) {\n\t\treturn createAll(nObject, source);\n\t}\n\treturn [...updateAll(nObject, source, tree)];\n}\n\n\nexport default convert;\n","import {\n\tIRender,\n\tMountProps,\n\tNativeNode,\n\tNativeContainer,\n\tDelivered,\n} from '../type';\nimport { Tags } from '../auxiliary';\nimport { createMountedNode } from './id';\nimport convert, { destroy } from './convert';\nimport draw, { unmount, getNodes, MountedNode } from './draw';\nimport NeepObject from './Object';\nimport { nextFrame } from '../install';\n\n\nlet awaitDraw = new Set<Container>();\nlet requested = false;\nfunction markDraw(c: Container) {\n\tawaitDraw.add(c);\n\tif (requested) { return; }\n\trequested = true;\n\tnextFrame(() => {\n\t\trequested = false;\n\t\tconst list = [...awaitDraw];\n\t\tawaitDraw.clear();\n\t\tlist.map(c => c.drawAll());\n\t});\n}\n\nexport default class Container extends NeepObject {\n\tprops: MountProps;\n\t/** 组件树结构 */\n\tcontent: (MountedNode | MountedNode[])[] = [];\n\t_node: NativeNode | null = null;\n\t_container: NativeContainer | null = null;\n\treadonly rootContainer: Container = this;\n\tconstructor(\n\t\tiRender: IRender,\n\t\tprops: MountProps,\n\t\tchildren: any[],\n\t\tparent?: NeepObject,\n\t\tdelivered?: Delivered,\n\t) {\n\t\tsuper(iRender, parent, delivered);\n\t\tthis.props = props;\n\t\tthis.parent = parent;\n\t\tif (parent) {\n\t\t\tthis.rootContainer = parent.container.rootContainer;\n\t\t}\n\t\tthis.callHook('beforeCreate');\n\t\tthis._render = () => children;\n\t\tthis._nodes = convert(this, children);\n\t\tthis.callHook('created');\n\t\tthis.created = true;\n\t}\n\t_drawChildren = false;\n\t_drawContainer = false;\n\tsetChildren(children: any[]): void {\n\t\tif (this.destroyed) { return; }\n\t\tthis.childNodes = children;\n\t\tthis._render = () => children;\n\t\tthis._drawChildren = true;\n\t\tthis.refresh();\n\t}\n\tsetProps(props: MountProps): void {\n\t\tif (this.destroyed) { return; }\n\t\tthis.props = props;\n\t\tthis._drawContainer = true;\n\t\tthis.refresh();\n\t}\n\t/** 更新属性及子代 */\n\tupdate(props: MountProps, children: any[]): void {\n\t\tthis.refresh(() => {\n\t\t\tthis.setProps(props);\n\t\t\tthis.setChildren(children);\n\t\t});\n\t}\n\t_refresh() {\n\t\tthis.markDraw(this);\n\t}\n\t_mount() {\n\t\tconst { props, parent, iRender } = this;\n\t\tconst content = draw(this.container.iRender, this._nodes);\n\t\tthis.content = content;\n\t\tconst [container, node]\n\t\t\t= iRender.mount(props, parent?.iRender);\n\t\tfor (const it of getNodes(content)) {\n\t\t\tiRender.insert(container, it);\n\t\t}\n\t\tthis.tree = [createMountedNode({\n\t\t\ttag: Tags.Value,\n\t\t\tcomponent: undefined,\n\t\t\tnode,\n\t\t\tvalue: node,\n\t\t\tchildren: [],\n\t\t})];\n\t\tthis._node = node;\n\t\tthis._container = container;\n\t}\n\t_destroy() {\n\t\tdestroy(this.content);\n\t}\n\t_unmount() {\n\t\tconst { parent, iRender } = this;\n\t\tif (parent) {\n\t\t\tunmount(parent.iRender, this.tree);\n\t\t}\n\t\tiRender.unmount(\n\t\t\tthis._container!,\n\t\t\tthis._node!,\n\t\t\tBoolean(parent),\n\t\t);\n\t\tunmount(this.iRender, this.content);\n\t}\n\t_draw() {\n\t}\n\tdrawSelf() {\n\t\tif (!this.mounted) { return; }\n\t\tif (this.destroyed) { return; }\n\t\tconst {\n\t\t\t_drawChildren: drawChildren,\n\t\t\t_drawContainer: drawContainer,\n\t\t} = this;\n\t\tthis._needDraw = false;\n\t\tthis._drawChildren = false;\n\t\tthis._drawContainer = false;\n\t\tthis.callHook('beforeUpdate');\n\t\tif (drawContainer) {\n\t\t\tthis.iRender.drawContainer(\n\t\t\t\tthis._container!,\n\t\t\t\tthis._node!,\n\t\t\t\tthis.props,\n\t\t\t\tthis.parent?.iRender,\n\t\t\t);\n\t\t}\n\t\tif (drawChildren) {\n\t\t\tthis.content = draw(\n\t\t\t\tthis.iRender,\n\t\t\t\tthis._nodes,\n\t\t\t\tthis.content,\n\t\t\t);\n\t\t}\n\t\tthis.callHook('updated');\n\t}\n\t/** 等待重画的项目 */\n\tprivate _awaitDraw = new Set<NeepObject>();\n\t/** 自身是否需要重绘 */\n\tprivate _needDraw = false;\n\t/** 标记需要绘制的元素 */\n\tmarkDraw(\n\t\tnObject: NeepObject,\n\t\tremove = false,\n\t) {\n\t\tif (nObject === this) {\n\t\t\tthis._needDraw = !remove;\n\t\t} else if (remove) {\n\t\t\tthis._awaitDraw.delete(nObject);\n\t\t} else {\n\t\t\tthis._awaitDraw.add(nObject);\n\t\t}\n\t\tthis.rootContainer.markDrawContainer(\n\t\t\tthis,\n\t\t\t!this._needDraw && !this._awaitDraw.size || this.destroyed,\n\t\t);\n\t}\n\tdrawContainer() {\n\t\tconst {\n\t\t\t_node: node,\n\t\t\t_container: container,\n\t\t\t_awaitDraw: awaitDraw,\n\t\t} = this;\n\t\tif (!node || !container) { return; }\n\t\tthis.callHook('beforeDraw');\n\t\tconst needDraw = this._needDraw;\n\t\tthis._needDraw = false;\n\t\tconst list = [...awaitDraw];\n\t\tawaitDraw.clear();\n\t\tif (needDraw) { this.drawSelf(); }\n\t\tlist.map(c => c.draw());\n\t\tthis.iRender.draw(container, node);\n\t\tthis.callHook('drawn');\n\t}\n\tprivate _containers = new Set<Container>();\n\tmarkDrawContainer(\n\t\tcontainer: Container,\n\t\tremove = false,\n\t) {\n\t\tif (remove) {\n\t\t\tthis._containers.delete(container);\n\t\t} else {\n\t\t\tthis._containers.add(container);\n\t\t}\n\t\tmarkDraw(this);\n\t}\n\tdrawAll() {\n\t\tconst containers = this._containers;\n\t\tif (!containers.size) { return; }\n\t\tthis.callHook('beforeDrawAll');\n\t\tconst list = [...containers];\n\t\tlist.map(c => c.drawContainer());\n\t\tthis.callHook('drawnAll');\n\t}\n}\n","import {\n\tMountProps,\n\tNeepElement,\n\tComponent,\n\tRootExposed,\n} from '../type';\nimport { isElement, createElement } from '../auxiliary';\nimport { isProduction } from '../constant';\nimport { devtools, getRender } from '../install';\nimport Container from './Container';\n\nexport function render(\n\te?: NeepElement | Component,\n\tp: MountProps = {},\n): RootExposed {\n\tlet params = {...p};\n\tconst container =  new Container(\n\t\tgetRender(p.type),\n\t\tparams,\n\t\te === undefined ? [] : isElement(e) ? [e] : [createElement(e)],\n\t);\n\tif (!isProduction) {\n\t\tdevtools.renderHook(container);\n\t}\n\tconst { exposed } = container;\n\tReflect.defineProperty(exposed, '$update', {\n\t\tvalue(c?: NeepElement | Component) {\n\t\t\tcontainer.setChildren(c === undefined ? []\n\t\t\t\t: isElement(c) ? [c] : [createElement(c)]);\n\t\t\treturn exposed;\n\t\t},\n\t\tconfigurable: true,\n\t});\n\tReflect.defineProperty(exposed, '$mount', {\n\t\tvalue(target?: any) {\n\t\t\tif (exposed.$mounted) { return exposed; }\n\t\t\tif (target) {\n\t\t\t\tparams.target = target;\n\t\t\t\tcontainer.setProps(params);\n\t\t\t}\n\t\t\tcontainer.mount();\n\t\t\treturn exposed;\n\t\t},\n\t\tconfigurable: true,\n\t});\n\tReflect.defineProperty(exposed, '$unmount', {\n\t\tvalue() {\n\t\t\tif (!exposed.$mounted) { return; }\n\t\t\tif (exposed.$unmounted) { return; }\n\t\t\tif (exposed.$destroyed) { return container.destroy(); }\n\t\t\tcontainer.unmount();\n\t\t\treturn;\n\t\t},\n\t\tconfigurable: true,\n\t});\n\tif (params.target) {\n\t\tcontainer.mount();\n\t}\n\treturn exposed as any as RootExposed;\n}\nexport { default as refresh } from './refresh';\n","import { Component, Render, Marks } from './type';\nimport { nameSymbol, typeSymbol, renderSymbol } from './symbols';\n\n/** 组件标记函数 */\nexport interface Mark {\n\t<N extends Component<any, any>>(component: N): N;\n}\n\n/**\n * 创建组件标记函数\n */\nfunction Mark<S extends keyof Marks>(\n\tsymbol: S,\n\tvalue: Component[S],\n): Mark {\n\treturn component => {\n\t\tcomponent[symbol] = value as any;\n\t\treturn component;\n\t};\n}\n\n\n/** 标记组件名称 */\nexport function mName(name: string): Mark;\nexport function mName<N extends Component<any, any>>(\n\tname: string,\n\tcomponent: N,\n): N;\nexport function mName<N extends Component<any, any>>(\n\tname: string,\n\tcomponent?: N,\n): Mark | N {\n\tif (!component) { return Mark(nameSymbol, name); }\n\tcomponent[nameSymbol] = name;\n\treturn component;\n}\n\n/** 标记组件类型 */\nexport function mType(type?: 'native' | 'simple' | 'standard'): Mark;\nexport function mType<N extends Component<any, any>>(\n\ttype: 'native' | 'simple' | 'standard',\n\tcomponent: N,\n): N;\nexport function mType<N extends Component<any, any>>(\n\ttype?: 'native' | 'simple' | 'standard',\n\tcomponent?: N,\n): Mark | N {\n\tif (!component) { return Mark(typeSymbol, type); }\n\tcomponent[typeSymbol] = type;\n\treturn component;\n}\n/** 标记为简单组件 */\nexport function mSimple(): Mark;\nexport function mSimple<N extends Component<any, any>>(\n\tcomponent: N,\n): N;\nexport function mSimple<N extends Component<any, any>>(\n\tcomponent?: N,\n): Mark | N {\n\tif (!component) { return Mark(typeSymbol, 'simple'); }\n\tcomponent[typeSymbol] = 'simple';\n\treturn component;\n}\n/** 标记为原生组件 */\nexport function mNative(): Mark;\nexport function mNative<N extends Component<any, any>>(\n\tcomponent: N,\n): N;\nexport function mNative<N extends Component<any, any>>(\n\tcomponent?: N,\n): Mark | N {\n\tif (!component) { return Mark(typeSymbol, 'native'); }\n\tcomponent[typeSymbol] = 'native';\n\treturn component;\n}\n\n/** 标记独立的渲染函数 */\nexport function mRender(fn?: Marks[typeof renderSymbol]): Mark;\nexport function mRender<N extends Component<any, any>>(\n\tfn: Marks[typeof renderSymbol] | undefined,\n\tcomponent: N,\n): N;\nexport function mRender<N extends Component<any, any>>(\n\tfn?: Marks[typeof renderSymbol] | undefined,\n\tcomponent?: N,\n): Mark | N {\n\tif (!component) { return Mark(renderSymbol, fn); }\n\tcomponent[renderSymbol] = fn;\n\treturn component;\n}\n\nexport function create<P extends object>(\n\tc: Component<P, never>,\n): Component<P, never>;\nexport function create<\n\tP extends object = object,\n\tR extends object = object,\n>(c: Component<P, R>, r: Render<R>): Component<P, R>;\nexport function create<T extends Component<any, any>>(\n\tc: T,\n\tr?: Render,\n): T {\n\tif (typeof r === 'function') {\n\t\tc[renderSymbol] = r;\n\t}\n\treturn c;\n}\n\nexport function mark<N extends Component<any, any>>(\n\tcomponent: N,\n\t...marks: Mark[]\n): N {\n\tfor (const m of marks) { m(component); }\n\treturn component;\n}\n"],"names":["version","mode","isProduction","NeepError","Error","constructor","message","tag","monitorable","nextFrameApi","nextFrame","fn","v","assert","renders","Object","create","getRender","type","default","addRender","render","install","apis","Array","isArray","installRender","ScopeSlot","SlotRender","Slot","Value","Container","Deliver","Template","Fragment","value","computed","isValue","encase","recover","current","setCurrent","entity","oldEntity","$_valueIndex","ret","$_values","length","checkCurrent","name","initOnly","created","constructors","initContext","context","exposed","addContextConstructor","push","safeify","hooks","setHook","id","hook","list","$_hooks","set","Set","add","delete","callHook","watch","cb","stop","s","useValue","f","index","values","undefined","setValue","obj","opt","includes","Reflect","defineProperty","get","configurable","enumerable","expose","deliver","delivered","isElementSymbol","Symbol","for","typeSymbol","nameSymbol","renderSymbol","isElement","createElement","attrs","children","node","key","slot","ref","Tags","argv","args","props","on","k","onInfo","exec","elements","n","concat","simple","label","text","color","auxiliary","State","Life","Element","Dev","Constant","setAuxiliary","defineAuxiliary","createMountedNode","recursive2iterable","it","getLastNode","tree","component","getFirstNode","getNodes","unmount","iRender","forEach","e","remove","replace","newTree","oldTree","next","parent","insert","updateList","source","createItem","newList","mountedMap","Map","src","findIndex","old","item","updateItem","splice","size","last","filter","t","has","i","o","updateAll","Math","min","max","createList","all","draw","createValue","substr","update","createAll","isNode","RegExp","String","Date","toISOString","placeholder","map","mount","getSlots","slots","native","nativeList","ownKeys","el","renderSlots","createSlots","inserted","setSlots","updateProps","oldProps","define","newKeys","nObject","newDelivered","$__neep__delivered","container","slotMap","childNodes","refresh","result","nodes","renderNode","execSimple","execSlot","normalize","Boolean","delayedRefresh","objectSet","wait","run","clear","async","asyncRefresh","NeepObject","cfg","$parent","_obj$parent","$component","$isContainer","$created","$destroyed","destroyed","$mounted","mounted","$unmounted","unmounted","createExposed","this","_obj$parent2","isContainer","writable","h","bind","createEntity","parentDelivered","_delayedRefresh","needRefresh","_needRefresh","_refresh","_refreshing","_render","canRefresh","_nodes","convert","_update","_destroy","destroy","__executed_destroy","_mount","__executed_mount","_unmount","__executed_mounted","_draw","nativeNodes","Entity","stopRender","changed","resultOnly","postpone","createExecutable","initRender","_stopRender","markDraw","toElement","_source$props","_source$props2","awaitDraw","requested","rootContainer","setChildren","_drawChildren","setProps","_drawContainer","content","_node","_container","drawSelf","drawChildren","drawContainer","_needDraw","_this$parent","_awaitDraw","markDrawContainer","needDraw","c","_containers","drawAll","containers","p","params","target","Mark","symbol","mName","mType","mSimple","mNative","mRender","r","mark","marks","m"],"mappings":"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"}