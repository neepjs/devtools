{"version":3,"file":"neep.core.esm.min.js","sources":["../../src/core/constant.ts","../../src/core/install.ts","../../src/core/Error.ts","../../src/core/auxiliary/tags.ts","../../src/core/auxiliary/state.ts","../../src/core/helper/current.ts","../../src/core/helper/context.ts","../../src/core/hook.ts","../../src/core/auxiliary/life.ts","../../src/core/symbols.ts","../../src/core/auxiliary/element.ts","../../src/core/auxiliary/dev.ts","../../src/core/auxiliary/index.ts","../../src/core/render/id.ts","../../src/core/render/recursive.ts","../../src/core/render/draw.ts","../../src/core/render/slot.ts","../../src/core/render/props.ts","../../src/core/render/normalize.ts","../../src/core/render/Object.ts","../../src/core/render/Entity.ts","../../src/core/render/convert.ts","../../src/core/render/Container.ts","../../src/core/render/index.ts","../../src/core/create.ts"],"sourcesContent":["/**\n * Global constant\n *\n * Will be replaced by the 'rollup-plugin-replace' plug-in\n */\n\n /**\n * Neep code version\n */\nexport const version = '__VERSION__' as string;\n/**\n * Current mode\n * @enum production\n * @enum development\n */\nexport const mode = '__MODE__' as any as 'production' | 'development';\n/**\n * Is the current mode production mode\n * @description Support tree shaking\n */\nexport const isProduction = mode === 'production';\n","import * as monitorableApi from 'monitorable';\nimport { IRender } from './type';\nimport { isProduction } from './constant';\n\nimport { Devtools } from '../devtools/type';\n\nexport let monitorable: typeof monitorableApi;\n\nexport interface InstallOptions {\n\tmonitorable?: typeof monitorableApi;\n\trender?: IRender;\n\trenders?: IRender[];\n\tdevtools?: any;\n}\n\nexport const renders: Record<string, IRender>\n\t= Object.create(null);\n\n\texport function getRender(\n\ttype: string | number | IRender = ''\n\t): IRender {\n\tif (typeof type === 'object') { return type; }\n\treturn renders[type] || renders.default;\n}\n\nfunction installRender({ render, renders: list}: InstallOptions) {\n\tif (render) {\n\t\trenders[render.type] = render;\n\t\tif (!renders.default) {\n\t\t\trenders.default = render;\n\t\t}\n\t}\n\tif (Array.isArray(list)) {\n\t\tfor (const render of list) {\n\t\t\trenders[render.type] = render;\n\t\t}\n\t\tif (!renders.default) {\n\t\t\tconst [render] = list;\n\t\t\tif (render) { renders.default = render; }\n\t\t}\n\t}\n}\n\nexport const devtools: Devtools = {\n\trenderHook(){},\n};\n\nfunction installDevtools(tools?: Partial<Devtools>) {\n\tif (!tools) { return; }\n\tif (typeof tools !== 'object') { return; }\n\tconst { renderHook } = tools;\n\tif (typeof renderHook === 'function') {\n\t\tdevtools.renderHook = renderHook;\n\t}\n}\n\nexport default function install(apis: InstallOptions) {\n\tif (apis.monitorable) {\n\t\tmonitorable = apis.monitorable;\n\t}\n\tinstallRender(apis);\n\tif (!isProduction) {\n\t\tinstallDevtools(apis.devtools);\n\t}\n}\n","export default class NeepError extends Error {\n\treadonly tag: string;\n\tconstructor(message: string, tag: string = '') {\n\t\tsuper(tag ? `[${tag}] ${message}` : message);\n\t\tthis.tag = tag;\n\t}\n}\n","export const ScopeSlot = 'Neep:ScopeSlot';\nexport const SlotRender = 'Neep:SlotRender';\nexport const Slot = 'Neep:Slot';\nexport const Value = 'Neep:Value';\nexport const Container = 'Neep:Container';\nexport const Deliver = 'Neep:Deliver';\nexport const Template = 'template';\nexport const Fragment = Template;\n","/**\n * 状态管理类 API\n */\nimport { Value, Options } from 'monitorable';\nimport { monitorable } from '../install';\n\nexport function value<T>(\n\tvalue: T,\n\toptions?: boolean | Options,\n): Value<T>\nexport function value(...v: [any]) {\n\treturn monitorable.value(...v);\n}\nexport function computed<T>(\n\tgetter: () => T,\n\toptions?: boolean | Options,\n): Value<T>;\nexport function computed<T>(...v: [any]) {\n\treturn monitorable.computed(...v);\n}\nexport function isValue(v: any): v is Value<any>;\nexport function isValue(...v: [any]) {\n\treturn monitorable.isValue(...v);\n}\nexport function encase<T>(value: T, nest?: number | boolean): T;\nexport function encase<T>(...v: [any]): T {\n\treturn monitorable.encase(...v);\n}\nexport function recover<T>(v: T): T;\nexport function recover<T>(...v: [any]): T {\n\treturn monitorable.recover(...v);\n}\n","import NeepError from '../Error';\nimport { Entity } from '../type';\n\n/** 当前正在执行的对象 */\nexport let current: Entity | undefined;\nexport function setCurrent<T>(\n\tfn: () => T,\n\tentity: Entity,\n): T {\n\tconst oldEntity = current;\n\tcurrent = entity;\n\ttry {\n\t\treturn fn();\n\t} finally {\n\t\tcurrent = oldEntity;\n\t}\n}\n\nexport function checkCurrent(\n\tname: string,\n\tinitOnly = false,\n): Entity {\n\tif (!current) {\n\t\tthrow new NeepError(\n\t\t\t`Function \\`${name}\\` can only be called within a cycle.`,\n\t\t\t'life',\n\t\t);\n\t}\n\tif (!initOnly) {\n\t\treturn current;\n\t}\n\tif (!current.created) {\n\t\treturn current;\n\t}\n\tthrow new NeepError(\n\t\t`Function \\`${name}\\` can only be called at initialization time.`,\n\t\t'life',\n\t);\n}\n","import { Context, ContextConstructor, Exposed } from '../type';\nimport { monitorable } from '../install';\n\nconst constructors: ContextConstructor[] = [];\nexport function initContext(\n\tcontext: Context,\n\texposed?: Exposed,\n): Context {\n\tfor (const constructor of constructors) {\n\t\tconstructor(context, exposed);\n\t}\n\treturn context;\n}\nexport function addContextConstructor(\n\tconstructor: ContextConstructor\n): void {\n\tconstructors.push(monitorable.safeify(constructor));\n}","import { monitorable } from './install';\nimport { Hook, Hooks, Entity } from './type';\nconst hooks: Record<string, Set<Hook>> = Object.create(null);\n\nexport function setHook<H extends Hooks>(\n\tid: H,\n\thook: Hook,\n\tentity?: Entity,\n):() => void;\nexport function setHook(\n\tid: string,\n\thook: Hook,\n\tentity?: Entity,\n): () => void;\n\nexport function setHook(\n\tid: string,\n\thook: Hook,\n\tentity?: Entity,\n):() => void {\n\tlet list = entity?.$_hooks || hooks;\n\tif (!list) { return () => {}; }\n\thook = monitorable.safeify(hook);\n\tlet set = list[id];\n\tif (!set) {\n\t\tset = new Set();\n\t\tlist[id] = set;\n\t}\n\tset.add(hook);\n\treturn () => set.delete(hook);\n}\n\nexport function callHook<H extends Hooks>(\n\tid: H,\n\texposed: Entity,\n): void;\nexport function callHook(id: string, exposed: Entity): void;\nexport function callHook(id: string, exposed: Entity): void {\n\tif (!exposed) { return; }\n\tfor (const hook of exposed.$_hooks[id] || []) {\n\t\thook(exposed);\n\t}\n\tfor (const hook of hooks[id] || []) {\n\t\thook(exposed);\n\t}\n}\n","/**********************************\n * 组件上下文环境专用 API\n * @description 简单组件不支持\n **********************************/\nimport { Value, WatchCallback } from 'monitorable';\nimport { Hooks, Hook } from '../type';\nimport { checkCurrent } from '../helper';\nimport { monitorable } from '../install';\nimport { setHook } from '../hook';\nimport { isValue } from './state';\n\n\n/**********************************\n * 状态管理类 API\n **********************************/\n/**\n * 监听指定值的变化\n * @description 本质是调用 Value 对象的 watch 方法\n * @description 但是通过此方法进行的观察，会在组件生命周期结束时自动停止观察\n * @description 此函数只有在初始化调用时有效\n * @param value 被监听的值\n * @param cb    当监听的值发送变化时调用的函数\n */\nexport function watch<T>(\n\tvalue: Value<T>,\n\tcb: WatchCallback<T>,\n): () => void;\n/**\n * 监听指定值的变化\n * @description 本质是创建调用 Value 对象的 watch 方法\n * @description 但是通过此方法进行的观察，会在组件生命周期结束时自动停止观察\n * @description 此函数只有在初始化调用时有效\n * @param value 用于计算观测值的函数\n * @param cb    当监听的值发送变化时调用的函数\n */\nexport function watch<T>(\n\tvalue: () => T,\n\tcb: (v: T, stopped: boolean) => void,\n): () => void;\n\nexport function watch<T>(\n\tvalue: Value<T> | (() => T),\n\tcb: (v: Value<T> | T, stopped: boolean) => void\n): () => void {\n\tconst entity = checkCurrent('watch');\n\tif (typeof value !== 'function') { return () => {}; }\n\tconst stop = isValue(value)\n\t\t? value.watch(cb)\n\t\t: monitorable.computed(value).watch((v, s) => cb(v(), s));\n\tsetHook('beforeDestroy', () => stop(), entity);\n\treturn stop;\n}\n\n\n/**********************************\n * 钩子类 API\n **********************************/\n/**\n * 为当前组件注册钩子\n * @param name 钩子名称\n * @param hook 钩子\n * @param initOnly 是否仅在初始化时有效\n */\nexport function hook<H extends Hooks>(\n\tname: H,\n\thook: Hook,\n\tinitOnly?: boolean,\n): undefined | (() => void);\nexport function hook(\n\tname: string,\n\thook: Hook,\n\tinitOnly?: boolean,\n): undefined | (() => void);\nexport function hook(\n\tname: string,\n\thook: Hook,\n\tinitOnly?: boolean,\n): undefined | (() => void) {\n\tconst entity = checkCurrent('setHook');\n\tif (initOnly && entity.created) { return undefined; }\n\treturn setHook(name, hook, entity);\n}\n\n/**********************************\n * 配置 API\n **********************************/\n\nexport function setValue<T>(\n\tobj: any,\n\tname: string | number | symbol,\n\tvalue: T | Value<T> | (() => T),\n\topt?: boolean | ((value: T) => void),\n): void {\n\tif (\n\t\ttypeof name === 'string'\n\t\t&& ['$', '_'].includes(name[0])\n\t) {\n\t\treturn;\n\t}\n\tif (isValue(value) && opt) {\n\t\tReflect.defineProperty(obj, name, {\n\t\t\tget() { return value(); },\n\t\t\tset(v) { value(v); },\n\t\t\tconfigurable: true,\n\t\t\tenumerable: true,\n\t\t});\n\t\treturn;\n\t}\n\tif (typeof value === 'function' && opt) {\n\t\tReflect.defineProperty(obj, name, {\n\t\t\tget: value as () => T,\n\t\t\tset: typeof opt === 'function' ? opt : undefined,\n\t\t\tconfigurable: true,\n\t\t\tenumerable: true,\n\t\t});\n\t\treturn;\n\t}\n\tReflect.defineProperty(obj, name, {\n\t\tget() { return value; },\n\t\tconfigurable: true,\n\t\tenumerable: true,\n\t});\n}\n\n\n\n/**********************************\n * 配置 API\n **********************************/\n\n/**\n * 将 Value 导出\n * @param name 导出用的名称\n */\nexport function expose<T>(\n\tname: string | number | symbol,\n\tvalue: Value<T>,\n\tmix?: boolean,\n): void;\n/**\n * 将普通值导出\n * @param name\n * @param value\n */\nexport function expose<T>(\n\tname: string | number | symbol,\n\tvalue: T,\n): void;\n/**\n * 设置基于 getter 的导出\n * @param name\n * @param getter\n * @param nonModifiable\n */\nexport function expose<T>(\n\tname: string | number | symbol,\n\tgetter: () => T,\n\tnonModifiable: true,\n): void;\n/**\n * 设置基于 getter/setter 的导出\n * @param name\n * @param getter\n * @param setter\n */\nexport function expose<T>(\n\tname: string | number | symbol,\n\tgetter: () => T,\n\tsetter: (value: T) => void,\n): void;\nexport function expose<T>(\n\tname: string | number | symbol,\n\tvalue: T | Value<T> | (() => T),\n\topt?: boolean | ((value: T) => void),\n): void {\n\tsetValue(checkCurrent('expose', true).exposed, name, value, opt);\n}\n\n/**********************************\n * 配置 API\n **********************************/\n\n/**\n * 将 Value 传递给子组件\n * @param name 导出用的名称\n */\nexport function deliver<T>(\n\tname: string | number | symbol,\n\tvalue: Value<T>,\n\tmix?: boolean,\n): void;\n/**\n * 将普通值导出\n * @param name\n * @param value\n */\nexport function deliver<T>(\n\tname: string | number | symbol,\n\tvalue: T,\n): void;\n/**\n * 设置基于 getter 的传递\n * @param name\n * @param getter\n * @param nonModifiable\n */\nexport function deliver<T>(\n\tname: string | number | symbol,\n\tgetter: () => T,\n\tnonModifiable: true,\n): void;\n/**\n * 设置基于 getter/setter 的传递\n * @param name\n * @param getter\n * @param setter\n */\nexport function deliver<T>(\n\tname: string | number | symbol,\n\tgetter: () => T,\n\tsetter: (value: T) => void,\n): void;\nexport function deliver<T>(\n\tname: string | number | symbol,\n\tvalue: T | Value<T> | (() => T),\n\topt?: boolean | ((value: T) => void),\n): void {\n\tsetValue(checkCurrent('deliver', true).delivered, name, value, opt);\n}\n","export const isElementSymbol = Symbol.for('isNeepElement');\nexport const typeSymbol = Symbol.for('type');\nexport const nameSymbol = Symbol.for('name');\nexport const renderSymbol = Symbol.for('render');\n","import { Tag, NeepElement, Component } from '../type';\nimport { isElementSymbol, typeSymbol } from '../symbols';\nimport * as Tags from './tags';\n\n/**\n * 判读是否为元素\n */\nexport function isElement(v: any): v is NeepElement {\n\tif (!v) { return false; }\n\tif (typeof v !== 'object') { return false; }\n\treturn v[isElementSymbol] === true;\n}\n\nexport function createElement(\n\ttag: Tag,\n\tattrs?: {[key:string]: any},\n\t...children: any[]\n): NeepElement {\n\tattrs = attrs ? {...attrs} : {};\n\tconst node: NeepElement = {\n\t\t[isElementSymbol]: true,\n\t\ttag,\n\t\tchildren: [],\n\t};\n\tif ('key' in attrs) { node.key = attrs.key; }\n\tif ('slot' in attrs) { node.slot = attrs.slot; }\n\tif (typeof attrs.ref === 'function') { node.ref = attrs.ref; }\n\tif (tag === Tags.Value) {\n\t\tnode.value = attrs.value;\n\t\treturn node;\n\t}\n\tnode.children = children;\n\tif (tag === Tags.Template) { return node; }\n\tif (tag === Tags.SlotRender) {\n\t\tnode.render = attrs.render;\n\t\treturn node;\n\t}\n\tif (tag === Tags.ScopeSlot || tag === Tags.Slot) {\n\t\tconst { render, argv, args, name } = attrs;\n\t\tnode.render = render;\n\t\tnode.args = argv && [argv]\n\t\t\t|| Array.isArray(args) && args.length && args\n\t\t\t|| [{}];\n\n\t\tif (tag === Tags.ScopeSlot) {\n\t\t\tnode.props = { name };\n\t\t\treturn node;\n\t\t}\n\t}\n\tnode.on = {};\n\tnode.props = {};\n\tfor (let k in attrs) {\n\t\t/** 事件 */\n\t\tconst onInfo = /^(::|@|on:)([a-zA-Z0-9].*)$/.exec(k);\n\t\tif (onInfo) {\n\t\t\tnode.on[onInfo[2]] = attrs[k];\n\t\t\tcontinue;\n\t\t}\n\t\t// TODO: data\n\t\tconst nCmd = /^n([:-])([a-zA-Z0-9]+(?:\\.[a-zA-Z0-9]+)*)$/i.exec(k);\n\t\t/** 普通属性 */\n\t\tif (!nCmd) {\n\t\t\tnode.props[k] = attrs[k];\n\t\t\tcontinue;\n\t\t}\n\t}\n\treturn node;\n}\n\nexport interface elementIteratorOptions {\n\tsimple?: boolean | Component[] | ((c: Component) => boolean);\n}\n\nexport function elements(\n\tnode: any,\n\topt: elementIteratorOptions = {},\n): any[] {\n\tif (Array.isArray(node)) {\n\t\tconst list: any[][] = [];\n\t\tfor (let n of node) {\n\t\t\tlist.push(elements(n, opt));\n\t\t}\n\t\treturn ([] as any[]).concat(...list);\n\t}\n\tif (!isElement(node)) { return [node]; }\n\tlet { tag } = node;\n\tif (!tag) { return []; }\n\n\tif (([Tags.Template, Tags.ScopeSlot] as Tag[]).includes(tag)) {\n\t\treturn elements(node.children, opt);\n\t}\n\tif (typeof tag !== 'function') { return [node]; }\n\tif (tag[typeSymbol] !== 'simple') { return [node]; }\n\tconst { simple } = opt;\n\tif (!simple) { return [node]; }\n\tif (Array.isArray(simple)) {\n\t\tif (simple.includes(tag)) { return [node]; }\n\t} else if (typeof simple === 'function') {\n\t\tif (!simple(tag)) { return [node]; }\n\t}\n\treturn elements(node.children, opt);\n}\n","import { isProduction } from '../constant';\nimport { current } from '../helper';\nimport { setLabel } from '../helper/label';\n\nexport function label(text: string, color = ''): void {\n\tif (!isProduction) {\n\t\tif (!current) {\n\t\t\tsetLabel([text, color]);\n\t\t\treturn;\n\t\t}\n\t\tReflect.defineProperty(current.exposed, '$label', {\n\t\t\tvalue: [text, color],\n\t\t\tconfigurable: true,\n\t\t});\n\t}\n}\n","import * as Constant from '../constant';\nimport * as Tags from './tags';\nimport * as State from './state';\nimport * as Life from './life';\nimport * as Element from './element';\nimport * as Dev from './dev';\n\nexport * from './tags';\nexport * from './state';\nexport * from './life';\nexport * from './element';\nexport * from './dev';\n\nexport { Tags };\n\n\n/** 辅助 */\nexport interface Auxiliary extends\n\tReadonly<typeof Tags>,\n\tReadonly<typeof State>,\n\tReadonly<typeof Life>,\n\tReadonly<typeof Element>,\n\tReadonly<typeof Dev>,\n\tReadonly<typeof Constant>\n{}\n\nconst auxiliary: Auxiliary = {\n\t...Tags,\n\t...State,\n\t...Life,\n\t...Element,\n\t...Dev,\n\t...Constant,\n};\n\nexport function setAuxiliary<T>(\n\tname: string,\n\tvalue: T,\n): void {\n\tReflect.defineProperty(auxiliary, name, {\n\t\tvalue,\n\t\tenumerable: true,\n\t\tconfigurable: true,\n\t});\n}\nexport function defineAuxiliary<T>(\n\tname: string,\n\tget: (this: Auxiliary) => T,\n): void {\n\tReflect.defineProperty(auxiliary, name, {\n\t\tget,\n\t\tenumerable: true,\n\t\tconfigurable: true,\n\t});\n}\nexport default auxiliary;\n","import { NativeNode } from '../type';\nimport { isProduction } from '../constant';\nimport { MountedNode } from './draw';\n\nlet ids = 0;\nconst Nodes: {[key: number]: MountedNode} = {};\nlet IdMap: undefined | Map<NativeNode, number>;\nif (!isProduction) {\n\tIdMap = new Map();\n}\nexport function createMountedNode(\n\tn: Omit<MountedNode, 'id'>,\n\tid?: number,\n): MountedNode {\n\tif (!isProduction) {\n\t\tid = id || ++ids;\n\t\tconst { node } = n;\n\t\tif (node && IdMap) { IdMap.set(node, id); }\n\t\treturn Nodes[id] = {...n, id};\n\t}\n\treturn {...n, id: 0};\n}\n\nexport function recoveryMountedNode(node: MountedNode): void {\n\tif (!isProduction) {\n\t\tdelete Nodes[node.id];\n\t}\n}\n\nexport function getNode(\n\tid: number | NativeNode,\n): MountedNode | undefined {\n\tif (!isProduction) {\n\t\tif (typeof id !== 'number') {\n\t\t\tid = IdMap?.get(id) || -1;\n\t\t}\n\t\treturn Nodes[id];\n\t}\n\treturn undefined;\n}\n","export interface RecursiveArray<T> extends Array<RecursiveItem<T>>{};\nexport type RecursiveItem<T> = T | RecursiveArray<T>;\n\nexport function *recursive2iterable<T>(\n\tlist: RecursiveItem<T>,\n): Iterable<T> {\n\tif (!Array.isArray(list)) {\n\t\tyield list;\n\t\treturn;\n\t}\n\tfor (const it of list) {\n\t\tyield* recursive2iterable(it);\n\t}\n}\n","import { Tags, Template } from '../auxiliary';\nimport { IRender, NativeNode, NativeElement } from '../type';\nimport { createMountedNode, recoveryMountedNode } from './id';\nimport { TreeNode } from './convert';\nimport NeepObject from './Object';\n\n\n/**\n * @description node / component / children 至少一个有效\n */\nexport interface MountedNode extends TreeNode {\n\tid: number;\n\tparent?: this;\n\tnode: undefined | NativeNode;\n}\n\n\ntype MountedNodes = MountedNode | MountedNode[]\n\t| (MountedNode | MountedNode[])[];\n\nfunction getLastNode(tree: MountedNodes): NativeNode {\n\tif (Array.isArray(tree)) {\n\t\treturn getLastNode(tree[tree.length - 1]);\n\t}\n\tconst { component, children, node } = tree;\n\tif (node) { return node; }\n\tif (component) { return getLastNode(component.tree); }\n\treturn getLastNode(children);\n}\n\nfunction getFirstNode(tree: MountedNodes): NativeNode {\n\tif (Array.isArray(tree)) { return getFirstNode(tree[0]); }\n\tconst { component, children, node } = tree;\n\tif (node) { return node; }\n\tif (component) { return getFirstNode(component.tree); }\n\treturn getFirstNode(children[0]);\n}\n\nexport function *getNodes(tree: MountedNodes): Iterable<NativeNode> {\n\tif (Array.isArray(tree)) {\n\t\tfor (const it of tree) {\n\t\t\tyield* getNodes(it);\n\t\t}\n\t\treturn;\n\t}\n\tconst { children, node, component } = tree;\n\tif (node) {\n\t\tyield node;\n\t\treturn;\n\t}\n\tif (component) {\n\t\tyield* getNodes(component.tree);\n\t\treturn;\n\t}\n\tyield* getNodes(children);\n}\n\nexport function unmount(iRender: IRender, tree: MountedNodes): void {\n\tif (Array.isArray(tree)) {\n\t\ttree.forEach(e => unmount(iRender, e));\n\t\treturn;\n\t}\n\tconst { component, children, node, ref } = tree;\n\trecoveryMountedNode(tree);\n\tif (node) {\n\t\tif (ref) { ref(node, true); }\n\t\tiRender.remove(node);\n\t\treturn;\n\t}\n\tif (component) {\n\t\tif (ref) { ref(component.exposed, true); }\n\t\tcomponent.unmount();\n\t\treturn;\n\t}\n\tunmount(iRender, children);\n}\n\n\nfunction replace<T extends MountedNode | MountedNode[]>(\n\tiRender: IRender,\n\tnewTree: T,\n\toldTree: MountedNode | MountedNode[],\n): T {\n\tconst next = getFirstNode(oldTree);\n\tif (!next) { return newTree; }\n\tconst parent = iRender.parent(next);\n\tif (!parent) { return newTree; }\n\tfor (const it of getNodes(newTree)) {\n\t\tiRender.insert(parent, it, next);\n\t}\n\tunmount(iRender, oldTree);\n\treturn newTree;\n}\n\nfunction updateList(\n\tiRender: IRender,\n\tsource: TreeNode[],\n\ttree: MountedNode | MountedNode[],\n): MountedNode[] {\n\tif (!source.length) {\n\t\tconst node = createItem(iRender, {tag: null, children: []});\n\t\treturn [replace(iRender, node, tree)];\n\t}\n\tif (!Array.isArray(tree)) { tree = [tree]; }\n\tconst newList: MountedNode[] = [];\n\tconst list = [...tree];\n\tconst mountedMap = new Map<MountedNode, MountedNode>();\n\tfor (const src of source) {\n\t\tconst index = list.findIndex(it =>\n\t\t\tit.tag === src.tag && it.key === src.key\n\t\t);\n\t\tif (index >= 0) {\n\t\t\tconst old = list[index];\n\t\t\tconst item = updateItem(iRender, src, old);\n\t\t\tmountedMap.set(old, item);\n\t\t\tnewList.push(item);\n\t\t\tlist.splice(index, 1);\n\t\t} else {\n\t\t\tconst item = createItem(iRender, src);\n\t\t\tnewList.push(item);\n\t\t}\n\t}\n\tif (!mountedMap.size) {\n\t\treturn replace(iRender, newList, list);\n\t}\n\tunmount(iRender, list);\n\ttree = tree.filter(t => mountedMap.has(t));\n\tconst last = getLastNode(tree[tree.length - 1]);\n\tconst parent = iRender.parent(last);\n\tif (!parent) { return newList; }\n\tlet next = iRender.next(last);\n\t// 调整次序\n\tfor(let i = newList.length - 1; i >= 0; i--) {\n\t\tconst item = newList[i];\n\t\tconst index = tree.findIndex(o => mountedMap.get(o) === item);\n\t\tif (index >= 0) {\n\t\t\tfor (const it of tree.splice(index)) {\n\t\t\t\tmountedMap.delete(it);\n\t\t\t}\n\t\t} else {\n\t\t\tfor (const it of getNodes(item)) {\n\t\t\t\tiRender.insert(parent, it, next);\n\t\t\t}\n\t\t}\n\t\tnext = getFirstNode(item) || next;\n\t}\n\treturn newList;\n}\n/**\n * 更新树\n * @param tree 已有树\n * @param source 用于替换的源\n * @param iRender Neep 对象\n */\nfunction updateAll(\n\tiRender: IRender,\n\tsource: (TreeNode | TreeNode[])[],\n\ttree: (MountedNode | MountedNode[])[],\n): (MountedNode | MountedNode[])[] {\n\tlet index = 0;\n\tlet length = Math.min(source.length, source.length || 1);\n\tconst list: (MountedNode | MountedNode[])[] = [];\n\tfor (; index < length; index++) {\n\t\tconst src = source[index];\n\t\tif (Array.isArray(src)) {\n\t\t\tlist.push(updateList(iRender, src, tree[index]));\n\t\t} else {\n\t\t\tlist.push(updateItem(iRender, src, tree[index]));\n\t\t}\n\t}\n\tlength = Math.max(source.length, tree.length);\n\tif (tree.length > length) {\n\t\t\t// 销毁多余项\n\t\t\tfor (; index < length; index++) {\n\t\t\tunmount(iRender, tree[index]);\n\t\t}\n\t}\n\tif (source.length > length) {\n\t\t// 创建多余项\n\t\tconst last = getLastNode(list[list.length - 1]);\n\t\tconst parent = iRender.parent(last);\n\t\tconst next = iRender.next(last);\n\t\tfor (; index < length; index++) {\n\t\t\tconst src = source[index];\n\t\t\tconst item = Array.isArray(src)\n\t\t\t\t? createList(iRender, src)\n\t\t\t\t: createItem(iRender, src);\n\t\t\tlist.push(item);\n\t\t\tif (!parent) { continue; }\n\t\t\tfor (const it of getNodes(item)) {\n\t\t\t\tiRender.insert(parent, it, next);\n\t\t\t}\n\t\t}\n\t}\n\treturn list;\n}\n\n/**\n * 更新树节点\n * @param iRender Neep 对象\n * @param tree 已有树\n * @param source 用于替换的源\n */\nfunction updateItem(\n\tiRender: IRender,\n\tsource: TreeNode,\n\ttree: MountedNode | MountedNode[],\n): MountedNode {\n\tif (Array.isArray(tree)) {\n\t\tconst index = tree.findIndex(it =>\n\t\t\tit.tag === source.tag && it.component === source.component\n\t\t);\n\t\tif (index < 0) {\n\t\t\treturn replace(iRender, createItem(iRender, source), tree);\n\t\t}\n\t\tconst all = tree;\n\t\t[tree] = tree.splice(index, 1);\n\t\tunmount(iRender, all);\n\t}\n\tconst { tag, component } = source;\n\tconst ref = source.ref !== tree.ref && source.ref;\n\tif (tag !== tree.tag || component !== tree.component) {\n\t\treturn replace(iRender, createItem(iRender, source), tree);\n\t}\n\tif (!tag) { return tree; }\n\tif (typeof tag !== 'string' || tag === Tags.Container) {\n\t\tif (!component) {\n\t\t\t// TODO: ref\n\t\t\treturn createMountedNode({\n\t\t\t\t...source,\n\t\t\t\tnode: undefined,\n\t\t\t\tcomponent: undefined,\n\t\t\t\tchildren: draw(\n\t\t\t\t\tiRender,\n\t\t\t\t\tsource.children,\n\t\t\t\t\ttree.children,\n\t\t\t\t),\n\t\t\t}, tree.id);\n\t\t}\n\t\tif (ref) { ref(component.exposed); }\n\t\treturn createMountedNode({\n\t\t\t...source,\n\t\t\tnode: undefined,\n\t\t\tcomponent,\n\t\t\tchildren: [],\n\t\t}, tree.id);\n\t}\n\tif (tag === Tags.Value) {\n\t\tif(tree.value === source.value) {\n\t\t\tif (ref && tree.node) { ref(tree.node); }\n\t\t\treturn createMountedNode({\n\t\t\t\t...tree,\n\t\t\t\t...source,\n\t\t\t\tchildren: [],\n\t\t\t}, tree.id);\n\t\t}\n\t\treturn replace( iRender, createValue(iRender, source), tree);\n\t}\n\tif (tag === Template || tag.substr(0, 5) === 'Neep:') {\n\t\t// TODO: ref\n\t\treturn createMountedNode({\n\t\t\t...source,\n\t\t\tnode: undefined,\n\t\t\tcomponent: undefined,\n\t\t\tchildren: updateAll(\n\t\t\t\tiRender,\n\t\t\t\tsource.children,\n\t\t\t\ttree.children,\n\t\t\t),\n\t\t}, tree.id);\n\t}\n\tconst { node } = tree;\n\tiRender.update(\n\t\tnode as NativeElement,\n\t\tsource.props || {},\n\t);\n\tif (ref) { ref(node!); }\n\tif (!source.children.length && !tree.children.length) {\n\t\treturn createMountedNode(\n\t\t\t{\n\t\t\t\t...tree,\n\t\t\t\t...source,\n\t\t\t\tchildren: [],\n\t\t\t},\n\t\t\ttree.id);\n\t}\n\tif (!source.children.length && tree.children.length) {\n\t\tunmount(iRender, tree.children);\n\t}\n\tif (source.children.length && !tree.children.length) {\n\t\tconst children = createAll(iRender, source.children);\n\t\tfor (const it of getNodes(children)) {\n\t\t\tiRender.insert(node as NativeElement, it);\n\t\t}\n\t\treturn createMountedNode({\n\t\t\t...tree,\n\t\t\t...source,\n\t\t\tchildren,\n\t\t}, tree.id);\n\t}\n\treturn createMountedNode({\n\t\t...tree, ...source,\n\t\tchildren: updateAll(\n\t\t\tiRender,\n\t\t\tsource.children,\n\t\t\ttree.children,\n\t\t),\n\t}, tree.id);\n}\n\nfunction createValue(\n\tiRender: IRender,\n\tsource: TreeNode,\n): MountedNode {\n\tconst { value, ref } = source;\n\tif (iRender.isNode(source.value)) {\n\t\tif (ref) { ref(value); }\n\t\treturn createMountedNode({\n\t\t\t...source,\n\t\t\tnode: value,\n\t\t\tchildren: [],\n\t\t\tcomponent: undefined,\n\t\t});\n\t}\n\tconst type = typeof value;\n\tlet node: NativeNode | undefined;\n\tif (\n\t\ttype === 'bigint'\n\t\t|| type === 'boolean'\n\t\t|| type === 'number'\n\t\t|| type === 'string'\n\t\t|| type === 'symbol'\n\t\t|| value instanceof RegExp\n\t) {\n\t\tnode = iRender.text(String(value));\n\t} else if (value instanceof Date) {\n\t\tnode = iRender.text(value.toISOString());\n\t} else if (type === 'object' && value) {\n\t\tnode = iRender.text(String(value));\n\t\t// TODO: 对象处理\n\t}\n\tif (!node) { node = iRender.placeholder(); }\n\tif (ref) { ref(node); }\n\treturn createMountedNode({\n\t\t...source,\n\t\tnode,\n\t\tcomponent: undefined,\n\t\tchildren: [],\n\t});\n}\n\nfunction createAll(\n\tiRender: IRender,\n\tsource: (TreeNode | TreeNode[])[],\n): (MountedNode | MountedNode[])[] {\n\tif (!source.length) {\n\t\treturn [createMountedNode({\n\t\t\ttag: null,\n\t\t\tnode: iRender.placeholder(),\n\t\t\tcomponent: undefined,\n\t\t\tchildren: [],\n\t\t})];\n\t}\n\n\treturn source.map(item =>\n\t\tArray.isArray(item)\n\t\t\t? createList(iRender, item)\n\t\t\t: createItem(iRender, item)\n\t);\n}\n\nfunction createList(\n\tiRender: IRender,\n\tsource: TreeNode[],\n): MountedNode[] {\n\tif (source.length) {\n\t\treturn source.map(it => createItem(iRender, it));\n\t}\n\treturn [createMountedNode({\n\t\ttag: null,\n\t\tnode: iRender.placeholder(),\n\t\tcomponent: undefined,\n\t\tchildren: [],\n\t})];\n}\n\nfunction createItem(\n\tiRender: IRender,\n\tsource: TreeNode,\n): MountedNode {\n\tconst { tag, ref, component } = source;\n\tif (!tag) {\n\t\tconst node = iRender.placeholder();\n\t\tif (ref) { ref(node); }\n\t\treturn createMountedNode({\n\t\t\ttag: null,\n\t\t\tnode,\n\t\t\tcomponent: undefined,\n\t\t\tchildren: [],\n\t\t});\n\t}\n\tif (typeof tag !== 'string' || tag === Tags.Container) {\n\t\tif (!component) {\n\t\t\t// TODO: ref\n\t\t\treturn createMountedNode({\n\t\t\t\t...source,\n\t\t\t\tnode: undefined,\n\t\t\t\tcomponent: undefined,\n\t\t\t\tchildren: draw(iRender, source.children),\n\t\t\t});\n\t\t}\n\t\tcomponent.mount();\n\t\tif (ref) { ref(component.exposed); }\n\t\treturn createMountedNode({\n\t\t\t...source,\n\t\t\tnode: undefined,\n\t\t\tcomponent, children: [],\n\t\t});\n\t}\n\tif (tag === Tags.Value) {\n\t\treturn createValue(iRender, source);\n\t}\n\tif (tag === Template || tag.substr(0, 5) === 'Neep:') {\n\t\t// TODO: ref\n\t\treturn createMountedNode({\n\t\t\t...source,\n\t\t\tnode: undefined,\n\t\t\tcomponent: undefined,\n\t\t\tchildren: createAll(iRender, source.children),\n\t\t});\n\t}\n\tconst node = iRender.create(tag, source.props || {});\n\tif (ref) { ref(node); }\n\tlet children: (MountedNode | MountedNode[])[] = [];\n\tif (source.children) {\n\t\tchildren = createAll(iRender, source.children);\n\t\tfor (const it of getNodes(children)) {\n\t\t\tiRender.insert(node, it);\n\t\t}\n\t}\n\treturn createMountedNode({\n\t\t...source,\n\t\tnode,\n\t\tcomponent: undefined,\n\t\tchildren,\n\t});\n}\n\nexport default function draw(\n\tiRender: IRender,\n\tsource: (TreeNode | TreeNode[])[],\n\ttree?: (MountedNode | MountedNode[])[],\n): (MountedNode | MountedNode[])[] {\n\tif (tree) {\n\t\treturn updateAll(iRender, source, tree);\n\t}\n\treturn createAll(iRender, source);\n}\n","import { NeepElement, SlotFn, Slots, IRender } from '../type';\nimport { isElement, SlotRender, ScopeSlot } from '../auxiliary';\nimport { isElementSymbol } from '../symbols';\nimport { isProduction } from '../constant';\n\n\nexport function getSlots(\n\tiRender: IRender,\n\tchildren: any[],\n\tslots: Record<string | symbol, any[]>,\n\tnative = false,\n): any[] {\n\t/** 原始对象 */\n\tconst nativeList: any[] = [];\n\tfor (const it of children) {\n\t\tif (Array.isArray(it)) {\n\t\t\tconst list: Record<string | symbol, any[]>\n\t\t\t\t= Object.create(null);\n\t\t\tnativeList.push(getSlots(iRender, it, list, native));\n\t\t\tfor (const k of Reflect.ownKeys(list) as string[]) {\n\t\t\t\tif (k in slots) {\n\t\t\t\t\tslots[k].push(list[k]);\n\t\t\t\t} else {\n\t\t\t\t\tslots[k] = [list[k]];\n\t\t\t\t}\n\t\t\t}\n\t\t\tcontinue;\n\t\t}\n\t\tif (native) {\n\t\t\tif (iRender.isNode(it)) {\n\t\t\t\tnativeList.push(it);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (!isElement(it)) {\n\t\t\t\tnativeList.push(it);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (it.tag !== SlotRender) {\n\t\t\t\tnativeList.push(it);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\t\tconst slot = isElement(it) && it.slot || 'default';\n\t\tconst el = isElement(it) ? {\n\t\t\t...it, slot: undefined,\n\t\t\tprops: {...it.props, slot: undefined },\n\t\t} : it;\n\t\tif (slot in slots) {\n\t\t\tslots[slot].push(el);\n\t\t} else {\n\t\t\tslots[slot] = [el];\n\t\t}\n\t}\n\treturn nativeList;\n}\nfunction renderSlots(\n\tlist: any[],\n\t...props: any\n): any[] {\n\treturn list.map(it => {\n\t\tif (Array.isArray(it)) {\n\t\t\treturn renderSlots(it, ...props);\n\t\t}\n\t\tif (!isElement(it)) { return it; }\n\t\tif (it.tag !== SlotRender) {\n\t\t\treturn {\n\t\t\t\t...it,\n\t\t\t\tslot: undefined,\n\t\t\t} as NeepElement;\n\t\t}\n\t\tif (typeof it.render === 'function') {\n\t\t\treturn it.render(...props);\n\t\t}\n\t\treturn it.children;\n\t});\n}\nfunction createSlots(\n\tname: string,\n\tlist: any[],\n): SlotFn {\n\tconst slot = (...props: any) => ({\n\t\t[isElementSymbol]: true,\n\t\ttag: ScopeSlot,\n\t\tchildren: renderSlots(list, ...props),\n\t\tinserted: true,\n\t\tlabel: isProduction ? undefined : [`[${name}]`, '#00F'],\n\t} as NeepElement);\n\tslot.children = list;\n\treturn slot;\n}\nexport function setSlots(\n\tchildren: {[key: string]: any[]},\n\tslots: Slots = Object.create(null),\n) {\n\tfor (const k of Reflect.ownKeys(slots)) {\n\t\tif (!(k in children)) {\n\t\t\tdelete slots[k as string];\n\t\t}\n\t}\n\tfor (const k of Reflect.ownKeys(children) as string[]) {\n\t\tslots[k] = createSlots(k, children[k]);\n\t}\n\treturn slots;\n}\n","import { isValue } from '../auxiliary';\n\nexport function updateProps(\n\tobj: any,\n\tprops: any,\n\toldProps: any = {},\n\tdefine = false,\n) {\n\tconst newKeys = new Set(Reflect.ownKeys(props));\n\tfor (const k of Reflect.ownKeys(obj)) {\n\t\tif (!newKeys.has(k)) {\n\t\t\tdelete obj[k];\n\t\t}\n\t}\n\tif (!define) {\n\t\tfor (const k of newKeys) {\n\t\t\tobj[k] = props[k];\n\t\t}\n\t\treturn obj;\n\t}\n\tfor (const k of newKeys) {\n\t\tconst value = props[k];\n\t\tif (k in oldProps && oldProps[k] === value) {\n\t\t\tcontinue;\n\t\t}\n\t\tif (isValue(value)) {\n\t\t\tReflect.defineProperty(obj, k, {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tget() { return value(); },\n\t\t\t\tset(v) { value(v); }\n\t\t\t});\n\t\t\tcontinue;\n\t\t}\n\t\tReflect.defineProperty(obj, k, {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: true,\n\t\t\tvalue,\n\t\t});\n\t}\n\treturn obj;\n}","import {\n\tNeepElement, Exposed, Delivered,\n\tRender, NeepNode, Slots, Context, IRender, Component,\n} from '../type';\nimport { typeSymbol } from '../symbols';\nimport { isProduction } from '../constant';\nimport auxiliary, { isElement, Tags } from '../auxiliary';\nimport { renderSymbol, isElementSymbol } from '../symbols';\nimport { getLabel } from '../helper/label';\nimport Container from './Container';\nimport Entity from './Entity';\nimport { getSlots, setSlots } from './slot';\nimport { initContext } from '../helper/context';\nimport { updateProps } from './props';\n\nfunction execSimple(\n\tnObject: Container | Entity,\n\tdelivered: Delivered,\n\tnode: NeepElement,\n\ttag: Component,\n\tchildren: any[],\n) {\n\tconst { iRender } = nObject.container;\n\tconst slotMap = Object.create(null);\n\tgetSlots(iRender, children, slotMap);\n\tconst slots = setSlots(slotMap);\n\tconst context: Context = initContext({\n\t\tslots,\n\t\tcreated: false,\n\t\tparent: nObject.exposed,\n\t\tdelivered,\n\t\tchildren: new Set<Exposed>(),\n\t\tchildNodes: children,\n\t\trefresh(f) { nObject.refresh(f); }\n\t});\n\tif (!isProduction) { getLabel(); }\n\tconst result = tag({...node.props}, context, auxiliary);\n\tlet label: [string, string] | undefined;\n\tif (!isProduction) { label = getLabel(); }\n\tconst nodes = exec(nObject, delivered, renderNode(\n\t\tiRender,\n\t\tresult,\n\t\tcontext,\n\t\ttag[renderSymbol],\n\t), slots);\n\n\treturn {\n\t\t...node,\n\t\tchildren: Array.isArray(nodes) ? nodes : [nodes],\n\t\tlabel,\n\t} as NeepElement;\n}\n\nfunction execSlot(\n\tnode: NeepElement,\n\tslots: Slots,\n\tchildren: any[],\n\targs: any[] = [{}],\n): NeepElement {\n\tconst slotName = node.props?.name || 'default';\n\tconst slot = slots[slotName];\n\tif (typeof slot === 'function') {\n\t\treturn {\n\t\t\t...node,\n\t\t\t...slot(...args),\n\t\t};\n\t}\n\tconst { render } = node;\n\tconst label: [string, string] | undefined = isProduction\n\t\t? undefined\n\t\t: [`[${ slotName }]`, '#00F'];\n\treturn {\n\t\t...node,\n\t\ttag: Tags.ScopeSlot,\n\t\tlabel,\n\t\tchildren:\n\t\t\ttypeof render !== 'function' ? children : render(...args),\n\t};\n}\n\nfunction exec(\n\tnObject: Container | Entity,\n\tdelivered: Delivered,\n\tnode: any,\n\tslots: Slots,\n\tnative = false,\n): any {\n\tif (Array.isArray(node)) {\n\t\treturn node.map(n =>\n\t\t\texec(nObject, delivered, n, slots, native)\n\t\t);\n\t}\n\tif (!isElement(node)) { return node; }\n\tlet { tag, inserted, args = [{}] } = node;\n\tif (tag === Tags.Deliver) {\n\t\tconst props = { ...node.props };\n\t\tdelete props.ref;\n\t\tdelete props.slot;\n\t\tdelete props.key;\n\t\tconst newDelivered = Object.create(delivered);\n\t\tupdateProps(newDelivered, props || {}, {}, true);\n\t\treturn {\n\t\t\t...node,\n\t\t\ttag,\n\t\t\t$__neep__delivered: newDelivered,\n\t\t\tchildren: node.children.map(n => exec(\n\t\t\t\tnObject,\n\t\t\t\tnewDelivered,\n\t\t\t\tn,\n\t\t\t\tslots,\n\t\t\t\tnative,\n\t\t\t)),\n\t\t};\n\t}\n\n\tconst children = node.children\n\t\t.map(n => exec(nObject, delivered, n, slots, native));\n\n\tif (typeof tag === 'function') {\n\t\tif (tag[typeSymbol] === 'simple') {\n\t\t\treturn execSimple(nObject, delivered, node, tag, children);\n\t\t}\n\t\treturn { ...node, $__neep__delivered: delivered, children, tag };\n\n\t}\n\tif (tag === Tags.Slot) {\n\t\ttag = native ? 'slot' : Tags.ScopeSlot;\n\t}\n\tif (tag !== Tags.ScopeSlot || inserted) {\n\t\treturn { ...node, children, tag };\n\t}\n\treturn execSlot(node, slots, children, args);\n}\n\n\n\nfunction renderNode<R extends object = object>(\n\tiRender: IRender,\n\tnode: R | NeepNode | NeepNode[] | undefined | null,\n\tcontext: Context,\n\trender?: Render,\n): NeepNode[] {\n\tif (Array.isArray(node)) { return node; }\n\tif (isElement(node)) { return [node]; }\n\tif (node === undefined || node === null) {\n\t\treturn [{ [isElementSymbol]: true, tag: null, children: [] }];\n\t}\n\tif (!iRender.isNode(node) && typeof node === 'object' && render) {\n\t\tnode = render(node, context, auxiliary);\n\t}\n\tif (isElement(node)) { return [node]; }\n\tif (node === undefined || node === null) {\n\t\treturn [{ [isElementSymbol]: true, tag: null, children: [] }];\n\t}\n\treturn [{\n\t\t[isElementSymbol]: true,\n\t\ttag: Tags.Value,\n\t\tvalue: node,\n\t\tchildren: [],\n\t}];\n}\n\n\nexport default function normalize(\n\tnObject: Entity,\n\tresult: any,\n) {\n\treturn exec(\n\t\tnObject,\n\t\tnObject.delivered,\n\t\trenderNode(\n\t\t\tnObject.iRender,\n\t\t\tresult,\n\t\t\tnObject.context,\n\t\t\tnObject.component[renderSymbol],\n\t\t),\n\t\tnObject.context.slots,\n\t\tBoolean(nObject.native),\n\t);\n}\n","import {\n\tExposed, Delivered,\n\tEntity as ComponentEntity,\n\tNativeComponent,\n\tHook, Hooks, NeepNode, IRender,\n} from '../type';\nimport { callHook, setHook } from '../hook';\nimport { MountedNode } from './draw';\nimport Container from './Container';\nimport convert, { TreeNode } from './convert';\n\nfunction createExposed(obj: NeepObject): Exposed {\n\tconst cfg: { [K in Exclude<keyof Exposed, '$label'>]-?:\n\t\t{ configurable: true, value: Exposed[K] }\n\t\t| { configurable: true, get(): Exposed[K] }\n\t} = {\n\t\t$parent: { configurable: true, get: () => obj.parent?.exposed },\n\t\t$component: { configurable: true, value: null },\n\t\t$isContainer: { configurable: true, value: false },\n\t\t$created: { configurable: true, get: () => obj.created },\n\t\t$destroyed: { configurable: true, get: () => obj.destroyed },\n\t\t$mounted: { configurable: true, get: () => obj.mounted },\n\t\t$unmounted: { configurable: true, get: () => obj.unmounted },\n\t};\n\tconst exposed: Exposed = Object.create(null, cfg);\n\treturn exposed;\n}\n\nfunction createEntity(obj: NeepObject): ComponentEntity {\n\tconst cfg: { [K in keyof ComponentEntity]-?:\n\t\t{ configurable: true, value: ComponentEntity[K] }\n\t\t| { configurable: true, get(): ComponentEntity[K] }\n\t} = {\n\t\texposed: { configurable: true, get: () => obj.exposed },\n\t\tdelivered: { configurable: true, get: () => obj.delivered },\n\t\tparent: { configurable: true, get: () => obj.parent?.entity },\n\t\tcomponent: { configurable: true, value: null },\n\t\tisContainer: { configurable: true, value: false },\n\t\tcreated: { configurable: true, get: () => obj.created },\n\t\tdestroyed: { configurable: true, get: () => obj.destroyed },\n\t\tmounted: { configurable: true, get: () => obj.mounted },\n\t\tunmounted: { configurable: true, get: () => obj.unmounted },\n\t\t$_hooks: { configurable: true, value: Object.create(null) },\n\t\tcallHook: {\n\t\t\tconfigurable: true,\n\t\t\tvalue(h: string) { callHook(h, entity); },\n\t\t},\n\t\tsetHook: {\n\t\t\tconfigurable: true,\n\t\t\tvalue(id: string, hook: Hook) {\n\t\t\t\treturn setHook(id, hook, entity);\n\t\t\t},\n\t\t},\n\t\trefresh: {\n\t\t\tconfigurable: true,\n\t\t\tvalue(f?:() => void) { obj.refresh(f); },\n\t\t},\n\t};\n\tconst entity: ComponentEntity = Object.create(null, cfg);\n\treturn entity;\n}\n\nexport default class NeepObject {\n\treadonly iRender: IRender;\n\t/** TODO: 向后代呈递的值 */\n\treadonly parentDelivered: Delivered;\n\t/** TODO: 向后代呈递的值 */\n\treadonly delivered: Delivered;\n\t/** 组件暴露值 */\n\treadonly exposed: Exposed = createExposed(this);\n\t/** 组件实体 */\n\treadonly entity: ComponentEntity = createEntity(this);\n\t/** 父组件 */\n\tparent?: NeepObject;\n\t/** 原生组件 */\n\tnative: NativeComponent | null = null;\n\t/** 状态 */\n\tcreated: boolean = false;\n\tdestroyed: boolean = false;\n\tmounted: boolean = false;\n\tunmounted: boolean = false;\n\t/**  子组件的暴露值 */\n\treadonly children: Set<Exposed> = new Set();\n\t/** The subtree mounted on the parent node */\n\ttree: (MountedNode | MountedNode[])[] = [];\n\treadonly container: Container;\n\tconstructor(\n\t\tiRender: IRender,\n\t\tparent?: NeepObject,\n\t\tdelivered: Delivered = parent?.delivered || Object.create(null),\n\t\tcontainer?: Container,\n\t) {\n\t\tthis.iRender = iRender;\n\t\tthis.parentDelivered = delivered;\n\t\tthis.delivered = Object.create(delivered);\n\t\tif (parent) {\n\t\t\tthis.parent = parent;\n\t\t}\n\t\tthis.container = container || this as any as Container;\n\t}\n\t/** 结果渲染函数 */\n\tprotected _render: () => NeepNode[] = () => [];\n\n\tget canRefresh(): boolean {\n\t\treturn !this._delayedRefresh;\n\t}\n\tprotected get needRefresh(): boolean {\n\t\tif (this._delayedRefresh) { return false; }\n\t\tconst needRefresh = this._needRefresh;\n\t\tthis._needRefresh = false;\n\t\treturn needRefresh;\n\t}\n\t/** 是否需要继续刷新 */\n\tprotected _needRefresh = false;\n\tprivate _delayedRefresh = 0;\n\t/** 是否为刷新中 */\n\tprivate _refreshing = false;\n\t/** 渲染结果 */\n\tprotected _nodes: (TreeNode | TreeNode[])[] = [];\n\tprotected _refresh() { }\n\trefresh(f?: () => void) {\n\t\tif (typeof f === 'function') {\n\t\t\ttry {\n\t\t\t\tthis._delayedRefresh++;\n\t\t\t\tf();\n\t\t\t} finally {\n\t\t\t\tthis._delayedRefresh--;\n\t\t\t\tif (this._delayedRefresh <= 0) {\n\t\t\t\t\tthis.refresh();\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t\tif (this.destroyed) { return; }\n\t\tif (!this.created) { return; }\n\t\tthis._needRefresh = true;\n\n\t\tif (this._refreshing) { return; }\n\t\tthis._refreshing = true;\n\n\t\tlet nodes: NeepNode[] | undefined;\n\t\twhile(this.needRefresh) {\n\t\t\tnodes = this._render();\n\t\t\tif (this.destroyed) { return; }\n\t\t}\n\t\tthis._refreshing = false;\n\t\tif (!this.canRefresh) { return; }\n\t\tif (!nodes) { return; }\n\n\t\tthis._nodes = convert(this, nodes, this._nodes);\n\t\tif (!this.mounted) { return; }\n\t\tif (this.destroyed) { return; }\n\t\tif (this.unmounted) { return; }\n\t\tthis._refresh();\n\t}\n\tcallHook<H extends Hooks>(id: H): void;\n\tcallHook(id: string): void;\n\tcallHook(id: string): void {\n\t\tcallHook(id, this.entity);\n\t}\n\n\tchildNodes: any[] = [];\n\t/** 更新属性及子代 */\n\tprotected _update(props: object, children: any[]): void {\n\t\tthis.childNodes = children;\n\t}\n\t/** 更新属性及子代 */\n\tupdate(props: object, children: any[]): void {\n\t\tthis._update(props, children);\n\t}\n\n\n\tprivate __executed_destroy = false;\n\tprivate __executed_mount = false;\n\tprivate __executed_mounted = false;\n\tprotected _destroy() { }\n\tdestroy() {\n\t\tif (this.__executed_destroy) { return; }\n\t\tthis.__executed_destroy = true;\n\t\tthis.callHook('beforeDestroy');\n\t\tthis._destroy();\n\t\tthis.callHook('destroyed');\n\t\tthis.destroyed = true;\n\t}\n\tprotected _mount() { }\n\tmount() {\n\t\tif (this.__executed_destroy) { return; }\n\t\tif (this.__executed_mount) { return; }\n\t\tthis.__executed_mount = true;\n\t\tthis.callHook('beforeMount');\n\t\tthis._mount();\n\t\tthis.callHook('mounted');\n\t\tthis.mounted = true;\n\t}\n\tprotected _unmount() { }\n\tunmount() {\n\t\tif (!this.mounted) { return; }\n\t\tif (this.__executed_mounted) { return; }\n\t\tthis.__executed_mounted = true;\n\t\tthis.callHook('beforeUnmount');\n\t\tthis._unmount();\n\t\tthis.callHook('unmounted');\n\t\tthis.unmounted = true;\n\t}\n\t_draw() {}\n\tdraw() {\n\t\tif (this.__executed_destroy) { return; }\n\t\tthis.callHook('beforeUpdate');\n\t\tthis._draw();\n\t\tthis.callHook('updated');\n\t}\n}\n","import { Component, NeepNode, Slots, Context, Delivered } from '../type';\nimport auxiliary from '../auxiliary';\nimport { monitorable } from '../install';\nimport { setCurrent } from '../helper/current';\nimport convert, { destroy, TreeNode } from './convert';\nimport draw, { unmount, MountedNode } from './draw';\nimport normalize from './normalize';\nimport { getSlots, setSlots } from './slot';\nimport NeepObject from './Object';\nimport { initContext } from '../helper/context';\nimport { updateProps } from './props';\n\nfunction update(\n\tnObject: Entity<any, any>,\n\tprops: any,\n\tchildren:any[],\n) {\n\tupdateProps(nObject.props, props);\n\n\tconst slots = Object.create(null);\n\tconst {\n\t\tnative,\n\t\tcontainer: { iRender },\n\t} = nObject;\n\tconst childNodes = getSlots(\n\t\tiRender,\n\t\tchildren,\n\t\tslots,\n\t\tBoolean(native),\n\t);\n\tsetSlots(slots, nObject.slots);\n\tif (!native) { return; }\n\tnObject.nativeNodes\n\t\t= convert(nObject, childNodes, nObject.nativeNodes);\n}\n\nfunction createContext<\n\tP extends object = object,\n\tR extends object = object\n>(nObject: Entity<P, R>): Context {\n\treturn initContext({\n\t\tslots: nObject.slots,\n\t\tget created() { return nObject.created; },\n\t\tget parent() { return nObject.parent.exposed; },\n\t\tget delivered() { return nObject.parentDelivered; },\n\t\tget children() { return nObject.children; },\n\t\tget childNodes() { return nObject.childNodes; },\n\t\trefresh(f) { nObject.refresh(f); }\n\t}, nObject.exposed);\n}\n\n/** 初始化渲染 */\nfunction initRender<R extends object = object>(\n\tnObject: Entity<any, R>\n): { render(): any, nodes: any, stopRender(): void } {\n\tconst {\n\t\tcomponent,\n\t\tprops,\n\t\tcontext,\n\t\tentity,\n\t} = nObject;\n\tconst refresh = (changed: boolean) => changed && nObject.refresh()\n\t// 初始化执行\n\tconst result = monitorable.exec(() => setCurrent(\n\t\t() => component(props, context, auxiliary),\n\t\tentity,\n\t), refresh, true);\n\tif (typeof result === 'function') {\n\t\t// 响应式\n\t\tconst render = monitorable.createExecutable(\n\t\t\t() => normalize(nObject, (result as () => NeepNode)()),\n\t\t\trefresh,\n\t\t);\n\t\treturn {\n\t\t\tnodes: render(),\n\t\t\trender,\n\t\t\tstopRender: () => render.stop(),\n\t\t};\n\t}\n\n\tconst render = monitorable.createExecutable(\n\t\t() => normalize(nObject, setCurrent(\n\t\t\t() => component(props, context, auxiliary),\n\t\t\tentity,\n\t\t)),\n\t\trefresh,\n\t);\n\treturn {\n\t\tnodes: monitorable.exec(\n\t\t\t() => normalize(nObject, result), refresh, true,\n\t\t),\n\t\trender,\n\t\tstopRender: () => render.stop(),\n\t};\n}\n\n\nexport default class Entity<\n\tP extends object = object,\n\tR extends object = object\n> extends NeepObject {\n\t/** 组件函数 */\n\treadonly component: Component<P, R>;\n\t/** 组件属性 */\n\treadonly props: P = monitorable.encase(Object.create(null));\n\t/** 组件槽 */\n\treadonly slots: Slots = monitorable.encase(Object.create(null));\n\t/** 结果渲染函数 */\n\tprivate readonly _stopRender:() => void;\n\t/** 原生子代 */\n\tnativeNodes: (TreeNode | TreeNode[])[] | undefined;\n\tnativeTree: (MountedNode | MountedNode[])[] = [];\n\t/** 组件上下文 */\n\treadonly context: Context;\n\treadonly parent: NeepObject;\n\t/** 结果渲染函数 */\n\tconstructor(\n\t\tcomponent: Component<P, R>,\n\t\tprops: object,\n\t\tchildren: any[],\n\t\tparent: NeepObject,\n\t\tdelivered?: Delivered,\n\t) {\n\t\tsuper(parent.iRender, parent, delivered, parent.container);\n\t\tthis.component = component;\n\t\tReflect.defineProperty(\n\t\t\tthis.exposed,\n\t\t\t'$component',\n\t\t\t{ value: component, enumerable: true, configurable: true },\n\t\t);\n\t\t// // 原生组件\n\t\t// const native = nativeRender.component\n\t\t// \t&& component[typeSymbol] === 'native' && false;\n\t\t// // 原生组件\n\t\t// const nativeComponent = native\n\t\t// \t? nativeRender.component!()\n\t\t// \t: null;\n\t\t// this.native = nativeComponent;\n\t\t// 父子关系\n\t\tthis.parent = parent;\n\t\tparent.children.add(this.exposed);\n\t\t// 上下文属性\n\t\tconst context = createContext(this);\n\t\tthis.context = context;\n\t\t// 初始化钩子\n\t\tthis.callHook('beforeCreate');\n\t\t// 更新属性\n\t\tthis.childNodes = children;\n\t\tupdate(this, props, children);\n\t\t// 获取渲染函数及初始渲染\n\t\tconst { render, nodes, stopRender } = initRender(this);\n\t\tthis._render = render;\n\t\tthis._stopRender = stopRender;\n\t\tthis._nodes = convert(this, nodes);\n\t\t// 初始化钩子\n\t\tthis.callHook('created');\n\t\tthis.created = true;\n\t\tif (this._needRefresh) { this.refresh(); }\n\t}\n\t/** 更新属性及子代 */\n\t_update(props: object, children: any[]): void {\n\t\tif (this.destroyed) { return; }\n\t\tthis.childNodes = children;\n\t\tupdate(this, props, children);\n\t}\n\t_destroy() {\n\t\tif (this._stopRender) {\n\t\t\tthis._stopRender();\n\t\t}\n\t\tthis.parent.children.delete(this.exposed);\n\t\tdestroy(this._nodes);\n\t}\n\n\t/** 刷新 */\n\t_refresh() {\n\t\tthis.container.markDraw(this);\n\t}\n\t_draw() {\n\t\tthis.tree = draw(\n\t\t\tthis.container.iRender,\n\t\t\tthis._nodes,\n\t\t\tthis.tree,\n\t\t);\n\t\tconst {native} = this;\n\t\tif (native) {\n\t\t\t// const shadow = this.container.iRender.shadow!(native);\n\t\t\t// TODO: 更新 childNodes\n\t\t}\n\t}\n\t_mount() {\n\t\tthis.tree = draw(this.container.iRender, this._nodes);\n\t}\n\t_unmount() {\n\t\tunmount(this.container.iRender, this.tree);\n\t}\n}\n","import { getRender } from '../install';\nimport { NeepNode, NeepElement, Tag } from '../type';\nimport { Tags, isElement, Value, Template } from '../auxiliary';\nimport { isElementSymbol, typeSymbol } from '../symbols';\nimport { recursive2iterable } from './recursive';\nimport Entity from './Entity';\nimport NeepObject from './Object';\nimport Container from './Container';\nimport { updateProps } from './props';\n\nexport interface TreeNode\n\textends Omit<\n\t\tNeepElement,\n\t\t'children' | 'tag' | typeof isElementSymbol\n\t>\n{\n\t/** 标签名 */\n\ttag: Tag;\n\tchildren: (this | this[])[];\n\tmounted?: boolean;\n\tcomponent?: NeepObject;\n}\n/** 强制转换为 NeepElement */\nfunction toElement(t: any): null | NeepElement {\n\tif (t === false || t === null || t === undefined) {\n\t\treturn null;\n\t}\n\tif (isElement(t)) {\n\t\treturn t;\n\t}\n\treturn {\n\t\t[isElementSymbol]: true,\n\t\ttag: Value,\n\t\tkey: t,\n\t\tvalue: t,\n\t\tchildren: [],\n\t};\n}\n\nexport function destroy(\n\ttree: TreeNode | TreeNode[] | (TreeNode | TreeNode[])[]\n) {\n\tif (Array.isArray(tree)) {\n\t\ttree.forEach(t => destroy(t));\n\t\treturn;\n\t}\n\tconst { component } = tree;\n\tif (component) { component.destroy(); }\n}\n\nfunction createItem(\n\tnObject: NeepObject,\n\tsource: NeepNode,\n): TreeNode {\n\tif (!source) { return { tag: null, children: [] }; }\n\tconst { tag } = source;\n\tif (!tag) { return { tag: null, children: [] }; }\n\tif (typeof tag !== 'string') {\n\t\tif (tag[typeSymbol] === 'simple') {\n\t\t\treturn {\n\t\t\t\t...source,\n\t\t\t\tchildren: convert(nObject, source.children),\n\t\t\t\tcomponent: undefined,\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t...source, children: [],\n\t\t\tcomponent: new Entity(\n\t\t\t\ttag,\n\t\t\t\tsource.props || {},\n\t\t\t\tsource.children,\n\t\t\t\tnObject,\n\t\t\t\tsource.$__neep__delivered,\n\t\t\t),\n\t\t};\n\t}\n\tif (tag === Tags.Container) {\n\t\tconst type = source?.props?.type;\n\t\tconst iRender = type ? getRender(type) : nObject.iRender;\n\t\treturn {\n\t\t\t...source, children: [],\n\t\t\tcomponent: new Container(\n\t\t\t\tiRender,\n\t\t\t\tsource.props || {},\n\t\t\t\tsource.children,\n\t\t\t\tnObject,\n\t\t\t\tsource.$__neep__delivered,\n\t\t\t),\n\t\t};\n\t}\n\tif (tag === Tags.Value) {\n\t\treturn { ...source, children: [] };\n\t}\n\tif (tag === Template || tag.substr(0, 5) === 'Neep:') {\n\t\treturn {\n\t\t\t...source,\n\t\t\tchildren: convert(nObject, source.children),\n\t\t};\n\t}\n\treturn {...source, children: convert(nObject, source.children) };\n}\n\n/**\n * 更新树节点\n * @param nObject Neep 对象\n * @param source 用于替换的源\n * @param tree 已有树\n */\nfunction updateList(\n\tnObject: NeepObject,\n\tsource: any[],\n\ttree: TreeNode | TreeNode[],\n): TreeNode[] {\n\tif (!Array.isArray(tree)) { tree = [tree]; }\n\tconst newList: TreeNode[] = [];\n\tfor (const src of recursive2iterable(source)) {\n\t\tconst node = toElement(src);\n\t\tif (!node) { continue; }\n\t\tconst index = tree.findIndex(it =>\n\t\t\tit.tag === node.tag && it.key === node.key\n\t\t);\n\t\tif (index >= 0) {\n\t\t\tnewList.push(updateItem(nObject, node, tree[index]));\n\t\t\ttree.splice(index, 1);\n\t\t} else {\n\t\t\tnewList.push(createItem(nObject, node));\n\t\t}\n\t}\n\tdestroy(tree);\n\treturn newList;\n}\n\n/**\n * 更新树节点\n * @param tree 已有树\n * @param source 用于替换的源\n * @param nObject Neep 对象\n */\nfunction updateItem(\n\tnObject: NeepObject,\n\tsource: NeepNode,\n\ttree?: TreeNode | TreeNode[],\n): TreeNode {\n\tif (!tree) {\n\t\treturn createItem(nObject, source);\n\t}\n\tif (!source) {\n\t\tdestroy(tree);\n\t\treturn { tag: null, children: [] };\n\t}\n\tif (Array.isArray(tree)) {\n\t\tif (!tree.length) { return createItem(nObject, source); }\n\t\tconst index = tree.findIndex(it => it.tag === source.tag);\n\t\tif (index < 0) {\n\t\t\tdestroy(tree);\n\t\t\treturn createItem(nObject, source);\n\t\t}\n\t\tconst all = tree;\n\t\t[tree] = tree.splice(index, 1);\n\t\tdestroy(all);\n\t}\n\tconst { tag } = source;\n\tif (tag !== tree.tag) {\n\t\tdestroy(tree);\n\t\treturn createItem(nObject, source);\n\t}\n\tif (!tag) { return { tag: null, children: [] }; }\n\tif (typeof tag !== 'string') {\n\t\tif (tag[typeSymbol] === 'simple') {\n\t\t\treturn {\n\t\t\t\t...source,\n\t\t\t\tchildren: convert(\n\t\t\t\t\tnObject,\n\t\t\t\t\tsource.children,\n\t\t\t\t\ttree.children,\n\t\t\t\t),\n\t\t\t\tcomponent: undefined,\n\t\t\t};\n\t\t}\n\t\tconst { component } = tree;\n\t\tif (!component) { return createItem(nObject, source); }\n\t\tcomponent!.update(source.props || {}, source.children);\n\t\treturn { ...source, children: [], component };\n\t}\n\tif (tag === Tags.Container) {\n\t\tconst { component } = tree;\n\t\tif (!component) { return createItem(nObject, source); }\n\t\tconst type = source?.props?.type;\n\t\tconst iRender = type ? getRender(type) : nObject.iRender;\n\t\tif (iRender !== component.iRender) {\n\t\t\treturn createItem(nObject, source);\n\t\t}\n\t\tcomponent!.update(source.props || {}, source.children);\n\t\treturn { ...source, children: [], component };\n\t}\n\tif (tag === Tags.Value) {\n\t\treturn { ...source, children: [] };\n\t}\n\tif (tag === Template || tag.substr(0, 5) === 'Neep:') {\n\t\tlet delivered: any;\n\t\tif (Tags.Deliver === tag) {\n\t\t\tconst props = { ...source.props };\n\t\t\tdelete props.ref;\n\t\t\tdelete props.slot;\n\t\t\tdelete props.key;\n\t\t\tdelivered = updateProps(\n\t\t\t\ttree.$__neep__delivered,\n\t\t\t\tprops,\n\t\t\t\ttree.props,\n\t\t\t\ttrue,\n\t\t\t);\n\t\t}\n\t\treturn {\n\t\t\t...source,\n\t\t\t$__neep__delivered: delivered,\n\t\t\tchildren: convert(\n\t\t\t\tnObject,\n\t\t\t\tsource.children,\n\t\t\t\ttree.children,\n\t\t\t),\n\t\t};\n\t}\n\treturn {\n\t\t...source,\n\t\tchildren: convert(nObject, source.children, tree.children),\n\t};\n}\n\n\nfunction createAll(\n\tnObject: NeepObject,\n\tsource: any[],\n): (TreeNode | TreeNode[])[] {\n\tif (!source.length) { return []; }\n\treturn (source as any[]).map(item => {\n\t\tif (!Array.isArray(item)) {\n\t\t\treturn createItem(nObject, toElement(item));\n\t\t}\n\t\treturn [...recursive2iterable(item)]\n\t\t\t.map(it => createItem(nObject, toElement(it)));\n\t});\n}\nfunction *updateAll(\n\tnObject: NeepObject,\n\tsource: any[],\n\ttree: (TreeNode | TreeNode[])[],\n): Iterable<TreeNode | TreeNode[]> {\n\tlet index = 0;\n\tlet length = Math.min(source.length, source.length);\n\tfor (; index < length; index++) {\n\t\tconst src = source[index];\n\t\tif (Array.isArray(src)) {\n\t\t\tyield updateList(nObject, src, tree[index]);\n\t\t} else {\n\t\t\tyield updateItem(nObject, toElement(src), tree[index]);\n\t\t}\n\t}\n\tlength = Math.max(source.length, source.length);\n\tif (tree.length > length) {\n\t\t\t// 销毁多余项\n\t\t\tfor (; index < length; index++) {\n\t\t\t\tdestroy(tree[index]);\n\t\t\t}\n\t}\n\tif (source.length > length) {\n\t\t// 创建多余项\n\t\tfor (; index < length; index++) {\n\t\t\tconst src = source[index];\n\t\t\tif (Array.isArray(src)) {\n\t\t\t\tyield [...recursive2iterable(src)]\n\t\t\t\t\t.map(it => createItem(nObject, it));\n\t\t\t} else {\n\t\t\t\tyield createItem(nObject, src);\n\t\t\t}\n\t\t}\n\t}\n}\n\n\n/**\n * 更新树\n * @param source 用于替换的源\n * @param nObject Neep 对象\n * @param tree 已有树\n */\nfunction convert(\n\tnObject: NeepObject,\n\tsource: any,\n\ttree?: (TreeNode | TreeNode[])[],\n): (TreeNode | TreeNode[])[] {\n\tif (!Array.isArray(source)) { source = []; }\n\tif (!tree) {\n\t\treturn createAll(nObject, source);\n\t}\n\treturn [...updateAll(nObject, source, tree)];\n}\n\n\nexport default convert;\n","import {\n\tIRender,\n\tMountProps,\n\tNativeNode,\n\tNativeContainer,\n\tDelivered,\n} from '../type';\nimport { Tags } from '../auxiliary';\nimport { createMountedNode } from './id';\nimport convert, { destroy } from './convert';\nimport draw, { unmount, getNodes, MountedNode } from './draw';\nimport NeepObject from './Object';\n\n\nlet awaitDraw = new Set<Container>();\nlet requested = false;\nfunction markDraw(c: Container) {\n\tawaitDraw.add(c);\n\tif (requested) { return; }\n\trequested = true;\n\twindow.requestAnimationFrame(() => {\n\t\trequested = false;\n\t\tconst list = [...awaitDraw];\n\t\tawaitDraw.clear();\n\t\tlist.map(c => c.drawAll());\n\t});\n}\n\nexport default class Container extends NeepObject {\n\tprops: MountProps;\n\t/** 组件树结构 */\n\tcontent: (MountedNode | MountedNode[])[] = [];\n\t_node: NativeNode | null = null;\n\t_container: NativeContainer | null = null;\n\treadonly rootContainer: Container = this;\n\tconstructor(\n\t\tiRender: IRender,\n\t\tprops: MountProps,\n\t\tchildren: any[],\n\t\tparent?: NeepObject,\n\t\tdelivered?: Delivered,\n\t) {\n\t\tsuper(iRender, parent, delivered);\n\t\tthis.props = props;\n\t\tthis.parent = parent;\n\t\tif (parent) {\n\t\t\tthis.rootContainer = parent.container.rootContainer;\n\t\t}\n\t\tthis.callHook('beforeCreate');\n\t\tthis._render = () => children;\n\t\tthis._nodes = convert(this, children);\n\t\tthis.callHook('created');\n\t\tthis.created = true;\n\t}\n\t_drawChildren = false;\n\t_drawContainer = false;\n\tsetChildren(children: any[]): void {\n\t\tif (this.destroyed) { return; }\n\t\tthis.childNodes = children;\n\t\tthis._render = () => children;\n\t\tthis._drawChildren = true;\n\t\tthis.refresh();\n\t}\n\tsetProps(props: MountProps): void {\n\t\tif (this.destroyed) { return; }\n\t\tthis.props = props;\n\t\tthis._drawContainer = true;\n\t\tthis.refresh();\n\t}\n\t/** 更新属性及子代 */\n\tupdate(props: MountProps, children: any[]): void {\n\t\tthis.refresh(() => {\n\t\t\tthis.setProps(props);\n\t\t\tthis.setChildren(children);\n\t\t});\n\t}\n\t_refresh() {\n\t\tthis.markDraw(this);\n\t}\n\t_mount() {\n\t\tconst { props, parent, iRender } = this;\n\t\tconst content = draw(this.container.iRender, this._nodes);\n\t\tthis.content = content;\n\t\tconst [container, node]\n\t\t\t= iRender.mount(props, parent?.iRender);\n\t\tfor (const it of getNodes(content)) {\n\t\t\tiRender.insert(container, it);\n\t\t}\n\t\tthis.tree = [createMountedNode({\n\t\t\ttag: Tags.Value,\n\t\t\tcomponent: undefined,\n\t\t\tnode,\n\t\t\tvalue: node,\n\t\t\tchildren: [],\n\t\t})];\n\t\tthis._node = node;\n\t\tthis._container = container;\n\t}\n\t_destroy() {\n\t\tdestroy(this.content);\n\t}\n\t_unmount() {\n\t\tconst { parent, iRender } = this;\n\t\tif (parent) {\n\t\t\tunmount(parent.iRender, this.tree);\n\t\t}\n\t\tiRender.unmount(\n\t\t\tthis._container!,\n\t\t\tthis._node!,\n\t\t\tBoolean(parent),\n\t\t);\n\t\tunmount(this.iRender, this.content);\n\t}\n\t_draw() {\n\t}\n\tdrawSelf() {\n\t\tif (!this.mounted) { return; }\n\t\tif (this.destroyed) { return; }\n\t\tconst {\n\t\t\t_drawChildren: drawChildren,\n\t\t\t_drawContainer: drawContainer,\n\t\t} = this;\n\t\tthis._needDraw = false;\n\t\tthis._drawChildren = false;\n\t\tthis._drawContainer = false;\n\t\tthis.callHook('beforeUpdate');\n\t\tif (drawContainer) {\n\t\t\tthis.iRender.drawContainer(\n\t\t\t\tthis._container!,\n\t\t\t\tthis._node!,\n\t\t\t\tthis.props,\n\t\t\t\tthis.parent?.iRender,\n\t\t\t);\n\t\t}\n\t\tif (drawChildren) {\n\t\t\tthis.content = draw(\n\t\t\t\tthis.iRender,\n\t\t\t\tthis._nodes,\n\t\t\t\tthis.content,\n\t\t\t);\n\t\t}\n\t\tthis.callHook('updated');\n\t}\n\t/** 等待重画的项目 */\n\tprivate _awaitDraw = new Set<NeepObject>();\n\t/** 自身是否需要重绘 */\n\tprivate _needDraw = false;\n\t/** 标记需要绘制的元素 */\n\tmarkDraw(\n\t\tnObject: NeepObject,\n\t\tremove = false,\n\t) {\n\t\tif (nObject === this) {\n\t\t\tthis._needDraw = !remove;\n\t\t} else if (remove) {\n\t\t\tthis._awaitDraw.delete(nObject);\n\t\t} else {\n\t\t\tthis._awaitDraw.add(nObject);\n\t\t}\n\t\tthis.rootContainer.markDrawContainer(\n\t\t\tthis,\n\t\t\t!this._needDraw && !this._awaitDraw.size || this.destroyed,\n\t\t);\n\t}\n\tdrawContainer() {\n\t\tconst {\n\t\t\t_node: node,\n\t\t\t_container: container,\n\t\t\t_awaitDraw: awaitDraw,\n\t\t} = this;\n\t\tif (!node || !container) { return; }\n\t\tthis.callHook('beforeDraw');\n\t\tconst needDraw = this._needDraw;\n\t\tthis._needDraw = false;\n\t\tconst list = [...awaitDraw];\n\t\tawaitDraw.clear();\n\t\tif (needDraw) { this.drawSelf(); }\n\t\tlist.map(c => c.draw());\n\t\tthis.iRender.draw(container, node);\n\t\tthis.callHook('drawn');\n\t}\n\tprivate _containers = new Set<Container>();\n\tmarkDrawContainer(\n\t\tcontainer: Container,\n\t\tremove = false,\n\t) {\n\t\tif (remove) {\n\t\t\tthis._containers.delete(container);\n\t\t} else {\n\t\t\tthis._containers.add(container);\n\t\t}\n\t\tmarkDraw(this);\n\t}\n\tdrawAll() {\n\t\tconst containers = this._containers;\n\t\tif (!containers.size) { return; }\n\t\tthis.callHook('beforeDrawAll');\n\t\tconst list = [...containers];\n\t\tlist.map(c => c.drawContainer());\n\t\tthis.callHook('drawnAll');\n\t}\n}\n","import {\n\tMountProps,\n\tNeepElement,\n\tComponent,\n\tRootExposed,\n} from '../type';\nimport { isElement, createElement } from '../auxiliary';\nimport { isProduction } from '../constant';\nimport { devtools, getRender } from '../install';\nimport Container from './Container';\n\nexport default function render(\n\te?: NeepElement | Component,\n\tp: MountProps = {},\n): RootExposed {\n\tlet params = {...p};\n\tconst container =  new Container(\n\t\tgetRender(p.type),\n\t\tparams,\n\t\te === undefined ? [] : isElement(e) ? [e] : [createElement(e)],\n\t);\n\tif (!isProduction) {\n\t\tdevtools.renderHook(container);\n\t}\n\tconst { exposed } = container;\n\tReflect.defineProperty(exposed, '$update', {\n\t\tvalue(c?: NeepElement | Component) {\n\t\t\tcontainer.setChildren(c === undefined ? []\n\t\t\t\t: isElement(c) ? [c] : [createElement(c)]);\n\t\t\treturn exposed;\n\t\t},\n\t\tconfigurable: true,\n\t});\n\tReflect.defineProperty(exposed, '$mount', {\n\t\tvalue(target?: any) {\n\t\t\tif (exposed.$mounted) { return exposed; }\n\t\t\tif (target) {\n\t\t\t\tparams.target = target;\n\t\t\t\tcontainer.setProps(params);\n\t\t\t}\n\t\t\tcontainer.mount();\n\t\t\treturn exposed;\n\t\t},\n\t\tconfigurable: true,\n\t});\n\tReflect.defineProperty(exposed, '$unmount', {\n\t\tvalue() {\n\t\t\tif (!exposed.$mounted) { return; }\n\t\t\tif (exposed.$unmounted) { return; }\n\t\t\tif (exposed.$destroyed) { return container.destroy(); }\n\t\t\tcontainer.unmount();\n\t\t\treturn;\n\t\t},\n\t\tconfigurable: true,\n\t});\n\tif (params.target) {\n\t\tcontainer.mount();\n\t}\n\treturn exposed as any as RootExposed;\n}\n","import { Component, Render, Marks } from './type';\nimport { nameSymbol, typeSymbol, renderSymbol } from './symbols';\n\n/** 组件标记函数 */\nexport interface Mark {\n\t<N extends Component<any, any>>(component: N): N;\n}\n\n/**\n * 创建组件标记函数\n */\nfunction Mark<S extends keyof Marks>(\n\tsymbol: S,\n\tvalue: Component[S],\n): Mark {\n\treturn component => {\n\t\tcomponent[symbol] = value as any;\n\t\treturn component;\n\t};\n}\n\n\n/** 标记组件名称 */\nexport function mName(name: string): Mark;\nexport function mName<N extends Component<any, any>>(\n\tname: string,\n\tcomponent: N,\n): N;\nexport function mName<N extends Component<any, any>>(\n\tname: string,\n\tcomponent?: N,\n): Mark | N {\n\tif (!component) { return Mark(nameSymbol, name); }\n\tcomponent[nameSymbol] = name;\n\treturn component;\n}\n\n/** 标记组件类型 */\nexport function mType(type?: 'native' | 'simple' | 'standard'): Mark;\nexport function mType<N extends Component<any, any>>(\n\ttype: 'native' | 'simple' | 'standard',\n\tcomponent: N,\n): N;\nexport function mType<N extends Component<any, any>>(\n\ttype?: 'native' | 'simple' | 'standard',\n\tcomponent?: N,\n): Mark | N {\n\tif (!component) { return Mark(typeSymbol, type); }\n\tcomponent[typeSymbol] = type;\n\treturn component;\n}\n/** 标记为简单组件 */\nexport function mSimple(): Mark;\nexport function mSimple<N extends Component<any, any>>(\n\tcomponent: N,\n): N;\nexport function mSimple<N extends Component<any, any>>(\n\tcomponent?: N,\n): Mark | N {\n\tif (!component) { return Mark(typeSymbol, 'simple'); }\n\tcomponent[typeSymbol] = 'simple';\n\treturn component;\n}\n/** 标记为原生组件 */\nexport function mNative(): Mark;\nexport function mNative<N extends Component<any, any>>(\n\tcomponent: N,\n): N;\nexport function mNative<N extends Component<any, any>>(\n\tcomponent?: N,\n): Mark | N {\n\tif (!component) { return Mark(typeSymbol, 'native'); }\n\tcomponent[typeSymbol] = 'native';\n\treturn component;\n}\n\n/** 标记独立的渲染函数 */\nexport function mRender(fn?: Marks[typeof renderSymbol]): Mark;\nexport function mRender<N extends Component<any, any>>(\n\tfn: Marks[typeof renderSymbol] | undefined,\n\tcomponent: N,\n): N;\nexport function mRender<N extends Component<any, any>>(\n\tfn?: Marks[typeof renderSymbol] | undefined,\n\tcomponent?: N,\n): Mark | N {\n\tif (!component) { return Mark(renderSymbol, fn); }\n\tcomponent[renderSymbol] = fn;\n\treturn component;\n}\n\nexport function create<P extends object>(\n\tc: Component<P, never>,\n): Component<P, never>;\nexport function create<\n\tP extends object = object,\n\tR extends object = object,\n>(c: Component<P, R>, r: Render<R>): Component<P, R>;\nexport function create<T extends Component<any, any>>(\n\tc: T,\n\tr?: Render,\n): T {\n\tif (typeof r === 'function') {\n\t\tc[renderSymbol] = r;\n\t}\n\treturn c;\n}\n\nexport function mark<N extends Component<any, any>>(\n\tcomponent: N,\n\t...marks: Mark[]\n): N {\n\tfor (const m of marks) { m(component); }\n\treturn component;\n}\n"],"names":["version","mode","isProduction","monitorable","renders","Object","create","getRender","type","default","install","apis","render","list","Array","isArray","installRender","NeepError","Error","constructor","message","tag","ScopeSlot","SlotRender","Slot","Value","Container","Deliver","Template","Fragment","value","v","computed","isValue","encase","recover","current","setCurrent","fn","entity","oldEntity","checkCurrent","name","initOnly","created","constructors","initContext","context","exposed","addContextConstructor","push","safeify","hooks","setHook","id","hook","$_hooks","set","Set","add","delete","callHook","watch","cb","stop","s","setValue","obj","opt","includes","Reflect","defineProperty","get","configurable","enumerable","undefined","expose","deliver","delivered","isElementSymbol","Symbol","for","typeSymbol","nameSymbol","renderSymbol","isElement","createElement","attrs","children","node","key","slot","ref","Tags","argv","args","length","props","on","k","onInfo","exec","elements","n","concat","simple","label","text","color","auxiliary","State","Life","Element","Dev","Constant","setAuxiliary","defineAuxiliary","createMountedNode","recursive2iterable","it","getLastNode","tree","component","getFirstNode","getNodes","unmount","iRender","forEach","e","remove","replace","newTree","oldTree","next","parent","insert","updateList","source","createItem","newList","mountedMap","Map","src","index","findIndex","old","item","updateItem","splice","size","last","filter","t","has","i","o","updateAll","Math","min","max","createList","all","draw","createValue","substr","update","createAll","isNode","RegExp","String","Date","toISOString","placeholder","map","mount","getSlots","slots","native","nativeList","ownKeys","el","renderSlots","createSlots","inserted","setSlots","updateProps","oldProps","define","newKeys","nObject","newDelivered","$__neep__delivered","container","slotMap","childNodes","refresh","f","result","nodes","renderNode","execSimple","execSlot","normalize","Boolean","NeepObject","cfg","$parent","_obj$parent","$component","$isContainer","$created","$destroyed","destroyed","$mounted","mounted","$unmounted","unmounted","createExposed","this","_obj$parent2","isContainer","h","createEntity","parentDelivered","_delayedRefresh","needRefresh","_needRefresh","_refresh","_refreshing","_render","canRefresh","_nodes","convert","_update","_destroy","destroy","__executed_destroy","_mount","__executed_mount","_unmount","__executed_mounted","_draw","nativeNodes","Entity","stopRender","changed","createExecutable","initRender","_stopRender","markDraw","toElement","_source$props","_source$props2","awaitDraw","requested","rootContainer","setChildren","_drawChildren","setProps","_drawContainer","content","_node","_container","drawSelf","drawChildren","drawContainer","_needDraw","_this$parent","_awaitDraw","markDrawContainer","needDraw","clear","c","_containers","window","requestAnimationFrame","drawAll","containers","p","params","target","Mark","symbol","mName","mType","mSimple","mNative","mRender","r","mark","marks","m"],"mappings":"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"}