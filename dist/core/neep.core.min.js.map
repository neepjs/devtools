{"version":3,"file":"neep.core.min.js","sources":["../../src/core/constant.ts","../../src/core/install.ts","../../src/core/Error.ts","../../src/core/auxiliary/tags.ts","../../src/core/auxiliary/state.ts","../../src/core/helper/current.ts","../../src/core/helper/context.ts","../../src/core/hook.ts","../../src/core/auxiliary/life.ts","../../src/core/symbols.ts","../../src/core/auxiliary/element.ts","../../src/core/auxiliary/dev.ts","../../src/core/auxiliary/index.ts","../../src/core/render/id.ts","../../src/core/render/recursive.ts","../../src/core/render/draw.ts","../../src/core/render/slot.ts","../../src/core/render/props.ts","../../src/core/render/normalize.ts","../../src/core/render/Object.ts","../../src/core/render/Entity.ts","../../src/core/render/convert.ts","../../src/core/render/Container.ts","../../src/core/create.ts","../../src/core/browser.ts","../../src/core/render/index.ts"],"sourcesContent":["/**\n * Global constant\n *\n * Will be replaced by the 'rollup-plugin-replace' plug-in\n */\n\n /**\n * Neep code version\n */\nexport const version = '__VERSION__' as string;\n/**\n * Current mode\n * @enum production\n * @enum development\n */\nexport const mode = '__MODE__' as any as 'production' | 'development';\n/**\n * Is the current mode production mode\n * @description Support tree shaking\n */\nexport const isProduction = mode === 'production';\n","import * as monitorableApi from 'monitorable';\nimport { IRender } from './type';\nimport { isProduction } from './constant';\n\nimport { Devtools } from '../devtools/type';\n\nexport let monitorable: typeof monitorableApi;\n\nexport interface InstallOptions {\n\tmonitorable?: typeof monitorableApi;\n\trender?: IRender;\n\trenders?: IRender[];\n\tdevtools?: any;\n}\n\nexport const renders: Record<string, IRender>\n\t= Object.create(null);\n\n\texport function getRender(\n\ttype: string | number | IRender = ''\n\t): IRender {\n\tif (typeof type === 'object') { return type; }\n\treturn renders[type] || renders.default;\n}\n\nfunction installRender({ render, renders: list}: InstallOptions) {\n\tif (render) {\n\t\trenders[render.type] = render;\n\t\tif (!renders.default) {\n\t\t\trenders.default = render;\n\t\t}\n\t}\n\tif (Array.isArray(list)) {\n\t\tfor (const render of list) {\n\t\t\trenders[render.type] = render;\n\t\t}\n\t\tif (!renders.default) {\n\t\t\tconst [render] = list;\n\t\t\tif (render) { renders.default = render; }\n\t\t}\n\t}\n}\n\nexport const devtools: Devtools = {\n\trenderHook(){},\n};\n\nfunction installDevtools(tools?: Partial<Devtools>) {\n\tif (!tools) { return; }\n\tif (typeof tools !== 'object') { return; }\n\tconst { renderHook } = tools;\n\tif (typeof renderHook === 'function') {\n\t\tdevtools.renderHook = renderHook;\n\t}\n}\n\nexport default function install(apis: InstallOptions) {\n\tif (apis.monitorable) {\n\t\tmonitorable = apis.monitorable;\n\t}\n\tinstallRender(apis);\n\tif (!isProduction) {\n\t\tinstallDevtools(apis.devtools);\n\t}\n}\n","export default class NeepError extends Error {\n\treadonly tag: string;\n\tconstructor(message: string, tag: string = '') {\n\t\tsuper(tag ? `[${tag}] ${message}` : message);\n\t\tthis.tag = tag;\n\t}\n}\n","export const ScopeSlot = 'Neep:ScopeSlot';\nexport const SlotRender = 'Neep:SlotRender';\nexport const Slot = 'Neep:Slot';\nexport const Value = 'Neep:Value';\nexport const Container = 'Neep:Container';\nexport const Deliver = 'Neep:Deliver';\nexport const Template = 'template';\nexport const Fragment = Template;\n","/**\n * 状态管理类 API\n */\nimport { Value, Options } from 'monitorable';\nimport { monitorable } from '../install';\n\nexport function value<T>(\n\tvalue: T,\n\toptions?: boolean | Options,\n): Value<T>\nexport function value(...v: [any]) {\n\treturn monitorable.value(...v);\n}\nexport function computed<T>(\n\tgetter: () => T,\n\toptions?: boolean | Options,\n): Value<T>;\nexport function computed<T>(...v: [any]) {\n\treturn monitorable.computed(...v);\n}\nexport function isValue(v: any): v is Value<any>;\nexport function isValue(...v: [any]) {\n\treturn monitorable.isValue(...v);\n}\nexport function encase<T>(value: T, nest?: number | boolean): T;\nexport function encase<T>(...v: [any]): T {\n\treturn monitorable.encase(...v);\n}\nexport function recover<T>(v: T): T;\nexport function recover<T>(...v: [any]): T {\n\treturn monitorable.recover(...v);\n}\n","import NeepError from '../Error';\nimport { Entity } from '../type';\n\n/** 当前正在执行的对象 */\nexport let current: Entity | undefined;\nexport function setCurrent<T>(\n\tfn: () => T,\n\tentity: Entity,\n): T {\n\tconst oldEntity = current;\n\tcurrent = entity;\n\ttry {\n\t\tcurrent.$_valueIndex = 0;\n\t\tconst ret = fn();\n\t\tif (current.$_valueIndex !== current.$_values.length) {\n\t\t\tthrow new NeepError(\n\t\t\t\t'Inconsistent number of useValue executions',\n\t\t\t\t'life',\n\t\t\t);\n\t\t}\n\t\treturn ret;\n\t} finally {\n\t\tcurrent = oldEntity;\n\t}\n}\n\nexport function checkCurrent(\n\tname: string,\n\tinitOnly = false,\n): Entity {\n\tif (!current) {\n\t\tthrow new NeepError(\n\t\t\t`Function \\`${name}\\` can only be called within a cycle.`,\n\t\t\t'life',\n\t\t);\n\t}\n\tif (!initOnly) {\n\t\treturn current;\n\t}\n\tif (!current.created) {\n\t\treturn current;\n\t}\n\tthrow new NeepError(\n\t\t`Function \\`${name}\\` can only be called at initialization time.`,\n\t\t'life',\n\t);\n}\n","import { Context, ContextConstructor, Exposed } from '../type';\nimport { monitorable } from '../install';\n\nconst constructors: ContextConstructor[] = [];\nexport function initContext(\n\tcontext: Context,\n\texposed?: Exposed,\n): Context {\n\tfor (const constructor of constructors) {\n\t\tconstructor(context, exposed);\n\t}\n\treturn context;\n}\nexport function addContextConstructor(\n\tconstructor: ContextConstructor\n): void {\n\tconstructors.push(monitorable.safeify(constructor));\n}","import { monitorable } from './install';\nimport { Hook, Hooks, Entity } from './type';\nconst hooks: Record<string, Set<Hook>> = Object.create(null);\n\nexport function setHook<H extends Hooks>(\n\tid: H,\n\thook: Hook,\n\tentity?: Entity,\n):() => void;\nexport function setHook(\n\tid: string,\n\thook: Hook,\n\tentity?: Entity,\n): () => void;\n\nexport function setHook(\n\tid: string,\n\thook: Hook,\n\tentity?: Entity,\n):() => void {\n\tlet list = entity?.$_hooks || hooks;\n\tif (!list) { return () => {}; }\n\thook = monitorable.safeify(hook);\n\tlet set = list[id];\n\tif (!set) {\n\t\tset = new Set();\n\t\tlist[id] = set;\n\t}\n\tset.add(hook);\n\treturn () => set.delete(hook);\n}\n\nexport function callHook<H extends Hooks>(\n\tid: H,\n\texposed: Entity,\n): void;\nexport function callHook(id: string, exposed: Entity): void;\nexport function callHook(id: string, exposed: Entity): void {\n\tif (!exposed) { return; }\n\tfor (const hook of exposed.$_hooks[id] || []) {\n\t\thook(exposed);\n\t}\n\tfor (const hook of hooks[id] || []) {\n\t\thook(exposed);\n\t}\n}\n","/**********************************\n * 组件上下文环境专用 API\n * @description 简单组件不支持\n **********************************/\nimport { Value, WatchCallback } from 'monitorable';\nimport { Hooks, Hook } from '../type';\nimport { checkCurrent } from '../helper';\nimport { monitorable } from '../install';\nimport NeepError from '../Error';\nimport { setHook } from '../hook';\nimport { isValue } from './state';\n\n\n/**********************************\n * 状态管理类 API\n **********************************/\n/**\n * 监听指定值的变化\n * @description 本质是调用 Value 对象的 watch 方法\n * @description 但是通过此方法进行的观察，会在组件生命周期结束时自动停止观察\n * @description 此函数只有在初始化调用时有效\n * @param value 被监听的值\n * @param cb    当监听的值发送变化时调用的函数\n */\nexport function watch<T>(\n\tvalue: Value<T>,\n\tcb: WatchCallback<T>,\n): () => void;\n/**\n * 监听指定值的变化\n * @description 本质是创建调用 Value 对象的 watch 方法\n * @description 但是通过此方法进行的观察，会在组件生命周期结束时自动停止观察\n * @description 此函数只有在初始化调用时有效\n * @param value 用于计算观测值的函数\n * @param cb    当监听的值发送变化时调用的函数\n */\nexport function watch<T>(\n\tvalue: () => T,\n\tcb: (v: T, stopped: boolean) => void,\n): () => void;\n\nexport function watch<T>(\n\tvalue: Value<T> | (() => T),\n\tcb: (v: Value<T> | T, stopped: boolean) => void\n): () => void {\n\tconst entity = checkCurrent('watch');\n\tif (typeof value !== 'function') { return () => {}; }\n\tconst stop = isValue(value)\n\t\t? value.watch(cb)\n\t\t: monitorable.computed(value).watch((v, s) => cb(v(), s));\n\tsetHook('beforeDestroy', () => stop(), entity);\n\treturn stop;\n}\n\nexport function useValue<T>(f: () => T, name = 'useValue'): T {\n\tconst entity = checkCurrent(name);\n\tconst index = entity.$_valueIndex++;\n\tconst values = entity.$_values;\n\tif (!entity.created) {\n\t\tvalues[index] = undefined;\n\t\treturn values[index] = f();\n\t}\n\tif (index >= values.length) {\n\t\tthrow new NeepError(\n\t\t\t'Inconsistent number of useValue executions',\n\t\t\t'life',\n\t\t);\n\t}\n\treturn values[index];\n\n}\n\n/**********************************\n * 钩子类 API\n **********************************/\n/**\n * 为当前组件注册钩子\n * @param name 钩子名称\n * @param hook 钩子\n * @param initOnly 是否仅在初始化时有效\n */\nexport function hook<H extends Hooks>(\n\tname: H,\n\thook: () => void,\n\tinitOnly?: boolean,\n): undefined | (() => void);\nexport function hook(\n\tname: string,\n\thook: () => void,\n\tinitOnly?: boolean,\n): undefined | (() => void);\nexport function hook(\n\tname: string,\n\thook: () => void,\n\tinitOnly?: boolean,\n): undefined | (() => void) {\n\tconst entity = checkCurrent('setHook');\n\tif (initOnly && entity.created) { return undefined; }\n\treturn setHook(name, () => hook(), entity);\n}\n\n/**********************************\n * 配置 API\n **********************************/\n\nexport function setValue<T>(\n\tobj: any,\n\tname: string | number | symbol,\n\tvalue: T | Value<T> | (() => T),\n\topt?: boolean | ((value: T) => void),\n): void {\n\tif (\n\t\ttypeof name === 'string'\n\t\t&& ['$', '_'].includes(name[0])\n\t) {\n\t\treturn;\n\t}\n\tif (isValue(value) && opt) {\n\t\tReflect.defineProperty(obj, name, {\n\t\t\tget() { return value(); },\n\t\t\tset(v) { value(v); },\n\t\t\tconfigurable: true,\n\t\t\tenumerable: true,\n\t\t});\n\t\treturn;\n\t}\n\tif (typeof value === 'function' && opt) {\n\t\tReflect.defineProperty(obj, name, {\n\t\t\tget: value as () => T,\n\t\t\tset: typeof opt === 'function' ? opt : undefined,\n\t\t\tconfigurable: true,\n\t\t\tenumerable: true,\n\t\t});\n\t\treturn;\n\t}\n\tReflect.defineProperty(obj, name, {\n\t\tget() { return value; },\n\t\tconfigurable: true,\n\t\tenumerable: true,\n\t});\n}\n\n\n/**\n * 将 Value 导出\n * @param name 导出用的名称\n */\nexport function expose<T>(\n\tname: string | number | symbol,\n\tvalue: Value<T>,\n\tmix?: boolean,\n): void;\n/**\n * 将普通值导出\n * @param name\n * @param value\n */\nexport function expose<T>(\n\tname: string | number | symbol,\n\tvalue: T,\n): void;\n/**\n * 设置基于 getter 的导出\n * @param name\n * @param getter\n * @param nonModifiable\n */\nexport function expose<T>(\n\tname: string | number | symbol,\n\tgetter: () => T,\n\tnonModifiable: true,\n): void;\n/**\n * 设置基于 getter/setter 的导出\n * @param name\n * @param getter\n * @param setter\n */\nexport function expose<T>(\n\tname: string | number | symbol,\n\tgetter: () => T,\n\tsetter: (value: T) => void,\n): void;\nexport function expose<T>(\n\tname: string | number | symbol,\n\tvalue: T | Value<T> | (() => T),\n\topt?: boolean | ((value: T) => void),\n): void {\n\tsetValue(checkCurrent('expose', true).exposed, name, value, opt);\n}\n\n\n/**\n * 将 Value 传递给子组件\n * @param name 导出用的名称\n */\nexport function deliver<T>(\n\tname: string | number | symbol,\n\tvalue: Value<T>,\n\tmix?: boolean,\n): void;\n/**\n * 将普通值导出\n * @param name\n * @param value\n */\nexport function deliver<T>(\n\tname: string | number | symbol,\n\tvalue: T,\n): void;\n/**\n * 设置基于 getter 的传递\n * @param name\n * @param getter\n * @param nonModifiable\n */\nexport function deliver<T>(\n\tname: string | number | symbol,\n\tgetter: () => T,\n\tnonModifiable: true,\n): void;\n/**\n * 设置基于 getter/setter 的传递\n * @param name\n * @param getter\n * @param setter\n */\nexport function deliver<T>(\n\tname: string | number | symbol,\n\tgetter: () => T,\n\tsetter: (value: T) => void,\n): void;\nexport function deliver<T>(\n\tname: string | number | symbol,\n\tvalue: T | Value<T> | (() => T),\n\topt?: boolean | ((value: T) => void),\n): void {\n\tsetValue(checkCurrent('deliver', true).delivered, name, value, opt);\n}\n","export const isElementSymbol = Symbol.for('isNeepElement');\nexport const typeSymbol = Symbol.for('type');\nexport const nameSymbol = Symbol.for('name');\nexport const renderSymbol = Symbol.for('render');\n","import { Tag, NeepElement, Component } from '../type';\nimport { isElementSymbol, typeSymbol } from '../symbols';\nimport * as Tags from './tags';\n\n/**\n * 判读是否为元素\n */\nexport function isElement(v: any): v is NeepElement {\n\tif (!v) { return false; }\n\tif (typeof v !== 'object') { return false; }\n\treturn v[isElementSymbol] === true;\n}\n\nexport function createElement(\n\ttag: Tag,\n\tattrs?: {[key:string]: any},\n\t...children: any[]\n): NeepElement {\n\tattrs = attrs ? {...attrs} : {};\n\tconst node: NeepElement = {\n\t\t[isElementSymbol]: true,\n\t\ttag,\n\t\tchildren: [],\n\t};\n\tif ('key' in attrs) { node.key = attrs.key; }\n\tif ('slot' in attrs) { node.slot = attrs.slot; }\n\tif (typeof attrs.ref === 'function') { node.ref = attrs.ref; }\n\tif (tag === Tags.Value) {\n\t\tnode.value = attrs.value;\n\t\treturn node;\n\t}\n\tnode.children = children;\n\tif (tag === Tags.Template) { return node; }\n\tif (tag === Tags.SlotRender) {\n\t\tnode.render = attrs.render;\n\t\treturn node;\n\t}\n\tif (tag === Tags.ScopeSlot || tag === Tags.Slot) {\n\t\tconst { render, argv, args, name } = attrs;\n\t\tnode.render = render;\n\t\tnode.args = argv && [argv]\n\t\t\t|| Array.isArray(args) && args.length && args\n\t\t\t|| [{}];\n\n\t\tif (tag === Tags.ScopeSlot) {\n\t\t\tnode.props = { name };\n\t\t\treturn node;\n\t\t}\n\t}\n\tnode.on = {};\n\tnode.props = {};\n\tfor (let k in attrs) {\n\t\t/** 事件 */\n\t\tconst onInfo = /^(::|@|on:)([a-zA-Z0-9].*)$/.exec(k);\n\t\tif (onInfo) {\n\t\t\tnode.on[onInfo[2]] = attrs[k];\n\t\t\tcontinue;\n\t\t}\n\t\t// TODO: data\n\t\tconst nCmd = /^n([:-])([a-zA-Z0-9]+(?:\\.[a-zA-Z0-9]+)*)$/i.exec(k);\n\t\t/** 普通属性 */\n\t\tif (!nCmd) {\n\t\t\tnode.props[k] = attrs[k];\n\t\t\tcontinue;\n\t\t}\n\t}\n\treturn node;\n}\n\nexport interface elementIteratorOptions {\n\tsimple?: boolean | Component[] | ((c: Component) => boolean);\n}\n\nexport function elements(\n\tnode: any,\n\topt: elementIteratorOptions = {},\n): any[] {\n\tif (Array.isArray(node)) {\n\t\tconst list: any[][] = [];\n\t\tfor (let n of node) {\n\t\t\tlist.push(elements(n, opt));\n\t\t}\n\t\treturn ([] as any[]).concat(...list);\n\t}\n\tif (!isElement(node)) { return [node]; }\n\tlet { tag } = node;\n\tif (!tag) { return []; }\n\n\tif (([Tags.Template, Tags.ScopeSlot] as Tag[]).includes(tag)) {\n\t\treturn elements(node.children, opt);\n\t}\n\tif (typeof tag !== 'function') { return [node]; }\n\tif (tag[typeSymbol] !== 'simple') { return [node]; }\n\tconst { simple } = opt;\n\tif (!simple) { return [node]; }\n\tif (Array.isArray(simple)) {\n\t\tif (simple.includes(tag)) { return [node]; }\n\t} else if (typeof simple === 'function') {\n\t\tif (!simple(tag)) { return [node]; }\n\t}\n\treturn elements(node.children, opt);\n}\n","import { isProduction } from '../constant';\nimport { current } from '../helper';\nimport { setLabel } from '../helper/label';\n\nexport function label(text: string, color = ''): void {\n\tif (!isProduction) {\n\t\tif (!current) {\n\t\t\tsetLabel([text, color]);\n\t\t\treturn;\n\t\t}\n\t\tReflect.defineProperty(current.exposed, '$label', {\n\t\t\tvalue: [text, color],\n\t\t\tconfigurable: true,\n\t\t});\n\t}\n}\n","import * as Constant from '../constant';\nimport * as Tags from './tags';\nimport * as State from './state';\nimport * as Life from './life';\nimport * as Element from './element';\nimport * as Dev from './dev';\n\nexport * from './tags';\nexport * from './state';\nexport * from './life';\nexport * from './element';\nexport * from './dev';\n\nexport { Tags };\n\n\n/** 辅助 */\nexport interface Auxiliary extends\n\tReadonly<typeof Tags>,\n\tReadonly<typeof State>,\n\tReadonly<typeof Life>,\n\tReadonly<typeof Element>,\n\tReadonly<typeof Dev>,\n\tReadonly<typeof Constant>\n{}\n\nconst auxiliary: Auxiliary = {\n\t...Tags,\n\t...State,\n\t...Life,\n\t...Element,\n\t...Dev,\n\t...Constant,\n};\n\nexport function setAuxiliary<T>(\n\tname: string,\n\tvalue: T,\n): void {\n\tReflect.defineProperty(auxiliary, name, {\n\t\tvalue,\n\t\tenumerable: true,\n\t\tconfigurable: true,\n\t});\n}\nexport function defineAuxiliary<T>(\n\tname: string,\n\tget: (this: Auxiliary) => T,\n): void {\n\tReflect.defineProperty(auxiliary, name, {\n\t\tget,\n\t\tenumerable: true,\n\t\tconfigurable: true,\n\t});\n}\nexport default auxiliary;\n","import { NativeNode } from '../type';\nimport { isProduction } from '../constant';\nimport { MountedNode } from './draw';\n\nlet ids = 0;\nconst Nodes: {[key: number]: MountedNode} = {};\nlet IdMap: undefined | Map<NativeNode, number>;\nif (!isProduction) {\n\tIdMap = new Map();\n}\nexport function createMountedNode(\n\tn: Omit<MountedNode, 'id'>,\n\tid?: number,\n): MountedNode {\n\tif (!isProduction) {\n\t\tid = id || ++ids;\n\t\tconst { node } = n;\n\t\tif (node && IdMap) { IdMap.set(node, id); }\n\t\treturn Nodes[id] = {...n, id};\n\t}\n\treturn {...n, id: 0};\n}\n\nexport function recoveryMountedNode(node: MountedNode): void {\n\tif (!isProduction) {\n\t\tdelete Nodes[node.id];\n\t}\n}\n\nexport function getNode(\n\tid: number | NativeNode,\n): MountedNode | undefined {\n\tif (!isProduction) {\n\t\tif (typeof id !== 'number') {\n\t\t\tid = IdMap?.get(id) || -1;\n\t\t}\n\t\treturn Nodes[id];\n\t}\n\treturn undefined;\n}\n","export interface RecursiveArray<T> extends Array<RecursiveItem<T>>{};\nexport type RecursiveItem<T> = T | RecursiveArray<T>;\n\nexport function *recursive2iterable<T>(\n\tlist: RecursiveItem<T>,\n): Iterable<T> {\n\tif (!Array.isArray(list)) {\n\t\tyield list;\n\t\treturn;\n\t}\n\tfor (const it of list) {\n\t\tyield* recursive2iterable(it);\n\t}\n}\n","import { Tags, Template } from '../auxiliary';\nimport { IRender, NativeNode, NativeElement } from '../type';\nimport { createMountedNode, recoveryMountedNode } from './id';\nimport { TreeNode } from './convert';\nimport NeepObject from './Object';\n\n\n/**\n * @description node / component / children 至少一个有效\n */\nexport interface MountedNode extends TreeNode {\n\tid: number;\n\tparent?: this;\n\tnode: undefined | NativeNode;\n}\n\n\ntype MountedNodes = MountedNode | MountedNode[]\n\t| (MountedNode | MountedNode[])[];\n\nfunction getLastNode(tree: MountedNodes): NativeNode {\n\tif (Array.isArray(tree)) {\n\t\treturn getLastNode(tree[tree.length - 1]);\n\t}\n\tconst { component, children, node } = tree;\n\tif (node) { return node; }\n\tif (component) { return getLastNode(component.tree); }\n\treturn getLastNode(children);\n}\n\nfunction getFirstNode(tree: MountedNodes): NativeNode {\n\tif (Array.isArray(tree)) { return getFirstNode(tree[0]); }\n\tconst { component, children, node } = tree;\n\tif (node) { return node; }\n\tif (component) { return getFirstNode(component.tree); }\n\treturn getFirstNode(children[0]);\n}\n\nexport function *getNodes(tree: MountedNodes): Iterable<NativeNode> {\n\tif (Array.isArray(tree)) {\n\t\tfor (const it of tree) {\n\t\t\tyield* getNodes(it);\n\t\t}\n\t\treturn;\n\t}\n\tconst { children, node, component } = tree;\n\tif (node) {\n\t\tyield node;\n\t\treturn;\n\t}\n\tif (component) {\n\t\tyield* getNodes(component.tree);\n\t\treturn;\n\t}\n\tyield* getNodes(children);\n}\n\nexport function unmount(iRender: IRender, tree: MountedNodes): void {\n\tif (Array.isArray(tree)) {\n\t\ttree.forEach(e => unmount(iRender, e));\n\t\treturn;\n\t}\n\tconst { component, children, node, ref } = tree;\n\trecoveryMountedNode(tree);\n\tif (node) {\n\t\tif (ref) { ref(node, true); }\n\t\tiRender.remove(node);\n\t\treturn;\n\t}\n\tif (component) {\n\t\tif (ref) { ref(component.exposed, true); }\n\t\tcomponent.unmount();\n\t\treturn;\n\t}\n\tunmount(iRender, children);\n}\n\n\nfunction replace<T extends MountedNode | MountedNode[]>(\n\tiRender: IRender,\n\tnewTree: T,\n\toldTree: MountedNode | MountedNode[],\n): T {\n\tconst next = getFirstNode(oldTree);\n\tif (!next) { return newTree; }\n\tconst parent = iRender.parent(next);\n\tif (!parent) { return newTree; }\n\tfor (const it of getNodes(newTree)) {\n\t\tiRender.insert(parent, it, next);\n\t}\n\tunmount(iRender, oldTree);\n\treturn newTree;\n}\n\nfunction updateList(\n\tiRender: IRender,\n\tsource: TreeNode[],\n\ttree: MountedNode | MountedNode[],\n): MountedNode[] {\n\tif (!source.length) {\n\t\tconst node = createItem(iRender, {tag: null, children: []});\n\t\treturn [replace(iRender, node, tree)];\n\t}\n\tif (!Array.isArray(tree)) { tree = [tree]; }\n\tconst newList: MountedNode[] = [];\n\tconst list = [...tree];\n\tconst mountedMap = new Map<MountedNode, MountedNode>();\n\tfor (const src of source) {\n\t\tconst index = list.findIndex(it =>\n\t\t\tit.tag === src.tag && it.key === src.key\n\t\t);\n\t\tif (index >= 0) {\n\t\t\tconst old = list[index];\n\t\t\tconst item = updateItem(iRender, src, old);\n\t\t\tmountedMap.set(old, item);\n\t\t\tnewList.push(item);\n\t\t\tlist.splice(index, 1);\n\t\t} else {\n\t\t\tconst item = createItem(iRender, src);\n\t\t\tnewList.push(item);\n\t\t}\n\t}\n\tif (!mountedMap.size) {\n\t\treturn replace(iRender, newList, list);\n\t}\n\tunmount(iRender, list);\n\ttree = tree.filter(t => mountedMap.has(t));\n\tconst last = getLastNode(tree[tree.length - 1]);\n\tconst parent = iRender.parent(last);\n\tif (!parent) { return newList; }\n\tlet next = iRender.next(last);\n\t// 调整次序\n\tfor(let i = newList.length - 1; i >= 0; i--) {\n\t\tconst item = newList[i];\n\t\tconst index = tree.findIndex(o => mountedMap.get(o) === item);\n\t\tif (index >= 0) {\n\t\t\tfor (const it of tree.splice(index)) {\n\t\t\t\tmountedMap.delete(it);\n\t\t\t}\n\t\t} else {\n\t\t\tfor (const it of getNodes(item)) {\n\t\t\t\tiRender.insert(parent, it, next);\n\t\t\t}\n\t\t}\n\t\tnext = getFirstNode(item) || next;\n\t}\n\treturn newList;\n}\n/**\n * 更新树\n * @param tree 已有树\n * @param source 用于替换的源\n * @param iRender Neep 对象\n */\nfunction updateAll(\n\tiRender: IRender,\n\tsource: (TreeNode | TreeNode[])[],\n\ttree: (MountedNode | MountedNode[])[],\n): (MountedNode | MountedNode[])[] {\n\tlet index = 0;\n\tlet length = Math.min(source.length, source.length || 1);\n\tconst list: (MountedNode | MountedNode[])[] = [];\n\tfor (; index < length; index++) {\n\t\tconst src = source[index];\n\t\tif (Array.isArray(src)) {\n\t\t\tlist.push(updateList(iRender, src, tree[index]));\n\t\t} else {\n\t\t\tlist.push(updateItem(iRender, src, tree[index]));\n\t\t}\n\t}\n\tlength = Math.max(source.length, tree.length);\n\tif (tree.length > length) {\n\t\t\t// 销毁多余项\n\t\t\tfor (; index < length; index++) {\n\t\t\tunmount(iRender, tree[index]);\n\t\t}\n\t}\n\tif (source.length > length) {\n\t\t// 创建多余项\n\t\tconst last = getLastNode(list[list.length - 1]);\n\t\tconst parent = iRender.parent(last);\n\t\tconst next = iRender.next(last);\n\t\tfor (; index < length; index++) {\n\t\t\tconst src = source[index];\n\t\t\tconst item = Array.isArray(src)\n\t\t\t\t? createList(iRender, src)\n\t\t\t\t: createItem(iRender, src);\n\t\t\tlist.push(item);\n\t\t\tif (!parent) { continue; }\n\t\t\tfor (const it of getNodes(item)) {\n\t\t\t\tiRender.insert(parent, it, next);\n\t\t\t}\n\t\t}\n\t}\n\treturn list;\n}\n\n/**\n * 更新树节点\n * @param iRender Neep 对象\n * @param tree 已有树\n * @param source 用于替换的源\n */\nfunction updateItem(\n\tiRender: IRender,\n\tsource: TreeNode,\n\ttree: MountedNode | MountedNode[],\n): MountedNode {\n\tif (Array.isArray(tree)) {\n\t\tconst index = tree.findIndex(it =>\n\t\t\tit.tag === source.tag && it.component === source.component\n\t\t);\n\t\tif (index < 0) {\n\t\t\treturn replace(iRender, createItem(iRender, source), tree);\n\t\t}\n\t\tconst all = tree;\n\t\t[tree] = tree.splice(index, 1);\n\t\tunmount(iRender, all);\n\t}\n\tconst { tag, component } = source;\n\tconst ref = source.ref !== tree.ref && source.ref;\n\tif (tag !== tree.tag || component !== tree.component) {\n\t\treturn replace(iRender, createItem(iRender, source), tree);\n\t}\n\tif (!tag) { return tree; }\n\tif (typeof tag !== 'string' || tag === Tags.Container) {\n\t\tif (!component) {\n\t\t\t// TODO: ref\n\t\t\treturn createMountedNode({\n\t\t\t\t...source,\n\t\t\t\tnode: undefined,\n\t\t\t\tcomponent: undefined,\n\t\t\t\tchildren: draw(\n\t\t\t\t\tiRender,\n\t\t\t\t\tsource.children,\n\t\t\t\t\ttree.children,\n\t\t\t\t),\n\t\t\t}, tree.id);\n\t\t}\n\t\tif (ref) { ref(component.exposed); }\n\t\treturn createMountedNode({\n\t\t\t...source,\n\t\t\tnode: undefined,\n\t\t\tcomponent,\n\t\t\tchildren: [],\n\t\t}, tree.id);\n\t}\n\tif (tag === Tags.Value) {\n\t\tif(tree.value === source.value) {\n\t\t\tif (ref && tree.node) { ref(tree.node); }\n\t\t\treturn createMountedNode({\n\t\t\t\t...tree,\n\t\t\t\t...source,\n\t\t\t\tchildren: [],\n\t\t\t}, tree.id);\n\t\t}\n\t\treturn replace( iRender, createValue(iRender, source), tree);\n\t}\n\tif (tag === Template || tag.substr(0, 5) === 'Neep:') {\n\t\t// TODO: ref\n\t\treturn createMountedNode({\n\t\t\t...source,\n\t\t\tnode: undefined,\n\t\t\tcomponent: undefined,\n\t\t\tchildren: updateAll(\n\t\t\t\tiRender,\n\t\t\t\tsource.children,\n\t\t\t\ttree.children,\n\t\t\t),\n\t\t}, tree.id);\n\t}\n\tconst { node } = tree;\n\tiRender.update(\n\t\tnode as NativeElement,\n\t\tsource.props || {},\n\t);\n\tif (ref) { ref(node!); }\n\tif (!source.children.length && !tree.children.length) {\n\t\treturn createMountedNode(\n\t\t\t{\n\t\t\t\t...tree,\n\t\t\t\t...source,\n\t\t\t\tchildren: [],\n\t\t\t},\n\t\t\ttree.id);\n\t}\n\tif (!source.children.length && tree.children.length) {\n\t\tunmount(iRender, tree.children);\n\t}\n\tif (source.children.length && !tree.children.length) {\n\t\tconst children = createAll(iRender, source.children);\n\t\tfor (const it of getNodes(children)) {\n\t\t\tiRender.insert(node as NativeElement, it);\n\t\t}\n\t\treturn createMountedNode({\n\t\t\t...tree,\n\t\t\t...source,\n\t\t\tchildren,\n\t\t}, tree.id);\n\t}\n\treturn createMountedNode({\n\t\t...tree, ...source,\n\t\tchildren: updateAll(\n\t\t\tiRender,\n\t\t\tsource.children,\n\t\t\ttree.children,\n\t\t),\n\t}, tree.id);\n}\n\nfunction createValue(\n\tiRender: IRender,\n\tsource: TreeNode,\n): MountedNode {\n\tconst { value, ref } = source;\n\tif (iRender.isNode(source.value)) {\n\t\tif (ref) { ref(value); }\n\t\treturn createMountedNode({\n\t\t\t...source,\n\t\t\tnode: value,\n\t\t\tchildren: [],\n\t\t\tcomponent: undefined,\n\t\t});\n\t}\n\tconst type = typeof value;\n\tlet node: NativeNode | undefined;\n\tif (\n\t\ttype === 'bigint'\n\t\t|| type === 'boolean'\n\t\t|| type === 'number'\n\t\t|| type === 'string'\n\t\t|| type === 'symbol'\n\t\t|| value instanceof RegExp\n\t) {\n\t\tnode = iRender.text(String(value));\n\t} else if (value instanceof Date) {\n\t\tnode = iRender.text(value.toISOString());\n\t} else if (type === 'object' && value) {\n\t\tnode = iRender.text(String(value));\n\t\t// TODO: 对象处理\n\t}\n\tif (!node) { node = iRender.placeholder(); }\n\tif (ref) { ref(node); }\n\treturn createMountedNode({\n\t\t...source,\n\t\tnode,\n\t\tcomponent: undefined,\n\t\tchildren: [],\n\t});\n}\n\nfunction createAll(\n\tiRender: IRender,\n\tsource: (TreeNode | TreeNode[])[],\n): (MountedNode | MountedNode[])[] {\n\tif (!source.length) {\n\t\treturn [createMountedNode({\n\t\t\ttag: null,\n\t\t\tnode: iRender.placeholder(),\n\t\t\tcomponent: undefined,\n\t\t\tchildren: [],\n\t\t})];\n\t}\n\n\treturn source.map(item =>\n\t\tArray.isArray(item)\n\t\t\t? createList(iRender, item)\n\t\t\t: createItem(iRender, item)\n\t);\n}\n\nfunction createList(\n\tiRender: IRender,\n\tsource: TreeNode[],\n): MountedNode[] {\n\tif (source.length) {\n\t\treturn source.map(it => createItem(iRender, it));\n\t}\n\treturn [createMountedNode({\n\t\ttag: null,\n\t\tnode: iRender.placeholder(),\n\t\tcomponent: undefined,\n\t\tchildren: [],\n\t})];\n}\n\nfunction createItem(\n\tiRender: IRender,\n\tsource: TreeNode,\n): MountedNode {\n\tconst { tag, ref, component } = source;\n\tif (!tag) {\n\t\tconst node = iRender.placeholder();\n\t\tif (ref) { ref(node); }\n\t\treturn createMountedNode({\n\t\t\ttag: null,\n\t\t\tnode,\n\t\t\tcomponent: undefined,\n\t\t\tchildren: [],\n\t\t});\n\t}\n\tif (typeof tag !== 'string' || tag === Tags.Container) {\n\t\tif (!component) {\n\t\t\t// TODO: ref\n\t\t\treturn createMountedNode({\n\t\t\t\t...source,\n\t\t\t\tnode: undefined,\n\t\t\t\tcomponent: undefined,\n\t\t\t\tchildren: draw(iRender, source.children),\n\t\t\t});\n\t\t}\n\t\tcomponent.mount();\n\t\tif (ref) { ref(component.exposed); }\n\t\treturn createMountedNode({\n\t\t\t...source,\n\t\t\tnode: undefined,\n\t\t\tcomponent, children: [],\n\t\t});\n\t}\n\tif (tag === Tags.Value) {\n\t\treturn createValue(iRender, source);\n\t}\n\tif (tag === Template || tag.substr(0, 5) === 'Neep:') {\n\t\t// TODO: ref\n\t\treturn createMountedNode({\n\t\t\t...source,\n\t\t\tnode: undefined,\n\t\t\tcomponent: undefined,\n\t\t\tchildren: createAll(iRender, source.children),\n\t\t});\n\t}\n\tconst node = iRender.create(tag, source.props || {});\n\tif (ref) { ref(node); }\n\tlet children: (MountedNode | MountedNode[])[] = [];\n\tif (source.children) {\n\t\tchildren = createAll(iRender, source.children);\n\t\tfor (const it of getNodes(children)) {\n\t\t\tiRender.insert(node, it);\n\t\t}\n\t}\n\treturn createMountedNode({\n\t\t...source,\n\t\tnode,\n\t\tcomponent: undefined,\n\t\tchildren,\n\t});\n}\n\nexport default function draw(\n\tiRender: IRender,\n\tsource: (TreeNode | TreeNode[])[],\n\ttree?: (MountedNode | MountedNode[])[],\n): (MountedNode | MountedNode[])[] {\n\tif (tree) {\n\t\treturn updateAll(iRender, source, tree);\n\t}\n\treturn createAll(iRender, source);\n}\n","import { NeepElement, SlotFn, Slots, IRender } from '../type';\nimport { isElement, SlotRender, ScopeSlot } from '../auxiliary';\nimport { isElementSymbol } from '../symbols';\nimport { isProduction } from '../constant';\n\n\nexport function getSlots(\n\tiRender: IRender,\n\tchildren: any[],\n\tslots: Record<string | symbol, any[]>,\n\tnative = false,\n): any[] {\n\t/** 原始对象 */\n\tconst nativeList: any[] = [];\n\tfor (const it of children) {\n\t\tif (Array.isArray(it)) {\n\t\t\tconst list: Record<string | symbol, any[]>\n\t\t\t\t= Object.create(null);\n\t\t\tnativeList.push(getSlots(iRender, it, list, native));\n\t\t\tfor (const k of Reflect.ownKeys(list) as string[]) {\n\t\t\t\tif (k in slots) {\n\t\t\t\t\tslots[k].push(list[k]);\n\t\t\t\t} else {\n\t\t\t\t\tslots[k] = [list[k]];\n\t\t\t\t}\n\t\t\t}\n\t\t\tcontinue;\n\t\t}\n\t\tif (native) {\n\t\t\tif (iRender.isNode(it)) {\n\t\t\t\tnativeList.push(it);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (!isElement(it)) {\n\t\t\t\tnativeList.push(it);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (it.tag !== SlotRender) {\n\t\t\t\tnativeList.push(it);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\t\tconst slot = isElement(it) && it.slot || 'default';\n\t\tconst el = isElement(it) ? {\n\t\t\t...it, slot: undefined,\n\t\t\tprops: {...it.props, slot: undefined },\n\t\t} : it;\n\t\tif (slot in slots) {\n\t\t\tslots[slot].push(el);\n\t\t} else {\n\t\t\tslots[slot] = [el];\n\t\t}\n\t}\n\treturn nativeList;\n}\nfunction renderSlots(\n\tlist: any[],\n\t...props: any\n): any[] {\n\treturn list.map(it => {\n\t\tif (Array.isArray(it)) {\n\t\t\treturn renderSlots(it, ...props);\n\t\t}\n\t\tif (!isElement(it)) { return it; }\n\t\tif (it.tag !== SlotRender) {\n\t\t\treturn {\n\t\t\t\t...it,\n\t\t\t\tslot: undefined,\n\t\t\t} as NeepElement;\n\t\t}\n\t\tif (typeof it.render === 'function') {\n\t\t\treturn it.render(...props);\n\t\t}\n\t\treturn it.children;\n\t});\n}\nfunction createSlots(\n\tname: string,\n\tlist: any[],\n): SlotFn {\n\tconst slot = (...props: any) => ({\n\t\t[isElementSymbol]: true,\n\t\ttag: ScopeSlot,\n\t\tchildren: renderSlots(list, ...props),\n\t\tinserted: true,\n\t\tlabel: isProduction ? undefined : [`[${name}]`, '#00F'],\n\t} as NeepElement);\n\tslot.children = list;\n\treturn slot;\n}\nexport function setSlots(\n\tchildren: {[key: string]: any[]},\n\tslots: Slots = Object.create(null),\n) {\n\tfor (const k of Reflect.ownKeys(slots)) {\n\t\tif (!(k in children)) {\n\t\t\tdelete slots[k as string];\n\t\t}\n\t}\n\tfor (const k of Reflect.ownKeys(children) as string[]) {\n\t\tslots[k] = createSlots(k, children[k]);\n\t}\n\treturn slots;\n}\n","import { isValue } from '../auxiliary';\n\nexport function updateProps(\n\tobj: any,\n\tprops: any,\n\toldProps: any = {},\n\tdefine = false,\n) {\n\tconst newKeys = new Set(Reflect.ownKeys(props));\n\tfor (const k of Reflect.ownKeys(obj)) {\n\t\tif (!newKeys.has(k)) {\n\t\t\tdelete obj[k];\n\t\t}\n\t}\n\tif (!define) {\n\t\tfor (const k of newKeys) {\n\t\t\tobj[k] = props[k];\n\t\t}\n\t\treturn obj;\n\t}\n\tfor (const k of newKeys) {\n\t\tconst value = props[k];\n\t\tif (k in oldProps && oldProps[k] === value) {\n\t\t\tcontinue;\n\t\t}\n\t\tif (isValue(value)) {\n\t\t\tReflect.defineProperty(obj, k, {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tget() { return value(); },\n\t\t\t\tset(v) { value(v); }\n\t\t\t});\n\t\t\tcontinue;\n\t\t}\n\t\tReflect.defineProperty(obj, k, {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: true,\n\t\t\tvalue,\n\t\t});\n\t}\n\treturn obj;\n}","import {\n\tNeepElement, Exposed, Delivered,\n\tRender, NeepNode, Slots, Context, IRender, Component,\n} from '../type';\nimport { typeSymbol } from '../symbols';\nimport { isProduction } from '../constant';\nimport auxiliary, { isElement, Tags } from '../auxiliary';\nimport { renderSymbol, isElementSymbol } from '../symbols';\nimport { getLabel } from '../helper/label';\nimport Container from './Container';\nimport Entity from './Entity';\nimport { getSlots, setSlots } from './slot';\nimport { initContext } from '../helper/context';\nimport { updateProps } from './props';\n\nfunction execSimple(\n\tnObject: Container | Entity,\n\tdelivered: Delivered,\n\tnode: NeepElement,\n\ttag: Component,\n\tchildren: any[],\n) {\n\tconst { iRender } = nObject.container;\n\tconst slotMap = Object.create(null);\n\tgetSlots(iRender, children, slotMap);\n\tconst slots = setSlots(slotMap);\n\tconst context: Context = initContext({\n\t\tslots,\n\t\tcreated: false,\n\t\tparent: nObject.exposed,\n\t\tdelivered,\n\t\tchildren: new Set<Exposed>(),\n\t\tchildNodes: children,\n\t\trefresh(f) { nObject.refresh(f); }\n\t});\n\tif (!isProduction) { getLabel(); }\n\tconst result = tag({...node.props}, context, auxiliary);\n\tlet label: [string, string] | undefined;\n\tif (!isProduction) { label = getLabel(); }\n\tconst nodes = exec(nObject, delivered, renderNode(\n\t\tiRender,\n\t\tresult,\n\t\tcontext,\n\t\ttag[renderSymbol],\n\t), slots);\n\n\treturn {\n\t\t...node,\n\t\tchildren: Array.isArray(nodes) ? nodes : [nodes],\n\t\tlabel,\n\t} as NeepElement;\n}\n\nfunction execSlot(\n\tnode: NeepElement,\n\tslots: Slots,\n\tchildren: any[],\n\targs: any[] = [{}],\n): NeepElement {\n\tconst slotName = node.props?.name || 'default';\n\tconst slot = slots[slotName];\n\tif (typeof slot === 'function') {\n\t\treturn {\n\t\t\t...node,\n\t\t\t...slot(...args),\n\t\t};\n\t}\n\tconst { render } = node;\n\tconst label: [string, string] | undefined = isProduction\n\t\t? undefined\n\t\t: [`[${ slotName }]`, '#00F'];\n\treturn {\n\t\t...node,\n\t\ttag: Tags.ScopeSlot,\n\t\tlabel,\n\t\tchildren:\n\t\t\ttypeof render !== 'function' ? children : render(...args),\n\t};\n}\n\nfunction exec(\n\tnObject: Container | Entity,\n\tdelivered: Delivered,\n\tnode: any,\n\tslots: Slots,\n\tnative = false,\n): any {\n\tif (Array.isArray(node)) {\n\t\treturn node.map(n =>\n\t\t\texec(nObject, delivered, n, slots, native)\n\t\t);\n\t}\n\tif (!isElement(node)) { return node; }\n\tlet { tag, inserted, args = [{}] } = node;\n\tif (tag === Tags.Deliver) {\n\t\tconst props = { ...node.props };\n\t\tdelete props.ref;\n\t\tdelete props.slot;\n\t\tdelete props.key;\n\t\tconst newDelivered = Object.create(delivered);\n\t\tupdateProps(newDelivered, props || {}, {}, true);\n\t\treturn {\n\t\t\t...node,\n\t\t\ttag,\n\t\t\t$__neep__delivered: newDelivered,\n\t\t\tchildren: node.children.map(n => exec(\n\t\t\t\tnObject,\n\t\t\t\tnewDelivered,\n\t\t\t\tn,\n\t\t\t\tslots,\n\t\t\t\tnative,\n\t\t\t)),\n\t\t};\n\t}\n\n\tconst children = node.children\n\t\t.map(n => exec(nObject, delivered, n, slots, native));\n\n\tif (typeof tag === 'function') {\n\t\tif (tag[typeSymbol] === 'simple') {\n\t\t\treturn execSimple(nObject, delivered, node, tag, children);\n\t\t}\n\t\treturn { ...node, $__neep__delivered: delivered, children, tag };\n\n\t}\n\tif (tag === Tags.Slot) {\n\t\ttag = native ? 'slot' : Tags.ScopeSlot;\n\t}\n\tif (tag !== Tags.ScopeSlot || inserted) {\n\t\treturn { ...node, children, tag };\n\t}\n\treturn execSlot(node, slots, children, args);\n}\n\n\n\nfunction renderNode<R extends object = object>(\n\tiRender: IRender,\n\tnode: R | NeepNode | NeepNode[] | undefined | null,\n\tcontext: Context,\n\trender?: Render,\n): NeepNode[] {\n\tif (Array.isArray(node)) { return node; }\n\tif (isElement(node)) { return [node]; }\n\tif (node === undefined || node === null) {\n\t\treturn [{ [isElementSymbol]: true, tag: null, children: [] }];\n\t}\n\tif (!iRender.isNode(node) && typeof node === 'object' && render) {\n\t\tnode = render(node, context, auxiliary);\n\t}\n\tif (isElement(node)) { return [node]; }\n\tif (node === undefined || node === null) {\n\t\treturn [{ [isElementSymbol]: true, tag: null, children: [] }];\n\t}\n\treturn [{\n\t\t[isElementSymbol]: true,\n\t\ttag: Tags.Value,\n\t\tvalue: node,\n\t\tchildren: [],\n\t}];\n}\n\n\nexport default function normalize(\n\tnObject: Entity,\n\tresult: any,\n) {\n\treturn exec(\n\t\tnObject,\n\t\tnObject.delivered,\n\t\trenderNode(\n\t\t\tnObject.iRender,\n\t\t\tresult,\n\t\t\tnObject.context,\n\t\t\tnObject.component[renderSymbol],\n\t\t),\n\t\tnObject.context.slots,\n\t\tBoolean(nObject.native),\n\t);\n}\n","import {\n\tExposed, Delivered,\n\tEntity as ComponentEntity,\n\tNativeComponent,\n\tHook, Hooks, NeepNode, IRender,\n} from '../type';\nimport { callHook, setHook } from '../hook';\nimport { MountedNode } from './draw';\nimport Container from './Container';\nimport convert, { TreeNode } from './convert';\n\nfunction createExposed(obj: NeepObject): Exposed {\n\tconst cfg: { [K in Exclude<keyof Exposed, '$label'>]-?:\n\t\t{ configurable: true, value: Exposed[K] }\n\t\t| { configurable: true, get(): Exposed[K] }\n\t} = {\n\t\t$parent: { configurable: true, get: () => obj.parent?.exposed },\n\t\t$component: { configurable: true, value: null },\n\t\t$isContainer: { configurable: true, value: false },\n\t\t$created: { configurable: true, get: () => obj.created },\n\t\t$destroyed: { configurable: true, get: () => obj.destroyed },\n\t\t$mounted: { configurable: true, get: () => obj.mounted },\n\t\t$unmounted: { configurable: true, get: () => obj.unmounted },\n\t};\n\tconst exposed: Exposed = Object.create(null, cfg);\n\treturn exposed;\n}\n\nfunction createEntity(obj: NeepObject): ComponentEntity {\n\tconst cfg: { [K in keyof ComponentEntity]-?:\n\t\t{ configurable: true, value: ComponentEntity[K], writable?: boolean }\n\t\t| { configurable: true, get(): ComponentEntity[K] }\n\t} = {\n\t\texposed: { configurable: true, get: () => obj.exposed },\n\t\tdelivered: { configurable: true, get: () => obj.delivered },\n\t\tparent: { configurable: true, get: () => obj.parent?.entity },\n\t\tcomponent: { configurable: true, value: null },\n\t\tisContainer: { configurable: true, value: false },\n\t\tcreated: { configurable: true, get: () => obj.created },\n\t\tdestroyed: { configurable: true, get: () => obj.destroyed },\n\t\tmounted: { configurable: true, get: () => obj.mounted },\n\t\tunmounted: { configurable: true, get: () => obj.unmounted },\n\t\t$_hooks: { configurable: true, value: Object.create(null) },\n\t\t$_valueIndex: { configurable: true, value: 0, writable: true },\n\t\t$_values: { configurable: true, value: [] },\n\t\tcallHook: {\n\t\t\tconfigurable: true,\n\t\t\tvalue(h: string) { callHook(h, entity); },\n\t\t},\n\t\tsetHook: {\n\t\t\tconfigurable: true,\n\t\t\tvalue(id: string, hook: Hook) {\n\t\t\t\treturn setHook(id, hook, entity);\n\t\t\t},\n\t\t},\n\t\trefresh: {\n\t\t\tconfigurable: true,\n\t\t\tvalue(f?:() => void) { obj.refresh(f); },\n\t\t},\n\t};\n\tconst entity: ComponentEntity = Object.create(null, cfg);\n\treturn entity;\n}\n\nexport default class NeepObject {\n\treadonly iRender: IRender;\n\t/** TODO: 向后代呈递的值 */\n\treadonly parentDelivered: Delivered;\n\t/** TODO: 向后代呈递的值 */\n\treadonly delivered: Delivered;\n\t/** 组件暴露值 */\n\treadonly exposed: Exposed = createExposed(this);\n\t/** 组件实体 */\n\treadonly entity: ComponentEntity = createEntity(this);\n\t/** 父组件 */\n\tparent?: NeepObject;\n\t/** 原生组件 */\n\tnative: NativeComponent | null = null;\n\t/** 状态 */\n\tcreated: boolean = false;\n\tdestroyed: boolean = false;\n\tmounted: boolean = false;\n\tunmounted: boolean = false;\n\t/**  子组件的暴露值 */\n\treadonly children: Set<Exposed> = new Set();\n\t/** The subtree mounted on the parent node */\n\ttree: (MountedNode | MountedNode[])[] = [];\n\treadonly container: Container;\n\tconstructor(\n\t\tiRender: IRender,\n\t\tparent?: NeepObject,\n\t\tdelivered: Delivered = parent?.delivered || Object.create(null),\n\t\tcontainer?: Container,\n\t) {\n\t\tthis.iRender = iRender;\n\t\tthis.parentDelivered = delivered;\n\t\tthis.delivered = Object.create(delivered);\n\t\tif (parent) {\n\t\t\tthis.parent = parent;\n\t\t}\n\t\tthis.container = container || this as any as Container;\n\t}\n\t/** 结果渲染函数 */\n\tprotected _render: () => NeepNode[] = () => [];\n\n\tget canRefresh(): boolean {\n\t\treturn !this._delayedRefresh;\n\t}\n\tprotected get needRefresh(): boolean {\n\t\tif (this._delayedRefresh) { return false; }\n\t\tconst needRefresh = this._needRefresh;\n\t\tthis._needRefresh = false;\n\t\treturn needRefresh;\n\t}\n\t/** 是否需要继续刷新 */\n\tprotected _needRefresh = false;\n\tprivate _delayedRefresh = 0;\n\t/** 是否为刷新中 */\n\tprivate _refreshing = false;\n\t/** 渲染结果 */\n\tprotected _nodes: (TreeNode | TreeNode[])[] = [];\n\tprotected _refresh() { }\n\trefresh(f?: () => void) {\n\t\tif (typeof f === 'function') {\n\t\t\ttry {\n\t\t\t\tthis._delayedRefresh++;\n\t\t\t\tf();\n\t\t\t} finally {\n\t\t\t\tthis._delayedRefresh--;\n\t\t\t\tif (this._delayedRefresh <= 0) {\n\t\t\t\t\tthis.refresh();\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t\tif (this.destroyed) { return; }\n\t\tif (!this.created) { return; }\n\t\tthis._needRefresh = true;\n\n\t\tif (this._refreshing) { return; }\n\t\tthis._refreshing = true;\n\n\t\tlet nodes: NeepNode[] | undefined;\n\t\twhile(this.needRefresh) {\n\t\t\tnodes = this._render();\n\t\t\tif (this.destroyed) { return; }\n\t\t}\n\t\tthis._refreshing = false;\n\t\tif (!this.canRefresh) { return; }\n\t\tif (!nodes) { return; }\n\n\t\tthis._nodes = convert(this, nodes, this._nodes);\n\t\tif (!this.mounted) { return; }\n\t\tif (this.destroyed) { return; }\n\t\tif (this.unmounted) { return; }\n\t\tthis._refresh();\n\t}\n\tcallHook<H extends Hooks>(id: H): void;\n\tcallHook(id: string): void;\n\tcallHook(id: string): void {\n\t\tcallHook(id, this.entity);\n\t}\n\n\tchildNodes: any[] = [];\n\t/** 更新属性及子代 */\n\tprotected _update(props: object, children: any[]): void {\n\t\tthis.childNodes = children;\n\t}\n\t/** 更新属性及子代 */\n\tupdate(props: object, children: any[]): void {\n\t\tthis._update(props, children);\n\t}\n\n\n\tprivate __executed_destroy = false;\n\tprivate __executed_mount = false;\n\tprivate __executed_mounted = false;\n\tprotected _destroy() { }\n\tdestroy() {\n\t\tif (this.__executed_destroy) { return; }\n\t\tthis.__executed_destroy = true;\n\t\tthis.callHook('beforeDestroy');\n\t\tthis._destroy();\n\t\tthis.callHook('destroyed');\n\t\tthis.destroyed = true;\n\t}\n\tprotected _mount() { }\n\tmount() {\n\t\tif (this.__executed_destroy) { return; }\n\t\tif (this.__executed_mount) { return; }\n\t\tthis.__executed_mount = true;\n\t\tthis.callHook('beforeMount');\n\t\tthis._mount();\n\t\tthis.callHook('mounted');\n\t\tthis.mounted = true;\n\t}\n\tprotected _unmount() { }\n\tunmount() {\n\t\tif (!this.mounted) { return; }\n\t\tif (this.__executed_mounted) { return; }\n\t\tthis.__executed_mounted = true;\n\t\tthis.callHook('beforeUnmount');\n\t\tthis._unmount();\n\t\tthis.callHook('unmounted');\n\t\tthis.unmounted = true;\n\t}\n\t_draw() {}\n\tdraw() {\n\t\tif (this.__executed_destroy) { return; }\n\t\tthis.callHook('beforeUpdate');\n\t\tthis._draw();\n\t\tthis.callHook('updated');\n\t}\n}\n","import { Component, NeepNode, Slots, Context, Delivered } from '../type';\nimport auxiliary from '../auxiliary';\nimport { monitorable } from '../install';\nimport { setCurrent } from '../helper/current';\nimport convert, { destroy, TreeNode } from './convert';\nimport draw, { unmount, MountedNode } from './draw';\nimport normalize from './normalize';\nimport { getSlots, setSlots } from './slot';\nimport NeepObject from './Object';\nimport { initContext } from '../helper/context';\nimport { updateProps } from './props';\n\nfunction update(\n\tnObject: Entity<any, any>,\n\tprops: any,\n\tchildren:any[],\n) {\n\tupdateProps(nObject.props, props);\n\n\tconst slots = Object.create(null);\n\tconst {\n\t\tnative,\n\t\tcontainer: { iRender },\n\t} = nObject;\n\tconst childNodes = getSlots(\n\t\tiRender,\n\t\tchildren,\n\t\tslots,\n\t\tBoolean(native),\n\t);\n\tsetSlots(slots, nObject.slots);\n\tif (!native) { return; }\n\tnObject.nativeNodes\n\t\t= convert(nObject, childNodes, nObject.nativeNodes);\n}\n\nfunction createContext<\n\tP extends object = object,\n\tR extends object = object\n>(nObject: Entity<P, R>): Context {\n\treturn initContext({\n\t\tslots: nObject.slots,\n\t\tget created() { return nObject.created; },\n\t\tget parent() { return nObject.parent.exposed; },\n\t\tget delivered() { return nObject.parentDelivered; },\n\t\tget children() { return nObject.children; },\n\t\tget childNodes() { return nObject.childNodes; },\n\t\trefresh(f) { nObject.refresh(f); }\n\t}, nObject.exposed);\n}\n\n/** 初始化渲染 */\nfunction initRender<R extends object = object>(\n\tnObject: Entity<any, R>\n): { render(): any, nodes: any, stopRender(): void } {\n\tconst {\n\t\tcomponent,\n\t\tprops,\n\t\tcontext,\n\t\tentity,\n\t} = nObject;\n\tconst refresh = (changed: boolean) => changed && nObject.refresh()\n\t// 初始化执行\n\tconst result = monitorable.exec(() => setCurrent(\n\t\t() => component(props, context, auxiliary),\n\t\tentity,\n\t), refresh, true);\n\tif (typeof result === 'function') {\n\t\t// 响应式\n\t\tconst render = monitorable.createExecutable(\n\t\t\t() => normalize(nObject, (result as () => NeepNode)()),\n\t\t\trefresh,\n\t\t);\n\t\treturn {\n\t\t\tnodes: render(),\n\t\t\trender,\n\t\t\tstopRender: () => render.stop(),\n\t\t};\n\t}\n\n\tconst render = monitorable.createExecutable(\n\t\t() => normalize(nObject, setCurrent(\n\t\t\t() => component(props, context, auxiliary),\n\t\t\tentity,\n\t\t)),\n\t\trefresh,\n\t);\n\treturn {\n\t\tnodes: monitorable.exec(\n\t\t\t() => normalize(nObject, result), refresh, true,\n\t\t),\n\t\trender,\n\t\tstopRender: () => render.stop(),\n\t};\n}\n\n\nexport default class Entity<\n\tP extends object = object,\n\tR extends object = object\n> extends NeepObject {\n\t/** 组件函数 */\n\treadonly component: Component<P, R>;\n\t/** 组件属性 */\n\treadonly props: P = monitorable.encase(Object.create(null));\n\t/** 组件槽 */\n\treadonly slots: Slots = monitorable.encase(Object.create(null));\n\t/** 结果渲染函数 */\n\tprivate readonly _stopRender:() => void;\n\t/** 原生子代 */\n\tnativeNodes: (TreeNode | TreeNode[])[] | undefined;\n\tnativeTree: (MountedNode | MountedNode[])[] = [];\n\t/** 组件上下文 */\n\treadonly context: Context;\n\treadonly parent: NeepObject;\n\t/** 结果渲染函数 */\n\tconstructor(\n\t\tcomponent: Component<P, R>,\n\t\tprops: object,\n\t\tchildren: any[],\n\t\tparent: NeepObject,\n\t\tdelivered?: Delivered,\n\t) {\n\t\tsuper(parent.iRender, parent, delivered, parent.container);\n\t\tthis.component = component;\n\t\tReflect.defineProperty(\n\t\t\tthis.exposed,\n\t\t\t'$component',\n\t\t\t{ value: component, enumerable: true, configurable: true },\n\t\t);\n\t\t// // 原生组件\n\t\t// const native = nativeRender.component\n\t\t// \t&& component[typeSymbol] === 'native' && false;\n\t\t// // 原生组件\n\t\t// const nativeComponent = native\n\t\t// \t? nativeRender.component!()\n\t\t// \t: null;\n\t\t// this.native = nativeComponent;\n\t\t// 父子关系\n\t\tthis.parent = parent;\n\t\tparent.children.add(this.exposed);\n\t\t// 上下文属性\n\t\tconst context = createContext(this);\n\t\tthis.context = context;\n\t\t// 初始化钩子\n\t\tthis.callHook('beforeCreate');\n\t\t// 更新属性\n\t\tthis.childNodes = children;\n\t\tupdate(this, props, children);\n\t\t// 获取渲染函数及初始渲染\n\t\tconst { render, nodes, stopRender } = initRender(this);\n\t\tthis._render = render;\n\t\tthis._stopRender = stopRender;\n\t\tthis._nodes = convert(this, nodes);\n\t\t// 初始化钩子\n\t\tthis.callHook('created');\n\t\tthis.created = true;\n\t\tif (this._needRefresh) { this.refresh(); }\n\t}\n\t/** 更新属性及子代 */\n\t_update(props: object, children: any[]): void {\n\t\tif (this.destroyed) { return; }\n\t\tthis.childNodes = children;\n\t\tupdate(this, props, children);\n\t}\n\t_destroy() {\n\t\tif (this._stopRender) {\n\t\t\tthis._stopRender();\n\t\t}\n\t\tthis.parent.children.delete(this.exposed);\n\t\tdestroy(this._nodes);\n\t}\n\n\t/** 刷新 */\n\t_refresh() {\n\t\tthis.container.markDraw(this);\n\t}\n\t_draw() {\n\t\tthis.tree = draw(\n\t\t\tthis.container.iRender,\n\t\t\tthis._nodes,\n\t\t\tthis.tree,\n\t\t);\n\t\tconst {native} = this;\n\t\tif (native) {\n\t\t\t// const shadow = this.container.iRender.shadow!(native);\n\t\t\t// TODO: 更新 childNodes\n\t\t}\n\t}\n\t_mount() {\n\t\tthis.tree = draw(this.container.iRender, this._nodes);\n\t}\n\t_unmount() {\n\t\tunmount(this.container.iRender, this.tree);\n\t}\n}\n","import { getRender } from '../install';\nimport { NeepNode, NeepElement, Tag } from '../type';\nimport { Tags, isElement, Value, Template } from '../auxiliary';\nimport { isElementSymbol, typeSymbol } from '../symbols';\nimport { recursive2iterable } from './recursive';\nimport Entity from './Entity';\nimport NeepObject from './Object';\nimport Container from './Container';\nimport { updateProps } from './props';\n\nexport interface TreeNode\n\textends Omit<\n\t\tNeepElement,\n\t\t'children' | 'tag' | typeof isElementSymbol\n\t>\n{\n\t/** 标签名 */\n\ttag: Tag;\n\tchildren: (this | this[])[];\n\tmounted?: boolean;\n\tcomponent?: NeepObject;\n}\n/** 强制转换为 NeepElement */\nfunction toElement(t: any): null | NeepElement {\n\tif (t === false || t === null || t === undefined) {\n\t\treturn null;\n\t}\n\tif (isElement(t)) {\n\t\treturn t;\n\t}\n\treturn {\n\t\t[isElementSymbol]: true,\n\t\ttag: Value,\n\t\tkey: t,\n\t\tvalue: t,\n\t\tchildren: [],\n\t};\n}\n\nexport function destroy(\n\ttree: TreeNode | TreeNode[] | (TreeNode | TreeNode[])[]\n) {\n\tif (Array.isArray(tree)) {\n\t\ttree.forEach(t => destroy(t));\n\t\treturn;\n\t}\n\tconst { component } = tree;\n\tif (component) { component.destroy(); }\n}\n\nfunction createItem(\n\tnObject: NeepObject,\n\tsource: NeepNode,\n): TreeNode {\n\tif (!source) { return { tag: null, children: [] }; }\n\tconst { tag } = source;\n\tif (!tag) { return { tag: null, children: [] }; }\n\tif (typeof tag !== 'string') {\n\t\tif (tag[typeSymbol] === 'simple') {\n\t\t\treturn {\n\t\t\t\t...source,\n\t\t\t\tchildren: convert(nObject, source.children),\n\t\t\t\tcomponent: undefined,\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t...source, children: [],\n\t\t\tcomponent: new Entity(\n\t\t\t\ttag,\n\t\t\t\tsource.props || {},\n\t\t\t\tsource.children,\n\t\t\t\tnObject,\n\t\t\t\tsource.$__neep__delivered,\n\t\t\t),\n\t\t};\n\t}\n\tif (tag === Tags.Container) {\n\t\tconst type = source?.props?.type;\n\t\tconst iRender = type ? getRender(type) : nObject.iRender;\n\t\treturn {\n\t\t\t...source, children: [],\n\t\t\tcomponent: new Container(\n\t\t\t\tiRender,\n\t\t\t\tsource.props || {},\n\t\t\t\tsource.children,\n\t\t\t\tnObject,\n\t\t\t\tsource.$__neep__delivered,\n\t\t\t),\n\t\t};\n\t}\n\tif (tag === Tags.Value) {\n\t\treturn { ...source, children: [] };\n\t}\n\tif (tag === Template || tag.substr(0, 5) === 'Neep:') {\n\t\treturn {\n\t\t\t...source,\n\t\t\tchildren: convert(nObject, source.children),\n\t\t};\n\t}\n\treturn {...source, children: convert(nObject, source.children) };\n}\n\n/**\n * 更新树节点\n * @param nObject Neep 对象\n * @param source 用于替换的源\n * @param tree 已有树\n */\nfunction updateList(\n\tnObject: NeepObject,\n\tsource: any[],\n\ttree: TreeNode | TreeNode[],\n): TreeNode[] {\n\tif (!Array.isArray(tree)) { tree = [tree]; }\n\tconst newList: TreeNode[] = [];\n\tfor (const src of recursive2iterable(source)) {\n\t\tconst node = toElement(src);\n\t\tif (!node) { continue; }\n\t\tconst index = tree.findIndex(it =>\n\t\t\tit.tag === node.tag && it.key === node.key\n\t\t);\n\t\tif (index >= 0) {\n\t\t\tnewList.push(updateItem(nObject, node, tree[index]));\n\t\t\ttree.splice(index, 1);\n\t\t} else {\n\t\t\tnewList.push(createItem(nObject, node));\n\t\t}\n\t}\n\tdestroy(tree);\n\treturn newList;\n}\n\n/**\n * 更新树节点\n * @param tree 已有树\n * @param source 用于替换的源\n * @param nObject Neep 对象\n */\nfunction updateItem(\n\tnObject: NeepObject,\n\tsource: NeepNode,\n\ttree?: TreeNode | TreeNode[],\n): TreeNode {\n\tif (!tree) {\n\t\treturn createItem(nObject, source);\n\t}\n\tif (!source) {\n\t\tdestroy(tree);\n\t\treturn { tag: null, children: [] };\n\t}\n\tif (Array.isArray(tree)) {\n\t\tif (!tree.length) { return createItem(nObject, source); }\n\t\tconst index = tree.findIndex(it => it.tag === source.tag);\n\t\tif (index < 0) {\n\t\t\tdestroy(tree);\n\t\t\treturn createItem(nObject, source);\n\t\t}\n\t\tconst all = tree;\n\t\t[tree] = tree.splice(index, 1);\n\t\tdestroy(all);\n\t}\n\tconst { tag } = source;\n\tif (tag !== tree.tag) {\n\t\tdestroy(tree);\n\t\treturn createItem(nObject, source);\n\t}\n\tif (!tag) { return { tag: null, children: [] }; }\n\tif (typeof tag !== 'string') {\n\t\tif (tag[typeSymbol] === 'simple') {\n\t\t\treturn {\n\t\t\t\t...source,\n\t\t\t\tchildren: convert(\n\t\t\t\t\tnObject,\n\t\t\t\t\tsource.children,\n\t\t\t\t\ttree.children,\n\t\t\t\t),\n\t\t\t\tcomponent: undefined,\n\t\t\t};\n\t\t}\n\t\tconst { component } = tree;\n\t\tif (!component) { return createItem(nObject, source); }\n\t\tcomponent!.update(source.props || {}, source.children);\n\t\treturn { ...source, children: [], component };\n\t}\n\tif (tag === Tags.Container) {\n\t\tconst { component } = tree;\n\t\tif (!component) { return createItem(nObject, source); }\n\t\tconst type = source?.props?.type;\n\t\tconst iRender = type ? getRender(type) : nObject.iRender;\n\t\tif (iRender !== component.iRender) {\n\t\t\treturn createItem(nObject, source);\n\t\t}\n\t\tcomponent!.update(source.props || {}, source.children);\n\t\treturn { ...source, children: [], component };\n\t}\n\tif (tag === Tags.Value) {\n\t\treturn { ...source, children: [] };\n\t}\n\tif (tag === Template || tag.substr(0, 5) === 'Neep:') {\n\t\tlet delivered: any;\n\t\tif (Tags.Deliver === tag) {\n\t\t\tconst props = { ...source.props };\n\t\t\tdelete props.ref;\n\t\t\tdelete props.slot;\n\t\t\tdelete props.key;\n\t\t\tdelivered = updateProps(\n\t\t\t\ttree.$__neep__delivered,\n\t\t\t\tprops,\n\t\t\t\ttree.props,\n\t\t\t\ttrue,\n\t\t\t);\n\t\t}\n\t\treturn {\n\t\t\t...source,\n\t\t\t$__neep__delivered: delivered,\n\t\t\tchildren: convert(\n\t\t\t\tnObject,\n\t\t\t\tsource.children,\n\t\t\t\ttree.children,\n\t\t\t),\n\t\t};\n\t}\n\treturn {\n\t\t...source,\n\t\tchildren: convert(nObject, source.children, tree.children),\n\t};\n}\n\n\nfunction createAll(\n\tnObject: NeepObject,\n\tsource: any[],\n): (TreeNode | TreeNode[])[] {\n\tif (!source.length) { return []; }\n\treturn (source as any[]).map(item => {\n\t\tif (!Array.isArray(item)) {\n\t\t\treturn createItem(nObject, toElement(item));\n\t\t}\n\t\treturn [...recursive2iterable(item)]\n\t\t\t.map(it => createItem(nObject, toElement(it)));\n\t});\n}\nfunction *updateAll(\n\tnObject: NeepObject,\n\tsource: any[],\n\ttree: (TreeNode | TreeNode[])[],\n): Iterable<TreeNode | TreeNode[]> {\n\tlet index = 0;\n\tlet length = Math.min(source.length, source.length);\n\tfor (; index < length; index++) {\n\t\tconst src = source[index];\n\t\tif (Array.isArray(src)) {\n\t\t\tyield updateList(nObject, src, tree[index]);\n\t\t} else {\n\t\t\tyield updateItem(nObject, toElement(src), tree[index]);\n\t\t}\n\t}\n\tlength = Math.max(source.length, source.length);\n\tif (tree.length > length) {\n\t\t\t// 销毁多余项\n\t\t\tfor (; index < length; index++) {\n\t\t\t\tdestroy(tree[index]);\n\t\t\t}\n\t}\n\tif (source.length > length) {\n\t\t// 创建多余项\n\t\tfor (; index < length; index++) {\n\t\t\tconst src = source[index];\n\t\t\tif (Array.isArray(src)) {\n\t\t\t\tyield [...recursive2iterable(src)]\n\t\t\t\t\t.map(it => createItem(nObject, it));\n\t\t\t} else {\n\t\t\t\tyield createItem(nObject, src);\n\t\t\t}\n\t\t}\n\t}\n}\n\n\n/**\n * 更新树\n * @param source 用于替换的源\n * @param nObject Neep 对象\n * @param tree 已有树\n */\nfunction convert(\n\tnObject: NeepObject,\n\tsource: any,\n\ttree?: (TreeNode | TreeNode[])[],\n): (TreeNode | TreeNode[])[] {\n\tif (!Array.isArray(source)) { source = []; }\n\tif (!tree) {\n\t\treturn createAll(nObject, source);\n\t}\n\treturn [...updateAll(nObject, source, tree)];\n}\n\n\nexport default convert;\n","import {\n\tIRender,\n\tMountProps,\n\tNativeNode,\n\tNativeContainer,\n\tDelivered,\n} from '../type';\nimport { Tags } from '../auxiliary';\nimport { createMountedNode } from './id';\nimport convert, { destroy } from './convert';\nimport draw, { unmount, getNodes, MountedNode } from './draw';\nimport NeepObject from './Object';\n\n\nlet awaitDraw = new Set<Container>();\nlet requested = false;\nfunction markDraw(c: Container) {\n\tawaitDraw.add(c);\n\tif (requested) { return; }\n\trequested = true;\n\twindow.requestAnimationFrame(() => {\n\t\trequested = false;\n\t\tconst list = [...awaitDraw];\n\t\tawaitDraw.clear();\n\t\tlist.map(c => c.drawAll());\n\t});\n}\n\nexport default class Container extends NeepObject {\n\tprops: MountProps;\n\t/** 组件树结构 */\n\tcontent: (MountedNode | MountedNode[])[] = [];\n\t_node: NativeNode | null = null;\n\t_container: NativeContainer | null = null;\n\treadonly rootContainer: Container = this;\n\tconstructor(\n\t\tiRender: IRender,\n\t\tprops: MountProps,\n\t\tchildren: any[],\n\t\tparent?: NeepObject,\n\t\tdelivered?: Delivered,\n\t) {\n\t\tsuper(iRender, parent, delivered);\n\t\tthis.props = props;\n\t\tthis.parent = parent;\n\t\tif (parent) {\n\t\t\tthis.rootContainer = parent.container.rootContainer;\n\t\t}\n\t\tthis.callHook('beforeCreate');\n\t\tthis._render = () => children;\n\t\tthis._nodes = convert(this, children);\n\t\tthis.callHook('created');\n\t\tthis.created = true;\n\t}\n\t_drawChildren = false;\n\t_drawContainer = false;\n\tsetChildren(children: any[]): void {\n\t\tif (this.destroyed) { return; }\n\t\tthis.childNodes = children;\n\t\tthis._render = () => children;\n\t\tthis._drawChildren = true;\n\t\tthis.refresh();\n\t}\n\tsetProps(props: MountProps): void {\n\t\tif (this.destroyed) { return; }\n\t\tthis.props = props;\n\t\tthis._drawContainer = true;\n\t\tthis.refresh();\n\t}\n\t/** 更新属性及子代 */\n\tupdate(props: MountProps, children: any[]): void {\n\t\tthis.refresh(() => {\n\t\t\tthis.setProps(props);\n\t\t\tthis.setChildren(children);\n\t\t});\n\t}\n\t_refresh() {\n\t\tthis.markDraw(this);\n\t}\n\t_mount() {\n\t\tconst { props, parent, iRender } = this;\n\t\tconst content = draw(this.container.iRender, this._nodes);\n\t\tthis.content = content;\n\t\tconst [container, node]\n\t\t\t= iRender.mount(props, parent?.iRender);\n\t\tfor (const it of getNodes(content)) {\n\t\t\tiRender.insert(container, it);\n\t\t}\n\t\tthis.tree = [createMountedNode({\n\t\t\ttag: Tags.Value,\n\t\t\tcomponent: undefined,\n\t\t\tnode,\n\t\t\tvalue: node,\n\t\t\tchildren: [],\n\t\t})];\n\t\tthis._node = node;\n\t\tthis._container = container;\n\t}\n\t_destroy() {\n\t\tdestroy(this.content);\n\t}\n\t_unmount() {\n\t\tconst { parent, iRender } = this;\n\t\tif (parent) {\n\t\t\tunmount(parent.iRender, this.tree);\n\t\t}\n\t\tiRender.unmount(\n\t\t\tthis._container!,\n\t\t\tthis._node!,\n\t\t\tBoolean(parent),\n\t\t);\n\t\tunmount(this.iRender, this.content);\n\t}\n\t_draw() {\n\t}\n\tdrawSelf() {\n\t\tif (!this.mounted) { return; }\n\t\tif (this.destroyed) { return; }\n\t\tconst {\n\t\t\t_drawChildren: drawChildren,\n\t\t\t_drawContainer: drawContainer,\n\t\t} = this;\n\t\tthis._needDraw = false;\n\t\tthis._drawChildren = false;\n\t\tthis._drawContainer = false;\n\t\tthis.callHook('beforeUpdate');\n\t\tif (drawContainer) {\n\t\t\tthis.iRender.drawContainer(\n\t\t\t\tthis._container!,\n\t\t\t\tthis._node!,\n\t\t\t\tthis.props,\n\t\t\t\tthis.parent?.iRender,\n\t\t\t);\n\t\t}\n\t\tif (drawChildren) {\n\t\t\tthis.content = draw(\n\t\t\t\tthis.iRender,\n\t\t\t\tthis._nodes,\n\t\t\t\tthis.content,\n\t\t\t);\n\t\t}\n\t\tthis.callHook('updated');\n\t}\n\t/** 等待重画的项目 */\n\tprivate _awaitDraw = new Set<NeepObject>();\n\t/** 自身是否需要重绘 */\n\tprivate _needDraw = false;\n\t/** 标记需要绘制的元素 */\n\tmarkDraw(\n\t\tnObject: NeepObject,\n\t\tremove = false,\n\t) {\n\t\tif (nObject === this) {\n\t\t\tthis._needDraw = !remove;\n\t\t} else if (remove) {\n\t\t\tthis._awaitDraw.delete(nObject);\n\t\t} else {\n\t\t\tthis._awaitDraw.add(nObject);\n\t\t}\n\t\tthis.rootContainer.markDrawContainer(\n\t\t\tthis,\n\t\t\t!this._needDraw && !this._awaitDraw.size || this.destroyed,\n\t\t);\n\t}\n\tdrawContainer() {\n\t\tconst {\n\t\t\t_node: node,\n\t\t\t_container: container,\n\t\t\t_awaitDraw: awaitDraw,\n\t\t} = this;\n\t\tif (!node || !container) { return; }\n\t\tthis.callHook('beforeDraw');\n\t\tconst needDraw = this._needDraw;\n\t\tthis._needDraw = false;\n\t\tconst list = [...awaitDraw];\n\t\tawaitDraw.clear();\n\t\tif (needDraw) { this.drawSelf(); }\n\t\tlist.map(c => c.draw());\n\t\tthis.iRender.draw(container, node);\n\t\tthis.callHook('drawn');\n\t}\n\tprivate _containers = new Set<Container>();\n\tmarkDrawContainer(\n\t\tcontainer: Container,\n\t\tremove = false,\n\t) {\n\t\tif (remove) {\n\t\t\tthis._containers.delete(container);\n\t\t} else {\n\t\t\tthis._containers.add(container);\n\t\t}\n\t\tmarkDraw(this);\n\t}\n\tdrawAll() {\n\t\tconst containers = this._containers;\n\t\tif (!containers.size) { return; }\n\t\tthis.callHook('beforeDrawAll');\n\t\tconst list = [...containers];\n\t\tlist.map(c => c.drawContainer());\n\t\tthis.callHook('drawnAll');\n\t}\n}\n","import { Component, Render, Marks } from './type';\nimport { nameSymbol, typeSymbol, renderSymbol } from './symbols';\n\n/** 组件标记函数 */\nexport interface Mark {\n\t<N extends Component<any, any>>(component: N): N;\n}\n\n/**\n * 创建组件标记函数\n */\nfunction Mark<S extends keyof Marks>(\n\tsymbol: S,\n\tvalue: Component[S],\n): Mark {\n\treturn component => {\n\t\tcomponent[symbol] = value as any;\n\t\treturn component;\n\t};\n}\n\n\n/** 标记组件名称 */\nexport function mName(name: string): Mark;\nexport function mName<N extends Component<any, any>>(\n\tname: string,\n\tcomponent: N,\n): N;\nexport function mName<N extends Component<any, any>>(\n\tname: string,\n\tcomponent?: N,\n): Mark | N {\n\tif (!component) { return Mark(nameSymbol, name); }\n\tcomponent[nameSymbol] = name;\n\treturn component;\n}\n\n/** 标记组件类型 */\nexport function mType(type?: 'native' | 'simple' | 'standard'): Mark;\nexport function mType<N extends Component<any, any>>(\n\ttype: 'native' | 'simple' | 'standard',\n\tcomponent: N,\n): N;\nexport function mType<N extends Component<any, any>>(\n\ttype?: 'native' | 'simple' | 'standard',\n\tcomponent?: N,\n): Mark | N {\n\tif (!component) { return Mark(typeSymbol, type); }\n\tcomponent[typeSymbol] = type;\n\treturn component;\n}\n/** 标记为简单组件 */\nexport function mSimple(): Mark;\nexport function mSimple<N extends Component<any, any>>(\n\tcomponent: N,\n): N;\nexport function mSimple<N extends Component<any, any>>(\n\tcomponent?: N,\n): Mark | N {\n\tif (!component) { return Mark(typeSymbol, 'simple'); }\n\tcomponent[typeSymbol] = 'simple';\n\treturn component;\n}\n/** 标记为原生组件 */\nexport function mNative(): Mark;\nexport function mNative<N extends Component<any, any>>(\n\tcomponent: N,\n): N;\nexport function mNative<N extends Component<any, any>>(\n\tcomponent?: N,\n): Mark | N {\n\tif (!component) { return Mark(typeSymbol, 'native'); }\n\tcomponent[typeSymbol] = 'native';\n\treturn component;\n}\n\n/** 标记独立的渲染函数 */\nexport function mRender(fn?: Marks[typeof renderSymbol]): Mark;\nexport function mRender<N extends Component<any, any>>(\n\tfn: Marks[typeof renderSymbol] | undefined,\n\tcomponent: N,\n): N;\nexport function mRender<N extends Component<any, any>>(\n\tfn?: Marks[typeof renderSymbol] | undefined,\n\tcomponent?: N,\n): Mark | N {\n\tif (!component) { return Mark(renderSymbol, fn); }\n\tcomponent[renderSymbol] = fn;\n\treturn component;\n}\n\nexport function create<P extends object>(\n\tc: Component<P, never>,\n): Component<P, never>;\nexport function create<\n\tP extends object = object,\n\tR extends object = object,\n>(c: Component<P, R>, r: Render<R>): Component<P, R>;\nexport function create<T extends Component<any, any>>(\n\tc: T,\n\tr?: Render,\n): T {\n\tif (typeof r === 'function') {\n\t\tc[renderSymbol] = r;\n\t}\n\treturn c;\n}\n\nexport function mark<N extends Component<any, any>>(\n\tcomponent: N,\n\t...marks: Mark[]\n): N {\n\tfor (const m of marks) { m(component); }\n\treturn component;\n}\n","import { install } from '.';\nimport * as monitorable from 'monitorable';\n\ninstall({ monitorable });\n\nexport * from '.'","import {\n\tMountProps,\n\tNeepElement,\n\tComponent,\n\tRootExposed,\n} from '../type';\nimport { isElement, createElement } from '../auxiliary';\nimport { isProduction } from '../constant';\nimport { devtools, getRender } from '../install';\nimport Container from './Container';\n\nexport default function render(\n\te?: NeepElement | Component,\n\tp: MountProps = {},\n): RootExposed {\n\tlet params = {...p};\n\tconst container =  new Container(\n\t\tgetRender(p.type),\n\t\tparams,\n\t\te === undefined ? [] : isElement(e) ? [e] : [createElement(e)],\n\t);\n\tif (!isProduction) {\n\t\tdevtools.renderHook(container);\n\t}\n\tconst { exposed } = container;\n\tReflect.defineProperty(exposed, '$update', {\n\t\tvalue(c?: NeepElement | Component) {\n\t\t\tcontainer.setChildren(c === undefined ? []\n\t\t\t\t: isElement(c) ? [c] : [createElement(c)]);\n\t\t\treturn exposed;\n\t\t},\n\t\tconfigurable: true,\n\t});\n\tReflect.defineProperty(exposed, '$mount', {\n\t\tvalue(target?: any) {\n\t\t\tif (exposed.$mounted) { return exposed; }\n\t\t\tif (target) {\n\t\t\t\tparams.target = target;\n\t\t\t\tcontainer.setProps(params);\n\t\t\t}\n\t\t\tcontainer.mount();\n\t\t\treturn exposed;\n\t\t},\n\t\tconfigurable: true,\n\t});\n\tReflect.defineProperty(exposed, '$unmount', {\n\t\tvalue() {\n\t\t\tif (!exposed.$mounted) { return; }\n\t\t\tif (exposed.$unmounted) { return; }\n\t\t\tif (exposed.$destroyed) { return container.destroy(); }\n\t\t\tcontainer.unmount();\n\t\t\treturn;\n\t\t},\n\t\tconfigurable: true,\n\t});\n\tif (params.target) {\n\t\tcontainer.mount();\n\t}\n\treturn exposed as any as RootExposed;\n}\n"],"names":["mode","monitorable","renders","Object","create","getRender","type","default","install","apis","render","list","Array","isArray","installRender","NeepError","Error","constructor","message","tag","ScopeSlot","SlotRender","Slot","Value","Container","Deliver","Template","Fragment","value","v","computed","isValue","encase","recover","setCurrent","fn","entity","oldEntity","current","$_valueIndex","ret","$_values","length","checkCurrent","name","initOnly","created","constructors","initContext","context","exposed","hooks","setHook","id","hook","$_hooks","safeify","set","Set","add","delete","callHook","watch","cb","stop","s","useValue","f","index","values","undefined","setValue","obj","opt","includes","Reflect","defineProperty","get","configurable","enumerable","expose","deliver","delivered","isElementSymbol","Symbol","for","typeSymbol","nameSymbol","renderSymbol","isElement","createElement","attrs","children","node","key","slot","ref","Tags","argv","args","props","on","k","onInfo","exec","elements","n","push","concat","simple","label","text","color","auxiliary","State","Life","Element","Dev","Constant","createMountedNode","recursive2iterable","it","getLastNode","tree","component","getFirstNode","getNodes","unmount","iRender","forEach","e","remove","replace","newTree","oldTree","next","parent","insert","updateList","source","createItem","newList","mountedMap","Map","src","findIndex","old","item","updateItem","splice","size","last","filter","t","has","i","o","updateAll","Math","min","max","createList","all","draw","createValue","substr","update","createAll","isNode","RegExp","String","Date","toISOString","placeholder","map","mount","getSlots","slots","native","nativeList","ownKeys","el","renderSlots","createSlots","inserted","setSlots","updateProps","oldProps","define","newKeys","nObject","newDelivered","$__neep__delivered","container","slotMap","childNodes","refresh","result","nodes","renderNode","execSimple","execSlot","normalize","Boolean","NeepObject","cfg","$parent","_obj$parent","$component","$isContainer","$created","$destroyed","destroyed","$mounted","mounted","$unmounted","unmounted","createExposed","this","_obj$parent2","isContainer","writable","h","createEntity","parentDelivered","_delayedRefresh","needRefresh","_needRefresh","_refresh","_refreshing","_render","canRefresh","_nodes","convert","_update","_destroy","destroy","__executed_destroy","_mount","__executed_mount","_unmount","__executed_mounted","_draw","nativeNodes","Entity","stopRender","changed","createExecutable","initRender","_stopRender","markDraw","toElement","_source$props","_source$props2","awaitDraw","requested","rootContainer","setChildren","_drawChildren","setProps","_drawContainer","content","_node","_container","drawSelf","drawChildren","drawContainer","_needDraw","_this$parent","_awaitDraw","markDrawContainer","needDraw","clear","c","_containers","window","requestAnimationFrame","drawAll","containers","Mark","symbol","r","marks","m","p","params","target"],"mappings":"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"}